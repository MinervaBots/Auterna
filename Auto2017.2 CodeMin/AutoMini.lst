;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15/09/2017 22:45:42
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040DA8  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x0DA8	0x20904F  	MOV	#2308, W15
0x0DAA	0x20FFF0  	MOV	#4095, W0
0x0DAC	0xB7A020  	MOV	WREG, SPLIM
0x0DAE	0x200000  	MOV	#0, W0
0x0DB0	0xB7A034  	MOV	WREG, PSVPAG
0x0DB2	0x200040  	MOV	#4, W0
0x0DB4	0xB72044  	IOR	CORCON
0x0DB6	0x000000020EBC  	CALL	3772
;AutoMini.c,4 :: 		void main() {
;AutoMini.c,5 :: 		init_robot();
0x0DBA	0x07FF72  	RCALL	_init_robot
;AutoMini.c,6 :: 		while(1){
L_main0:
;AutoMini.c,7 :: 		Sniffing();
0x0DBC	0x07FF86  	RCALL	_Sniffing
;AutoMini.c,8 :: 		}
0x0DBE	0x37FFFE  	BRA	L_main0
;AutoMini.c,10 :: 		}
L_end_main:
L__main_end_loop:
0x0DC0	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_init_robot:
;sensorFunction.c,58 :: 		void init_robot(){
;sensorFunction.c,60 :: 		ANSB= 0b110100110000000;
0x0CA0	0x781F8A  	PUSH	W10
0x0CA2	0x781F8B  	PUSH	W11
0x0CA4	0x269800  	MOV	#27008, W0
0x0CA6	0xB7A4E2  	MOV	WREG, ANSB
;sensorFunction.c,62 :: 		ANSA= 0b000000000000011;
0x0CA8	0x200030  	MOV	#3, W0
0x0CAA	0xB7A4E0  	MOV	WREG, ANSA
;sensorFunction.c,64 :: 		UART2_init(9600);
0x0CAC	0x22580A  	MOV	#9600, W10
0x0CAE	0x20000B  	MOV	#0, W11
0x0CB0	0x07FF23  	RCALL	_UART2_Init
;sensorFunction.c,68 :: 		TRISB= 0b100100110111111;
0x0CB2	0x249BF0  	MOV	#18879, W0
0x0CB4	0xB7A2C8  	MOV	WREG, TRISB
;sensorFunction.c,73 :: 		delay_ms(5000);
0x0CB6	0x200668  	MOV	#102, W8
0x0CB8	0x2B9CB7  	MOV	#47563, W7
L_init_robot7:
0x0CBA	0xED200E  	DEC	W7
0x0CBC	0x3AFFFE  	BRA NZ	L_init_robot7
0x0CBE	0xED2010  	DEC	W8
0x0CC0	0x3AFFFC  	BRA NZ	L_init_robot7
0x0CC2	0x000000  	NOP
;sensorFunction.c,75 :: 		}
L_end_init_robot:
0x0CC4	0x7805CF  	POP	W11
0x0CC6	0x78054F  	POP	W10
0x0CC8	0x060000  	RETURN
; end of _init_robot
_UART2_Init:
0x0AF8	0xFA0008  	LNK	#8
;__Lib_UART_12_p24_p33.c,380 :: 		
;__Lib_UART_12_p24_p33.c,383 :: 		
0x0AFA	0x205620  	MOV	#lo_addr(_UART2_Write), W0
0x0AFC	0x884810  	MOV	W0, _UART_Wr_Ptr
;__Lib_UART_12_p24_p33.c,384 :: 		
0x0AFE	0x2FFFF0  	MOV	#lo_addr(_UART2_Read), W0
0x0B00	0x8847F0  	MOV	W0, _UART_Rd_Ptr
;__Lib_UART_12_p24_p33.c,385 :: 		
0x0B02	0x2FFFF0  	MOV	#lo_addr(_UART2_Data_Ready), W0
0x0B04	0x8847E0  	MOV	W0, _UART_Rdy_Ptr
;__Lib_UART_12_p24_p33.c,386 :: 		
0x0B06	0x2FFFF0  	MOV	#lo_addr(_UART2_Tx_Idle), W0
0x0B08	0x884800  	MOV	W0, _UART_Tx_Idle_Ptr
;__Lib_UART_12_p24_p33.c,391 :: 		
0x0B0A	0xEF2230  	CLR	U2MODE
;__Lib_UART_12_p24_p33.c,392 :: 		
0x0B0C	0x280000  	MOV	#32768, W0
0x0B0E	0xB7A232  	MOV	WREG, U2STA
;__Lib_UART_12_p24_p33.c,396 :: 		
0x0B10	0xA96230  	BCLR	U2MODE, #3
;__Lib_UART_12_p24_p33.c,397 :: 		
0x0B12	0x07FEC2  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x0B14	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,399 :: 		
0x0B16	0x203E80  	MOV	#1000, W0
0x0B18	0x200001  	MOV	#0, W1
0x0B1A	0x07FE60  	RCALL	__Multiply_32x32
0x0B1C	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,401 :: 		
0x0B1E	0x07FEBF  	RCALL	_Get_Fosc_Per_Cyc
0x0B20	0xDE0041  	LSR	W0, #1, W0
0x0B22	0x400064  	ADD	W0, #4, W0
0x0B24	0x780080  	MOV	W0, W1
0x0B26	0x470060  	ADD	W14, #0, W0
0x0B28	0xBE880A  	MOV.D	W10, [W0]
L__UART2_Init120:
0x0B2A	0xE90081  	DEC	W1, W1
0x0B2C	0x350003  	BRA LT	L__UART2_Init121
0x0B2E	0xD01810  	SL	[W0], [W0++]
0x0B30	0xD29010  	RLC	[W0], [W0--]
0x0B32	0x37FFFB  	BRA	L__UART2_Init120
L__UART2_Init121:
;__Lib_UART_12_p24_p33.c,403 :: 		
0x0B34	0xBE9F82  	PUSH.D	W2
0x0B36	0xBE9F8A  	PUSH.D	W10
0x0B38	0xBE0002  	MOV.D	W2, W0
0x0B3A	0x90010E  	MOV	[W14+0], W2
0x0B3C	0x90019E  	MOV	[W14+2], W3
0x0B3E	0xEB0200  	CLR	W4
0x0B40	0x07FE56  	RCALL	__Modulus_32x32
0x0B42	0xBE054F  	POP.D	W10
0x0B44	0xBE014F  	POP.D	W2
0x0B46	0x980720  	MOV	W0, [W14+4]
0x0B48	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p24_p33.c,404 :: 		
0x0B4A	0xBE9F8A  	PUSH.D	W10
; tmp end address is: 4 (W2)
0x0B4C	0xBE0002  	MOV.D	W2, W0
0x0B4E	0x90010E  	MOV	[W14+0], W2
0x0B50	0x90019E  	MOV	[W14+2], W3
0x0B52	0xEB0200  	CLR	W4
0x0B54	0x07FE78  	RCALL	__Divide_32x32
0x0B56	0xBE054F  	POP.D	W10
; tmp start address is: 6 (W3)
0x0B58	0x780180  	MOV	W0, W3
0x0B5A	0x780201  	MOV	W1, W4
;__Lib_UART_12_p24_p33.c,406 :: 		
0x0B5C	0x470060  	ADD	W14, #0, W0
0x0B5E	0xD10150  	LSR	[++W0], W2
0x0B60	0xD380C0  	RRC	[--W0], W1
0x0B62	0x470064  	ADD	W14, #4, W0
0x0B64	0xE10830  	CP	W1, [W0++]
0x0B66	0xE19020  	CPB	W2, [W0--]
0x0B68	0x310007  	BRA GEU	L__UART2_Init66
L__UART2_Init122:
;__Lib_UART_12_p24_p33.c,407 :: 		
0x0B6A	0x418061  	ADD	W3, #1, W0
0x0B6C	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x0B6E	0x780280  	MOV	W0, W5
0x0B70	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x0B72	0x780105  	MOV	W5, W2
0x0B74	0x780186  	MOV	W6, W3
0x0B76	0x370002  	BRA	L_UART2_Init38
L__UART2_Init66:
;__Lib_UART_12_p24_p33.c,406 :: 		
0x0B78	0x780103  	MOV	W3, W2
0x0B7A	0x780184  	MOV	W4, W3
;__Lib_UART_12_p24_p33.c,407 :: 		
L_UART2_Init38:
;__Lib_UART_12_p24_p33.c,410 :: 		
; tmp start address is: 4 (W2)
0x0B7C	0x718002  	IOR	W3, W2, W0
0x0B7E	0x3A0033  	BRA NZ	L__UART2_Init68
L__UART2_Init123:
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,412 :: 		
0x0B80	0x07FE8B  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x0B82	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,414 :: 		
0x0B84	0x203E80  	MOV	#1000, W0
0x0B86	0x200001  	MOV	#0, W1
0x0B88	0x07FE29  	RCALL	__Multiply_32x32
0x0B8A	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,416 :: 		
0x0B8C	0x07FE88  	RCALL	_Get_Fosc_Per_Cyc
0x0B8E	0xDE0041  	LSR	W0, #1, W0
0x0B90	0xECA000  	INC2	W0
0x0B92	0x780080  	MOV	W0, W1
0x0B94	0x470060  	ADD	W14, #0, W0
0x0B96	0xBE880A  	MOV.D	W10, [W0]
L__UART2_Init124:
0x0B98	0xE90081  	DEC	W1, W1
0x0B9A	0x350003  	BRA LT	L__UART2_Init125
0x0B9C	0xD01810  	SL	[W0], [W0++]
0x0B9E	0xD29010  	RLC	[W0], [W0--]
0x0BA0	0x37FFFB  	BRA	L__UART2_Init124
L__UART2_Init125:
;__Lib_UART_12_p24_p33.c,418 :: 		
0x0BA2	0xBE9F82  	PUSH.D	W2
0x0BA4	0xBE0002  	MOV.D	W2, W0
0x0BA6	0x90010E  	MOV	[W14+0], W2
0x0BA8	0x90019E  	MOV	[W14+2], W3
0x0BAA	0xEB0200  	CLR	W4
0x0BAC	0x07FE20  	RCALL	__Modulus_32x32
0x0BAE	0xBE014F  	POP.D	W2
0x0BB0	0x980720  	MOV	W0, [W14+4]
0x0BB2	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p24_p33.c,419 :: 		
0x0BB4	0xBE0002  	MOV.D	W2, W0
0x0BB6	0x90010E  	MOV	[W14+0], W2
0x0BB8	0x90019E  	MOV	[W14+2], W3
0x0BBA	0xEB0200  	CLR	W4
0x0BBC	0x07FE44  	RCALL	__Divide_32x32
; tmp end address is: 4 (W2)
; tmp start address is: 6 (W3)
0x0BBE	0x780180  	MOV	W0, W3
0x0BC0	0x780201  	MOV	W1, W4
;__Lib_UART_12_p24_p33.c,421 :: 		
0x0BC2	0x470060  	ADD	W14, #0, W0
0x0BC4	0xD10150  	LSR	[++W0], W2
0x0BC6	0xD380C0  	RRC	[--W0], W1
0x0BC8	0x470064  	ADD	W14, #4, W0
0x0BCA	0xE10830  	CP	W1, [W0++]
0x0BCC	0xE19020  	CPB	W2, [W0--]
0x0BCE	0x310007  	BRA GEU	L__UART2_Init67
L__UART2_Init126:
;__Lib_UART_12_p24_p33.c,422 :: 		
0x0BD0	0x418061  	ADD	W3, #1, W0
0x0BD2	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x0BD4	0x780280  	MOV	W0, W5
0x0BD6	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x0BD8	0x780105  	MOV	W5, W2
0x0BDA	0x780186  	MOV	W6, W3
0x0BDC	0x370002  	BRA	L_UART2_Init40
L__UART2_Init67:
;__Lib_UART_12_p24_p33.c,421 :: 		
0x0BDE	0x780103  	MOV	W3, W2
0x0BE0	0x780184  	MOV	W4, W3
;__Lib_UART_12_p24_p33.c,422 :: 		
L_UART2_Init40:
;__Lib_UART_12_p24_p33.c,424 :: 		
; tmp start address is: 4 (W2)
0x0BE2	0xA86230  	BSET	U2MODE, #3
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,425 :: 		
0x0BE4	0x370000  	BRA	L_UART2_Init39
L__UART2_Init68:
;__Lib_UART_12_p24_p33.c,410 :: 		
;__Lib_UART_12_p24_p33.c,425 :: 		
L_UART2_Init39:
;__Lib_UART_12_p24_p33.c,427 :: 		
; tmp start address is: 4 (W2)
0x0BE6	0x510061  	SUB	W2, #1, W0
0x0BE8	0x5980E0  	SUBB	W3, #0, W1
; tmp end address is: 4 (W2)
; tmp start address is: 0 (W0)
0x0BEA	0x8811C0  	MOV	W0, U2BRG
; tmp end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,430 :: 		
0x0BEC	0xA92232  	BCLR	U2STA, #1
;__Lib_UART_12_p24_p33.c,432 :: 		
0x0BEE	0xA8E231  	BSET	U2MODE, #15
;__Lib_UART_12_p24_p33.c,433 :: 		
0x0BF0	0xA84233  	BSET	U2STA, #10
;__Lib_UART_12_p24_p33.c,435 :: 		
0x0BF2	0x07FE57  	RCALL	_Delay_100ms
0x0BF4	0x07FE56  	RCALL	_Delay_100ms
;__Lib_UART_12_p24_p33.c,437 :: 		
L_end_UART2_Init:
0x0BF6	0xFA8000  	ULNK
0x0BF8	0x060000  	RETURN
; end of _UART2_Init
_Get_Fosc_kHz:
;__Lib_Delays.c,38 :: 		unsigned long Get_Fosc_kHz() {
;__Lib_Delays.c,39 :: 		return Clock_kHz();
0x0898	0x21F400  	MOV	#8000, W0
0x089A	0x200001  	MOV	#0, W1
;__Lib_Delays.c,40 :: 		}
L_end_Get_Fosc_kHz:
0x089C	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Get_Fosc_Per_Cyc:
;__Lib_Delays.c,63 :: 		unsigned int Get_Fosc_Per_Cyc() {
;__Lib_Delays.c,64 :: 		return __FOSC_PER_CYC;
0x089E	0x200020  	MOV	#2, W0
;__Lib_Delays.c,65 :: 		}
L_end_Get_Fosc_Per_Cyc:
0x08A0	0x060000  	RETURN
; end of _Get_Fosc_Per_Cyc
_Delay_100ms:
;__Lib_Delays.c,666 :: 		void Delay_100ms()
;__Lib_Delays.c,668 :: 		Delay_ms(100);
0x08A2	0x200038  	MOV	#3, W8
0x08A4	0x208D57  	MOV	#2261, W7
L_Delay_100ms31:
0x08A6	0xED200E  	DEC	W7
0x08A8	0x3AFFFE  	BRA NZ	L_Delay_100ms31
0x08AA	0xED2010  	DEC	W8
0x08AC	0x3AFFFC  	BRA NZ	L_Delay_100ms31
;__Lib_Delays.c,669 :: 		}
L_end_Delay_100ms:
0x08AE	0x060000  	RETURN
; end of _Delay_100ms
__Multiply_32x32:
0x07DC	0xFA0000  	LNK	#0
;__Lib_Math.c,43 :: 		
;__Lib_Math.c,46 :: 		
0x07DE	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.c,47 :: 		
0x07E0	0x880050  	MOV	W0, W5
;__Lib_Math.c,48 :: 		
0x07E2	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.c,49 :: 		
0x07E4	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,50 :: 		
0x07E6	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.c,51 :: 		
0x07E8	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,54 :: 		
L_end__Multiply_32x32:
0x07EA	0xFA8000  	ULNK
0x07EC	0x060000  	RETURN
; end of __Multiply_32x32
__Modulus_32x32:
0x07EE	0xFA0000  	LNK	#0
;__Lib_Math.c,162 :: 		
;__Lib_Math.c,164 :: 		
0x07F0	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.c,166 :: 		
0x07F2	0x000000040842  	GOTO	the_end_Modulus_32x32
;__Lib_Math.c,171 :: 		
Modulus_32x32___testsus:
;__Lib_Math.c,172 :: 		
0x07F6	0xE20008  	CP0	W4
;__Lib_Math.c,173 :: 		
0x07F8	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.c,175 :: 		
0x07FA	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,176 :: 		
0x07FC	0x060000  	RETURN
;__Lib_Math.c,178 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.c,179 :: 		
0x07FE	0x781F81  	MOV	W1, [W15++]
;__Lib_Math.c,180 :: 		
0x0800	0xE20002  	CP0	W1
;__Lib_Math.c,181 :: 		
0x0802	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.c,182 :: 		
0x0804	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,183 :: 		
0x0806	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,184 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.c,185 :: 		
0x0808	0xE20006  	CP0	W3
;__Lib_Math.c,186 :: 		
0x080A	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.c,187 :: 		
0x080C	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,188 :: 		
0x080E	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,189 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.c,190 :: 		
0x0810	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,191 :: 		
0x0812	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,192 :: 		
0x0814	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.c,193 :: 		
0x0816	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,194 :: 		
0x0818	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,195 :: 		
Modulus_32x32_exitr:
;__Lib_Math.c,196 :: 		
0x081A	0x060000  	RETURN
;__Lib_Math.c,197 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.c,198 :: 		
0x081C	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.c,199 :: 		
0x081E	0xBE8004  	MOV.D	W4, W0
;__Lib_Math.c,200 :: 		
0x0820	0x060000  	RETURN
;__Lib_Math.c,201 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.c,202 :: 		
0x0822	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,203 :: 		
0x0824	0x200206  	MOV	#32, W6
;__Lib_Math.c,204 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.c,205 :: 		
0x0826	0xD00000  	SL	W0, W0
;__Lib_Math.c,206 :: 		
0x0828	0xD28081  	RLC	W1, W1
;__Lib_Math.c,207 :: 		
0x082A	0xD28204  	RLC	W4, W4
;__Lib_Math.c,208 :: 		
0x082C	0xD28285  	RLC	W5, W5
;__Lib_Math.c,209 :: 		
0x082E	0xA80000  	BSET	W0, #0
;__Lib_Math.c,210 :: 		
0x0830	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,211 :: 		
0x0832	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,212 :: 		
0x0834	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.c,213 :: 		
0x0836	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,214 :: 		
0x0838	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,215 :: 		
0x083A	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,216 :: 		
Modulus_32x32_iterate:
;__Lib_Math.c,217 :: 		
0x083C	0xE90306  	DEC	W6, W6
;__Lib_Math.c,218 :: 		
0x083E	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.c,219 :: 		
0x0840	0x060000  	RETURN
;__Lib_Math.c,222 :: 		
the_end_Modulus_32x32:
;__Lib_Math.c,225 :: 		
L_end__Modulus_32x32:
0x0842	0xFA8000  	ULNK
0x0844	0x060000  	RETURN
; end of __Modulus_32x32
__Divide_32x32:
0x0846	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x0848	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x084A	0x000000040894  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x084E	0xE20008  	CP0	W4
;__Lib_Math.c,90 :: 		
0x0850	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x0852	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x0854	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x0856	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.c,97 :: 		
0x0858	0xE20002  	CP0	W1
;__Lib_Math.c,98 :: 		
0x085A	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x085C	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,100 :: 		
0x085E	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x0860	0xE20006  	CP0	W3
;__Lib_Math.c,103 :: 		
0x0862	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x0864	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,105 :: 		
0x0866	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x0868	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x086A	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,109 :: 		
0x086C	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x086E	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,111 :: 		
0x0870	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x0872	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x0874	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,116 :: 		
0x0876	0x200206  	MOV	#32, W6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x0878	0xD00000  	SL	W0, W0
;__Lib_Math.c,119 :: 		
0x087A	0xD28081  	RLC	W1, W1
;__Lib_Math.c,120 :: 		
0x087C	0xD28204  	RLC	W4, W4
;__Lib_Math.c,121 :: 		
0x087E	0xD28285  	RLC	W5, W5
;__Lib_Math.c,122 :: 		
0x0880	0xA80000  	BSET	W0, #0
;__Lib_Math.c,123 :: 		
0x0882	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,124 :: 		
0x0884	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,125 :: 		
0x0886	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x0888	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,127 :: 		
0x088A	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,128 :: 		
0x088C	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x088E	0xE90306  	DEC	W6, W6
;__Lib_Math.c,131 :: 		
0x0890	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x0892	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x0894	0xFA8000  	ULNK
0x0896	0x060000  	RETURN
; end of __Divide_32x32
_Sniffing:
0x0CCA	0xFA01FE  	LNK	#510
;sensorFunction.c,77 :: 		void Sniffing(){
;sensorFunction.c,81 :: 		if(ADC1_Read(0)&& ADC1_Read(1) > 1000){
0x0CCC	0x781F8A  	PUSH	W10
0x0CCE	0x781F8B  	PUSH	W11
0x0CD0	0x781F8C  	PUSH	W12
0x0CD2	0x781F8D  	PUSH	W13
0x0CD4	0xEF2014  	CLR	W10
0x0CD6	0x07FF91  	RCALL	_ADC1_Read
0x0CD8	0xE20000  	CP0	W0
0x0CDA	0x320030  	BRA Z	L__Sniffing18
L__Sniffing32:
0x0CDC	0x20001A  	MOV	#1, W10
0x0CDE	0x07FF8D  	RCALL	_ADC1_Read
0x0CE0	0x203E81  	MOV	#1000, W1
0x0CE2	0xE10001  	CP	W0, W1
0x0CE4	0x36002B  	BRA LEU	L__Sniffing17
L__Sniffing33:
L__Sniffing16:
;sensorFunction.c,83 :: 		int EdgeRight = ADC1_read(1);
0x0CE6	0x20001A  	MOV	#1, W10
0x0CE8	0x07FF88  	RCALL	_ADC1_Read
; EdgeRight start address is: 10 (W5)
0x0CEA	0x780280  	MOV	W0, W5
;sensorFunction.c,84 :: 		int EdgeLeft = ADC1_read(0);
0x0CEC	0xEF2014  	CLR	W10
0x0CEE	0x07FF85  	RCALL	_ADC1_Read
;sensorFunction.c,86 :: 		IntToStr(EdgeLeft,left);
0x0CF0	0x4700E0  	ADD	W14, #0, W1
0x0CF2	0x780581  	MOV	W1, W11
0x0CF4	0x780500  	MOV	W0, W10
0x0CF6	0x07FED8  	RCALL	_IntToStr
;sensorFunction.c,87 :: 		IntToStr(EdgeRight,right);
0x0CF8	0x200FF0  	MOV	#255, W0
0x0CFA	0x470000  	ADD	W14, W0, W0
0x0CFC	0x780580  	MOV	W0, W11
0x0CFE	0x780505  	MOV	W5, W10
; EdgeRight end address is: 10 (W5)
0x0D00	0x07FED3  	RCALL	_IntToStr
;sensorFunction.c,89 :: 		UART2_Write_Text(left);
0x0D02	0x470060  	ADD	W14, #0, W0
0x0D04	0x780500  	MOV	W0, W10
0x0D06	0x07FFBB  	RCALL	_UART2_Write_Text
;sensorFunction.c,90 :: 		UART2_Write_Text("Sensor de borda esquerda dentro da arena");
0x0D08	0x20858A  	MOV	#lo_addr(?lstr6_sensorFunction), W10
0x0D0A	0x07FFB9  	RCALL	_UART2_Write_Text
;sensorFunction.c,91 :: 		UART2_Write_Text("/n");
0x0D0C	0x2082DA  	MOV	#lo_addr(?lstr7_sensorFunction), W10
0x0D0E	0x07FFB7  	RCALL	_UART2_Write_Text
;sensorFunction.c,93 :: 		UART2_Write_Text(right);
0x0D10	0x200FF0  	MOV	#255, W0
0x0D12	0x470000  	ADD	W14, W0, W0
0x0D14	0x780500  	MOV	W0, W10
0x0D16	0x07FFB3  	RCALL	_UART2_Write_Text
;sensorFunction.c,94 :: 		UART2_Write_Text("Sensor de borda direita dentro da arena");
0x0D18	0x20830A  	MOV	#lo_addr(?lstr8_sensorFunction), W10
0x0D1A	0x07FFB1  	RCALL	_UART2_Write_Text
;sensorFunction.c,95 :: 		Uart2_Write_Text("/n");
0x0D1C	0x20881A  	MOV	#lo_addr(?lstr9_sensorFunction), W10
0x0D1E	0x07FFAF  	RCALL	_UART2_Write_Text
;sensorFunction.c,97 :: 		if(mySensorControl == 0){
0x0D20	0x209580  	MOV	#lo_addr(_mySensorControl), W0
0x0D22	0xE10060  	CP	W0, #0
0x0D24	0x3A0006  	BRA NZ	L_Sniffing12
L__Sniffing34:
;sensorFunction.c,98 :: 		MotorController(1,Curva_Direita);
0x0D26	0x20000C  	MOV	#0, W12
0x0D28	0x23F80D  	MOV	#16256, W13
0x0D2A	0x20000A  	MOV	#0, W10
0x0D2C	0x23F80B  	MOV	#16256, W11
0x0D2E	0x07FF6A  	RCALL	_MotorController
;sensorFunction.c,99 :: 		}
0x0D30	0x370005  	BRA	L_Sniffing13
L_Sniffing12:
;sensorFunction.c,101 :: 		MotorController(1,mySensorControl());
0x0D32	0x07FE12  	RCALL	_mySensorControl
0x0D34	0xBE0600  	MOV.D	W0, W12
0x0D36	0x20000A  	MOV	#0, W10
0x0D38	0x23F80B  	MOV	#16256, W11
0x0D3A	0x07FF64  	RCALL	_MotorController
;sensorFunction.c,102 :: 		}
L_Sniffing13:
;sensorFunction.c,81 :: 		if(ADC1_Read(0)&& ADC1_Read(1) > 1000){
L__Sniffing18:
L__Sniffing17:
;sensorFunction.c,106 :: 		if(ADC1_Read(1) <1000){
0x0D3C	0x20001A  	MOV	#1, W10
0x0D3E	0x07FF5D  	RCALL	_ADC1_Read
0x0D40	0x203E81  	MOV	#1000, W1
0x0D42	0xE10001  	CP	W0, W1
0x0D44	0x310014  	BRA GEU	L_Sniffing14
L__Sniffing35:
;sensorFunction.c,107 :: 		int EdgeRight = ADC1_read(1);
0x0D46	0x20001A  	MOV	#1, W10
0x0D48	0x07FF58  	RCALL	_ADC1_Read
;sensorFunction.c,108 :: 		IntToStr(EdgeRight,right);
0x0D4A	0x200FF1  	MOV	#255, W1
0x0D4C	0x470081  	ADD	W14, W1, W1
0x0D4E	0x780581  	MOV	W1, W11
0x0D50	0x780500  	MOV	W0, W10
0x0D52	0x07FEAA  	RCALL	_IntToStr
;sensorFunction.c,109 :: 		UART2_Write_Text(right);
0x0D54	0x200FF0  	MOV	#255, W0
0x0D56	0x470000  	ADD	W14, W0, W0
0x0D58	0x780500  	MOV	W0, W10
0x0D5A	0x07FF91  	RCALL	_UART2_Write_Text
;sensorFunction.c,111 :: 		UART2_Write_Text("Sensor de borda direita fora da arena");
0x0D5C	0x208B6A  	MOV	#lo_addr(?lstr10_sensorFunction), W10
0x0D5E	0x07FF8F  	RCALL	_UART2_Write_Text
;sensorFunction.c,112 :: 		Uart2_Write_Text("/n");
0x0D60	0x2082AA  	MOV	#lo_addr(?lstr11_sensorFunction), W10
0x0D62	0x07FF8D  	RCALL	_UART2_Write_Text
;sensorFunction.c,114 :: 		MotorController(1,Curva_Esquerda);
0x0D64	0x20000C  	MOV	#0, W12
0x0D66	0x2BF80D  	MOV	#49024, W13
0x0D68	0x20000A  	MOV	#0, W10
0x0D6A	0x23F80B  	MOV	#16256, W11
0x0D6C	0x07FF4B  	RCALL	_MotorController
;sensorFunction.c,115 :: 		}
L_Sniffing14:
;sensorFunction.c,116 :: 		if(ADC1_Read(0) <1000){
0x0D6E	0xEF2014  	CLR	W10
0x0D70	0x07FF44  	RCALL	_ADC1_Read
0x0D72	0x203E81  	MOV	#1000, W1
0x0D74	0xE10001  	CP	W0, W1
0x0D76	0x310012  	BRA GEU	L_Sniffing15
L__Sniffing36:
;sensorFunction.c,117 :: 		int EdgeLeft = ADC1_read(0);
0x0D78	0xEF2014  	CLR	W10
0x0D7A	0x07FF3F  	RCALL	_ADC1_Read
;sensorFunction.c,118 :: 		IntToStr(EdgeLeft,left);
0x0D7C	0x4700E0  	ADD	W14, #0, W1
0x0D7E	0x780581  	MOV	W1, W11
0x0D80	0x780500  	MOV	W0, W10
0x0D82	0x07FE92  	RCALL	_IntToStr
;sensorFunction.c,119 :: 		UART2_Write_Text(left);
0x0D84	0x470060  	ADD	W14, #0, W0
0x0D86	0x780500  	MOV	W0, W10
0x0D88	0x07FF7A  	RCALL	_UART2_Write_Text
;sensorFunction.c,120 :: 		UART2_Write_Text("Sensor de borda esquerda fora da arena");
0x0D8A	0x20800A  	MOV	#lo_addr(?lstr12_sensorFunction), W10
0x0D8C	0x07FF78  	RCALL	_UART2_Write_Text
;sensorFunction.c,121 :: 		Uart2_Write_Text("/n");
0x0D8E	0x20827A  	MOV	#lo_addr(?lstr13_sensorFunction), W10
0x0D90	0x07FF76  	RCALL	_UART2_Write_Text
;sensorFunction.c,123 :: 		MotorController(1,Curva_Direita);
0x0D92	0x20000C  	MOV	#0, W12
0x0D94	0x23F80D  	MOV	#16256, W13
0x0D96	0x20000A  	MOV	#0, W10
0x0D98	0x23F80B  	MOV	#16256, W11
0x0D9A	0x07FF34  	RCALL	_MotorController
;sensorFunction.c,125 :: 		}
L_Sniffing15:
;sensorFunction.c,126 :: 		}
L_end_Sniffing:
0x0D9C	0x7806CF  	POP	W13
0x0D9E	0x78064F  	POP	W12
0x0DA0	0x7805CF  	POP	W11
0x0DA2	0x78054F  	POP	W10
0x0DA4	0xFA8000  	ULNK
0x0DA6	0x060000  	RETURN
; end of _Sniffing
_ADC1_Read:
0x0BFA	0xFA0000  	LNK	#0
;__Lib_ADC_1_24FXXKMX02.c,65 :: 		
;__Lib_ADC_1_24FXXKMX02.c,66 :: 		
0x0BFC	0x07FE59  	RCALL	_ADC1_Init
;__Lib_ADC_1_24FXXKMX02.c,67 :: 		
0x0BFE	0x07FE65  	RCALL	_ADC1_Get_Sample
;__Lib_ADC_1_24FXXKMX02.c,68 :: 		
L_end_ADC1_Read:
0x0C00	0xFA8000  	ULNK
0x0C02	0x060000  	RETURN
; end of _ADC1_Read
_ADC1_Init:
0x08B0	0xFA0000  	LNK	#0
;__Lib_ADC_1_24FXXKMX02.c,13 :: 		
;__Lib_ADC_1_24FXXKMX02.c,14 :: 		
0x08B2	0x208CA0  	MOV	#lo_addr(_ADC1_Get_Sample), W0
0x08B4	0x8847D0  	MOV	W0, _ADC_Get_Sample_Ptr
;__Lib_ADC_1_24FXXKMX02.c,16 :: 		
0x08B6	0x204700  	MOV	#1136, W0
0x08B8	0xB7A340  	MOV	WREG, ADCON1
;__Lib_ADC_1_24FXXKMX02.c,17 :: 		
0x08BA	0xEF2342  	CLR	ADCON2
;__Lib_ADC_1_24FXXKMX02.c,19 :: 		
0x08BC	0x21F3F0  	MOV	#7999, W0
0x08BE	0xB7A344  	MOV	WREG, ADCON3
;__Lib_ADC_1_24FXXKMX02.c,20 :: 		
0x08C0	0xEF2350  	CLR	ADCSSL
;__Lib_ADC_1_24FXXKMX02.c,21 :: 		
0x08C2	0xA8E341  	BSET	ADCON1, #15
;__Lib_ADC_1_24FXXKMX02.c,23 :: 		
0x08C4	0xA82340  	BSET	ADCON1, #1
;__Lib_ADC_1_24FXXKMX02.c,24 :: 		
L_end_ADC1_Init:
0x08C6	0xFA8000  	ULNK
0x08C8	0x060000  	RETURN
; end of _ADC1_Init
_ADC1_Get_Sample:
0x08CA	0xFA0000  	LNK	#0
;__Lib_ADC_1_24FXXKMX02.c,37 :: 		
;__Lib_ADC_1_24FXXKMX02.c,38 :: 		
0x08CC	0xE15061  	CP	W10, #1
0x08CE	0x3E0005  	BRA GTU	L_ADC1_Get_Sample0
L__ADC1_Get_Sample38:
;__Lib_ADC_1_24FXXKMX02.c,39 :: 		
0x08D0	0x200010  	MOV	#1, W0
0x08D2	0xDD008A  	SL	W0, W10, W1
0x08D4	0x204E00  	MOV	#lo_addr(ANSA), W0
0x08D6	0x708810  	IOR	W1, [W0], [W0]
0x08D8	0x370035  	BRA	L_ADC1_Get_Sample1
L_ADC1_Get_Sample0:
;__Lib_ADC_1_24FXXKMX02.c,40 :: 		
0x08DA	0xE15061  	CP	W10, #1
0x08DC	0x360008  	BRA LEU	L__ADC1_Get_Sample28
L__ADC1_Get_Sample39:
0x08DE	0xE15065  	CP	W10, #5
0x08E0	0x3E0006  	BRA GTU	L__ADC1_Get_Sample27
L__ADC1_Get_Sample40:
L__ADC1_Get_Sample26:
;__Lib_ADC_1_24FXXKMX02.c,41 :: 		
0x08E2	0x5500E2  	SUB	W10, #2, W1
0x08E4	0x200010  	MOV	#1, W0
0x08E6	0xDD0081  	SL	W0, W1, W1
0x08E8	0x204E20  	MOV	#lo_addr(ANSB), W0
0x08EA	0x708810  	IOR	W1, [W0], [W0]
0x08EC	0x37002B  	BRA	L_ADC1_Get_Sample5
;__Lib_ADC_1_24FXXKMX02.c,40 :: 		
L__ADC1_Get_Sample28:
L__ADC1_Get_Sample27:
;__Lib_ADC_1_24FXXKMX02.c,42 :: 		
0x08EE	0xE1506C  	CP	W10, #12
0x08F0	0x360008  	BRA LEU	L__ADC1_Get_Sample30
L__ADC1_Get_Sample41:
0x08F2	0xE1506E  	CP	W10, #14
0x08F4	0x3E0006  	BRA GTU	L__ADC1_Get_Sample29
L__ADC1_Get_Sample42:
L__ADC1_Get_Sample25:
;__Lib_ADC_1_24FXXKMX02.c,43 :: 		
0x08F6	0x5500EB  	SUB	W10, #11, W1
0x08F8	0x200010  	MOV	#1, W0
0x08FA	0xDD0081  	SL	W0, W1, W1
0x08FC	0x204E00  	MOV	#lo_addr(ANSA), W0
0x08FE	0x708810  	IOR	W1, [W0], [W0]
0x0900	0x370021  	BRA	L_ADC1_Get_Sample9
;__Lib_ADC_1_24FXXKMX02.c,42 :: 		
L__ADC1_Get_Sample30:
L__ADC1_Get_Sample29:
;__Lib_ADC_1_24FXXKMX02.c,44 :: 		
0x0902	0xE1506F  	CP	W10, #15
0x0904	0x3A0004  	BRA NZ	L_ADC1_Get_Sample10
L__ADC1_Get_Sample43:
;__Lib_ADC_1_24FXXKMX02.c,45 :: 		
0x0906	0x200101  	MOV	#16, W1
0x0908	0x204E20  	MOV	#lo_addr(ANSB), W0
0x090A	0x708810  	IOR	W1, [W0], [W0]
0x090C	0x37001B  	BRA	L_ADC1_Get_Sample11
L_ADC1_Get_Sample10:
;__Lib_ADC_1_24FXXKMX02.c,46 :: 		
0x090E	0xE15070  	CP	W10, #16
0x0910	0x3A0004  	BRA NZ	L_ADC1_Get_Sample12
L__ADC1_Get_Sample44:
;__Lib_ADC_1_24FXXKMX02.c,47 :: 		
0x0912	0x200101  	MOV	#16, W1
0x0914	0x204E00  	MOV	#lo_addr(ANSA), W0
0x0916	0x708810  	IOR	W1, [W0], [W0]
0x0918	0x370015  	BRA	L_ADC1_Get_Sample13
L_ADC1_Get_Sample12:
;__Lib_ADC_1_24FXXKMX02.c,48 :: 		
0x091A	0xE15070  	CP	W10, #16
0x091C	0x360008  	BRA LEU	L__ADC1_Get_Sample32
L__ADC1_Get_Sample45:
0x091E	0xE15075  	CP	W10, #21
0x0920	0x3E0006  	BRA GTU	L__ADC1_Get_Sample31
L__ADC1_Get_Sample46:
L__ADC1_Get_Sample24:
;__Lib_ADC_1_24FXXKMX02.c,49 :: 		
0x0922	0x5500EC  	SUB	W10, #12, W1
0x0924	0x200010  	MOV	#1, W0
0x0926	0xDD0081  	SL	W0, W1, W1
0x0928	0x204E20  	MOV	#lo_addr(ANSB), W0
0x092A	0x708810  	IOR	W1, [W0], [W0]
0x092C	0x37000B  	BRA	L_ADC1_Get_Sample17
;__Lib_ADC_1_24FXXKMX02.c,48 :: 		
L__ADC1_Get_Sample32:
L__ADC1_Get_Sample31:
;__Lib_ADC_1_24FXXKMX02.c,50 :: 		
0x092E	0xE15068  	CP	W10, #8
0x0930	0x360009  	BRA LEU	L__ADC1_Get_Sample34
L__ADC1_Get_Sample47:
0x0932	0xE1506C  	CP	W10, #12
0x0934	0x3E0007  	BRA GTU	L__ADC1_Get_Sample33
L__ADC1_Get_Sample48:
L__ADC1_Get_Sample23:
;__Lib_ADC_1_24FXXKMX02.c,51 :: 		
0x0936	0x15006C  	SUBR	W10, #12, W0
0x0938	0xDD0041  	SL	W0, #1, W0
0x093A	0x450080  	ADD	W10, W0, W1
0x093C	0x200010  	MOV	#1, W0
0x093E	0xDD0081  	SL	W0, W1, W1
0x0940	0x204E20  	MOV	#lo_addr(ANSB), W0
0x0942	0x708810  	IOR	W1, [W0], [W0]
;__Lib_ADC_1_24FXXKMX02.c,50 :: 		
L__ADC1_Get_Sample34:
L__ADC1_Get_Sample33:
;__Lib_ADC_1_24FXXKMX02.c,51 :: 		
L_ADC1_Get_Sample17:
L_ADC1_Get_Sample13:
L_ADC1_Get_Sample11:
L_ADC1_Get_Sample9:
L_ADC1_Get_Sample5:
L_ADC1_Get_Sample1:
;__Lib_ADC_1_24FXXKMX02.c,53 :: 		
0x0944	0x881A4A  	MOV	W10, AD1CHS
;__Lib_ADC_1_24FXXKMX02.c,55 :: 		
0x0946	0xA92340  	BCLR	ADCON1, #1
;__Lib_ADC_1_24FXXKMX02.c,57 :: 		
L_ADC1_Get_Sample21:
0x0948	0xAF0340  	BTSC	ADCON1, #0
0x094A	0x370001  	BRA	L_ADC1_Get_Sample22
;__Lib_ADC_1_24FXXKMX02.c,58 :: 		
0x094C	0x37FFFD  	BRA	L_ADC1_Get_Sample21
L_ADC1_Get_Sample22:
;__Lib_ADC_1_24FXXKMX02.c,59 :: 		
0x094E	0xA90340  	BCLR	ADCON1, #0
;__Lib_ADC_1_24FXXKMX02.c,60 :: 		
0x0950	0xA82340  	BSET	ADCON1, #1
;__Lib_ADC_1_24FXXKMX02.c,62 :: 		
0x0952	0xBF8300  	MOV	ADCBUF0, WREG
;__Lib_ADC_1_24FXXKMX02.c,63 :: 		
L_end_ADC1_Get_Sample:
0x0954	0xFA8000  	ULNK
0x0956	0x060000  	RETURN
; end of _ADC1_Get_Sample
_IntToStr:
0x0AA8	0xFA0000  	LNK	#0
;__Lib_Conversions.c,146 :: 		
;__Lib_Conversions.c,152 :: 		
0x0AAA	0x781F8A  	PUSH	W10
; negative start address is: 8 (W4)
0x0AAC	0xEF2008  	CLR	W4
;__Lib_Conversions.c,153 :: 		
; inword start address is: 0 (W0)
0x0AAE	0x78000A  	MOV	W10, W0
;__Lib_Conversions.c,154 :: 		
0x0AB0	0xE15060  	CP	W10, #0
0x0AB2	0x3D0003  	BRA GE	L__IntToStr99
L__IntToStr133:
; inword end address is: 0 (W0)
;__Lib_Conversions.c,155 :: 		
0x0AB4	0x200014  	MOV	#1, W4
;__Lib_Conversions.c,156 :: 		
; inword start address is: 0 (W0)
0x0AB6	0x150060  	SUBR	W10, #0, W0
; inword end address is: 0 (W0)
; negative end address is: 8 (W4)
;__Lib_Conversions.c,157 :: 		
0x0AB8	0x370000  	BRA	L_IntToStr23
L__IntToStr99:
;__Lib_Conversions.c,154 :: 		
;__Lib_Conversions.c,157 :: 		
L_IntToStr23:
;__Lib_Conversions.c,158 :: 		
; inword start address is: 0 (W0)
; negative start address is: 8 (W4)
0x0ABA	0x780500  	MOV	W0, W10
; inword end address is: 0 (W0)
0x0ABC	0x07FD2E  	RCALL	_WordToStr
;__Lib_Conversions.c,160 :: 		
; i start address is: 6 (W3)
0x0ABE	0x200063  	MOV	#6, W3
; negative end address is: 8 (W4)
; i end address is: 6 (W3)
0x0AC0	0x780104  	MOV	W4, W2
;__Lib_Conversions.c,161 :: 		
L_IntToStr24:
; i start address is: 6 (W3)
; negative start address is: 4 (W2)
0x0AC2	0xE11860  	CP	W3, #0
0x0AC4	0x360006  	BRA LEU	L_IntToStr25
L__IntToStr134:
;__Lib_Conversions.c,162 :: 		
0x0AC6	0x458083  	ADD	W11, W3, W1
0x0AC8	0x518061  	SUB	W3, #1, W0
0x0ACA	0x458000  	ADD	W11, W0, W0
0x0ACC	0x784890  	MOV.B	[W0], [W1]
;__Lib_Conversions.c,163 :: 		
0x0ACE	0xED2006  	DEC	W3
;__Lib_Conversions.c,164 :: 		
; i end address is: 6 (W3)
0x0AD0	0x37FFF8  	BRA	L_IntToStr24
L_IntToStr25:
;__Lib_Conversions.c,165 :: 		
0x0AD2	0xB3C200  	MOV.B	#32, W0
0x0AD4	0x784D80  	MOV.B	W0, [W11]
;__Lib_Conversions.c,166 :: 		
0x0AD6	0xE20004  	CP0	W2
0x0AD8	0x32000C  	BRA Z	L_IntToStr26
L__IntToStr135:
; negative end address is: 4 (W2)
;__Lib_Conversions.c,167 :: 		
; i start address is: 4 (W2)
0x0ADA	0xEF2004  	CLR	W2
; i end address is: 4 (W2)
;__Lib_Conversions.c,168 :: 		
L_IntToStr27:
; i start address is: 4 (W2)
0x0ADC	0x458002  	ADD	W11, W2, W0
0x0ADE	0x784090  	MOV.B	[W0], W1
0x0AE0	0xB3C200  	MOV.B	#32, W0
0x0AE2	0xE10C00  	CP.B	W1, W0
0x0AE4	0x3A0002  	BRA NZ	L_IntToStr28
L__IntToStr136:
; i start address is: 4 (W2)
0x0AE6	0xEC2004  	INC	W2
; i end address is: 4 (W2)
0x0AE8	0x37FFF9  	BRA	L_IntToStr27
L_IntToStr28:
;__Lib_Conversions.c,169 :: 		
0x0AEA	0x510061  	SUB	W2, #1, W0
; i end address is: 4 (W2)
;__Lib_Conversions.c,170 :: 		
0x0AEC	0x458080  	ADD	W11, W0, W1
0x0AEE	0xB3C2D0  	MOV.B	#45, W0
0x0AF0	0x784880  	MOV.B	W0, [W1]
L_IntToStr26:
;__Lib_Conversions.c,171 :: 		
L_end_IntToStr:
0x0AF2	0x78054F  	POP	W10
0x0AF4	0xFA8000  	ULNK
0x0AF6	0x060000  	RETURN
; end of _IntToStr
_WordToStr:
0x051A	0xFA0002  	LNK	#2
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
; len start address is: 4 (W2)
0x051C	0xEF2004  	CLR	W2
; len end address is: 4 (W2)
L_WordToStr6:
; len start address is: 4 (W2)
0x051E	0xE11465  	CP.B	W2, #5
0x0520	0x310006  	BRA GEU	L_WordToStr7
L__WordToStr122:
;__Lib_Conversions.c,90 :: 		
0x0522	0xFB8002  	ZE	W2, W0
0x0524	0x458080  	ADD	W11, W0, W1
0x0526	0xB3C200  	MOV.B	#32, W0
0x0528	0x784880  	MOV.B	W0, [W1]
;__Lib_Conversions.c,89 :: 		
0x052A	0xEC6004  	INC.B	W2
;__Lib_Conversions.c,90 :: 		
0x052C	0x37FFF8  	BRA	L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x052E	0xFB8002  	ZE	W2, W0
0x0530	0x458080  	ADD	W11, W0, W1
0x0532	0xEF2000  	CLR	W0
0x0534	0x784880  	MOV.B	W0, [W1]
; len start address is: 6 (W3)
0x0536	0x5141E1  	SUB.B	W2, #1, W3
; len end address is: 4 (W2)
; len end address is: 6 (W3)
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
; len start address is: 6 (W3)
0x0538	0xFB8003  	ZE	W3, W0
0x053A	0x458000  	ADD	W11, W0, W0
0x053C	0x980700  	MOV	W0, [W14+0]
0x053E	0x2000A2  	MOV	#10, W2
0x0540	0x090011  	REPEAT	#17
0x0542	0xD88502  	DIV.U	W10, W2
0x0544	0x200300  	MOV	#48, W0
0x0546	0x408080  	ADD	W1, W0, W1
0x0548	0x90000E  	MOV	[W14+0], W0
0x054A	0x784801  	MOV.B	W1, [W0]
;__Lib_Conversions.c,95 :: 		
0x054C	0x2000A2  	MOV	#10, W2
0x054E	0x090011  	REPEAT	#17
0x0550	0xD88502  	DIV.U	W10, W2
0x0552	0x780500  	MOV	W0, W10
;__Lib_Conversions.c,96 :: 		
0x0554	0xE10060  	CP	W0, #0
0x0556	0x3A0001  	BRA NZ	L_WordToStr11
L__WordToStr123:
; len end address is: 6 (W3)
;__Lib_Conversions.c,97 :: 		
0x0558	0x370002  	BRA	L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
; len start address is: 6 (W3)
0x055A	0xED6006  	DEC.B	W3
;__Lib_Conversions.c,99 :: 		
; len end address is: 6 (W3)
0x055C	0x37FFED  	BRA	L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x055E	0xFA8000  	ULNK
0x0560	0x060000  	RETURN
; end of _WordToStr
_UART2_Write_Text:
0x0C7E	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,311 :: 		
;__Lib_UART_12_p24_p33.c,312 :: 		
; counter start address is: 2 (W1)
0x0C80	0xEF2002  	CLR	W1
;__Lib_UART_12_p24_p33.c,314 :: 		
; data_ start address is: 0 (W0)
0x0C82	0x78401A  	MOV.B	[W10], W0
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,315 :: 		
L_UART2_Write_Text27:
; data_ start address is: 0 (W0)
; counter start address is: 2 (W1)
0x0C84	0xE10460  	CP.B	W0, #0
0x0C86	0x32000A  	BRA Z	L_UART2_Write_Text28
L__UART2_Write_Text108:
;__Lib_UART_12_p24_p33.c,316 :: 		
0x0C88	0x781F8A  	PUSH	W10
; data_ end address is: 0 (W0)
0x0C8A	0xFB8500  	ZE	W0, W10
0x0C8C	0x07FC6A  	RCALL	_UART2_Write
0x0C8E	0x78054F  	POP	W10
;__Lib_UART_12_p24_p33.c,317 :: 		
0x0C90	0x40C061  	ADD.B	W1, #1, W0
0x0C92	0x784080  	MOV.B	W0, W1
;__Lib_UART_12_p24_p33.c,318 :: 		
0x0C94	0xFB8000  	ZE	W0, W0
0x0C96	0x450000  	ADD	W10, W0, W0
; data_ start address is: 0 (W0)
0x0C98	0x784010  	MOV.B	[W0], W0
;__Lib_UART_12_p24_p33.c,319 :: 		
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
0x0C9A	0x37FFF4  	BRA	L_UART2_Write_Text27
L_UART2_Write_Text28:
;__Lib_UART_12_p24_p33.c,320 :: 		
L_end_UART2_Write_Text:
0x0C9C	0xFA8000  	ULNK
0x0C9E	0x060000  	RETURN
; end of _UART2_Write_Text
_UART2_Write:
0x0562	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,305 :: 		
;__Lib_UART_12_p24_p33.c,306 :: 		
L_UART2_Write25:
0x0564	0xAF0233  	BTSC	U2STA, #8
0x0566	0x370001  	BRA	L_UART2_Write26
0x0568	0x37FFFD  	BRA	L_UART2_Write25
L_UART2_Write26:
;__Lib_UART_12_p24_p33.c,307 :: 		
0x056A	0x8811AA  	MOV	W10, U2TXREG
;__Lib_UART_12_p24_p33.c,308 :: 		
L_end_UART2_Write:
0x056C	0xFA8000  	ULNK
0x056E	0x060000  	RETURN
; end of _UART2_Write
_MotorController:
0x0C04	0xFA0014  	LNK	#20
;myDAC.c,57 :: 		void MotorController(float linear,float angular){
;myDAC.c,59 :: 		float right = (linear + angular)/2;
0x0C06	0x781F8A  	PUSH	W10
0x0C08	0x781F8B  	PUSH	W11
0x0C0A	0xBE9F8C  	PUSH.D	W12
0x0C0C	0xBE9F8A  	PUSH.D	W10
0x0C0E	0xBE000A  	MOV.D	W10, W0
0x0C10	0xBE010C  	MOV.D	W12, W2
0x0C12	0x07FB32  	RCALL	__AddSub_FP
0x0C14	0x200002  	MOV	#0, W2
0x0C16	0x240003  	MOV	#16384, W3
0x0C18	0x07FBE5  	RCALL	__Div_FP
0x0C1A	0xBE054F  	POP.D	W10
0x0C1C	0xBE064F  	POP.D	W12
0x0C1E	0x980700  	MOV	W0, [W14+0]
0x0C20	0x980711  	MOV	W1, [W14+2]
;myDAC.c,60 :: 		float left = (linear - angular)/2;
0x0C22	0xBE010C  	MOV.D	W12, W2
0x0C24	0xBE000A  	MOV.D	W10, W0
0x0C26	0x07FD0C  	RCALL	__Sub_FP
0x0C28	0x200002  	MOV	#0, W2
0x0C2A	0x240003  	MOV	#16384, W3
0x0C2C	0x07FBDB  	RCALL	__Div_FP
0x0C2E	0x980720  	MOV	W0, [W14+4]
0x0C30	0x980731  	MOV	W1, [W14+6]
;myDAC.c,62 :: 		float rightPWM = 127 + 127*right;
0x0C32	0x200000  	MOV	#0, W0
0x0C34	0x242FE1  	MOV	#17150, W1
0x0C36	0x90010E  	MOV	[W14+0], W2
0x0C38	0x90019E  	MOV	[W14+2], W3
0x0C3A	0x07FD07  	RCALL	__Mul_FP
0x0C3C	0x200002  	MOV	#0, W2
0x0C3E	0x242FE3  	MOV	#17150, W3
0x0C40	0x07FB1B  	RCALL	__AddSub_FP
0x0C42	0x980740  	MOV	W0, [W14+8]
0x0C44	0x980751  	MOV	W1, [W14+10]
;myDAC.c,63 :: 		float leftPWM = 127 - 127*left;
0x0C46	0x200000  	MOV	#0, W0
0x0C48	0x242FE1  	MOV	#17150, W1
0x0C4A	0x90012E  	MOV	[W14+4], W2
0x0C4C	0x9001BE  	MOV	[W14+6], W3
0x0C4E	0x07FCFD  	RCALL	__Mul_FP
0x0C50	0x980F00  	MOV	W0, [W14+16]
0x0C52	0x980F11  	MOV	W1, [W14+18]
0x0C54	0x200000  	MOV	#0, W0
0x0C56	0x242FE1  	MOV	#17150, W1
0x0C58	0x90090E  	MOV	[W14+16], W2
0x0C5A	0x90099E  	MOV	[W14+18], W3
0x0C5C	0x07FCF1  	RCALL	__Sub_FP
0x0C5E	0x980760  	MOV	W0, [W14+12]
0x0C60	0x980771  	MOV	W1, [W14+14]
;myDAC.c,65 :: 		myDAC2_write(rightPWM);
0x0C62	0x90004E  	MOV	[W14+8], W0
0x0C64	0x9000DE  	MOV	[W14+10], W1
0x0C66	0x07FD7E  	RCALL	__Float2Longint
0x0C68	0x784500  	MOV.B	W0, W10
0x0C6A	0x07FC82  	RCALL	_myDAC2_write
;myDAC.c,66 :: 		myDAC1_write(leftPWM);
0x0C6C	0x90006E  	MOV	[W14+12], W0
0x0C6E	0x9000FE  	MOV	[W14+14], W1
0x0C70	0x07FD79  	RCALL	__Float2Longint
0x0C72	0x784500  	MOV.B	W0, W10
0x0C74	0x07FAFE  	RCALL	_myDAC1_write
;myDAC.c,67 :: 		}
L_end_MotorController:
0x0C76	0x7805CF  	POP	W11
0x0C78	0x78054F  	POP	W10
0x0C7A	0xFA8000  	ULNK
0x0C7C	0x060000  	RETURN
; end of _MotorController
_myDAC2_write:
;myDAC.c,53 :: 		void myDAC2_write(uint8_t value) {
;myDAC.c,54 :: 		DAC2DAT = value;
0x0570	0xFB800A  	ZE	W10, W0
0x0572	0xB7A27A  	MOV	WREG, DAC2DAT
;myDAC.c,55 :: 		}
L_end_myDAC2_write:
0x0574	0x060000  	RETURN
; end of _myDAC2_write
_myDAC1_write:
;myDAC.c,26 :: 		void myDAC1_write(uint8_t value) {
;myDAC.c,27 :: 		DAC1DAT = value;
0x0272	0xFB800A  	ZE	W10, W0
0x0274	0xB7A276  	MOV	WREG, DAC1DAT
;myDAC.c,28 :: 		}
L_end_myDAC1_write:
0x0276	0x060000  	RETURN
; end of _myDAC1_write
__AddSub_FP:
0x0278	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,582 :: 		
;__Lib_MathDouble.c,584 :: 		
0x027A	0x070002  	RCALL	AddSubFP__addsf3
;__Lib_MathDouble.c,585 :: 		
0x027C	0x0000000403E0  	GOTO	the_end__AddSub_FP
;__Lib_MathDouble.c,588 :: 		
AddSubFP__addsf3:
;__Lib_MathDouble.c,589 :: 		
0x0280	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,590 :: 		
0x0282	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,591 :: 		
0x0284	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,592 :: 		
0x0286	0x070059  	RCALL	AddSubFP__funpack2
;__Lib_MathDouble.c,593 :: 		
0x0288	0x330060  	BRA N	AddSubFP__fPropagateNaN
;__Lib_MathDouble.c,594 :: 		
0x028A	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,595 :: 		
0x028C	0x32004F  	BRA Z	AddSubFP_aisinfinite
;__Lib_MathDouble.c,596 :: 		
AddSubFP_checkspecialb:
;__Lib_MathDouble.c,597 :: 		
0x028E	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,598 :: 		
0x0290	0x320052  	BRA Z	AddSubFP_return2_3
;__Lib_MathDouble.c,599 :: 		
0x0292	0x6C8203  	XOR	W9, W3, W4
;__Lib_MathDouble.c,600 :: 		
0x0294	0x3B0007  	BRA NN	AddSubFP_getsign
;__Lib_MathDouble.c,601 :: 		
0x0296	0xD00509  	SL	W9, W10
;__Lib_MathDouble.c,602 :: 		
0x0298	0xD00603  	SL	W3, W12
;__Lib_MathDouble.c,603 :: 		
0x029A	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,604 :: 		
0x029C	0x5D060C  	SUBB	W10, W12, W12
;__Lib_MathDouble.c,605 :: 		
0x029E	0x390002  	BRA NC	AddSubFP_getsign
;__Lib_MathDouble.c,606 :: 		
0x02A0	0x320002  	BRA Z	AddSubFP_gotsign
;__Lib_MathDouble.c,607 :: 		
0x02A2	0x880039  	MOV	W9, W3
;__Lib_MathDouble.c,608 :: 		
AddSubFP_getsign:
;__Lib_MathDouble.c,609 :: 		
0x02A4	0x8800C3  	MOV	W3, W12
;__Lib_MathDouble.c,610 :: 		
AddSubFP_gotsign:
;__Lib_MathDouble.c,611 :: 		
0x02A6	0x558285  	SUB	W11, W5, W5
;__Lib_MathDouble.c,612 :: 		
0x02A8	0x3D0004  	BRA GE	AddSubFP_expcanonical
;__Lib_MathDouble.c,613 :: 		
0x02AA	0xFD0300  	EXCH	W0, W6
;__Lib_MathDouble.c,614 :: 		
0x02AC	0xFD0381  	EXCH	W1, W7
;__Lib_MathDouble.c,615 :: 		
0x02AE	0xEA0285  	NEG	W5, W5
;__Lib_MathDouble.c,616 :: 		
0x02B0	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,617 :: 		
AddSubFP_expcanonical:
;__Lib_MathDouble.c,618 :: 		
0x02B2	0x720F84  	IOR	W4, W4, [W15]
;__Lib_MathDouble.c,619 :: 		
0x02B4	0x3B0002  	BRA NN	AddSubFP_nonegate
;__Lib_MathDouble.c,620 :: 		
0x02B6	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,621 :: 		
0x02B8	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,622 :: 		
AddSubFP_nonegate:
;__Lib_MathDouble.c,623 :: 		
0x02BA	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,624 :: 		
0x02BC	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,625 :: 		
0x02BE	0xE1287A  	CP	W5, #26
;__Lib_MathDouble.c,626 :: 		
0x02C0	0x39000A  	BRA NC	AddSubFP_aligniter
;__Lib_MathDouble.c,627 :: 		
0x02C2	0x880006  	MOV	W6, W0
;__Lib_MathDouble.c,628 :: 		
0x02C4	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,629 :: 		
0x02C6	0xB207F7  	AND	#127, W7
;__Lib_MathDouble.c,630 :: 		
0x02C8	0x758087  	IOR	W11, W7, W1
;__Lib_MathDouble.c,631 :: 		
0x02CA	0x37002D  	BRA	AddSubFP_signoff
;__Lib_MathDouble.c,632 :: 		
AddSubFP_align:
;__Lib_MathDouble.c,633 :: 		
0x02CC	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,634 :: 		
0x02CE	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,635 :: 		
0x02D0	0x600561  	AND	W0, #1, W10
;__Lib_MathDouble.c,636 :: 		
0x02D2	0xD18081  	ASR	W1, W1
;__Lib_MathDouble.c,637 :: 		
0x02D4	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,638 :: 		
AddSubFP_aligniter:
;__Lib_MathDouble.c,639 :: 		
0x02D6	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,640 :: 		
0x02D8	0x3BFFF9  	BRA NN	AddSubFP_align
;__Lib_MathDouble.c,641 :: 		
AddSubFP_aligned:
;__Lib_MathDouble.c,642 :: 		
0x02DA	0x400406  	ADD	W0, W6, W8
;__Lib_MathDouble.c,643 :: 		
0x02DC	0x488487  	ADDC	W1, W7, W9
;__Lib_MathDouble.c,644 :: 		
0x02DE	0x3B0002  	BRA NN	AddSubFP_normalizesum
;__Lib_MathDouble.c,645 :: 		
0x02E0	0x140460  	SUBR	W8, #0, W8
;__Lib_MathDouble.c,646 :: 		
0x02E2	0x1C84E0  	SUBBR	W9, #0, W9
;__Lib_MathDouble.c,647 :: 		
AddSubFP_normalizesum:
;__Lib_MathDouble.c,648 :: 		
0x02E4	0xA38809  	BTST.Z	W9, #8
;__Lib_MathDouble.c,649 :: 		
0x02E6	0x320007  	BRA Z	AddSubFP_checknormal
;__Lib_MathDouble.c,650 :: 		
0x02E8	0x71818A  	IOR	W3, W10, W3
;__Lib_MathDouble.c,651 :: 		
0x02EA	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,652 :: 		
0x02EC	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,653 :: 		
0x02EE	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,654 :: 		
0x02F0	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,655 :: 		
0x02F2	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,656 :: 		
0x02F4	0x370017  	BRA	AddSubFP_round
;__Lib_MathDouble.c,657 :: 		
AddSubFP_checknormal:
;__Lib_MathDouble.c,658 :: 		
0x02F6	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,659 :: 		
0x02F8	0x3A0013  	BRA NZ	AddSubFP_discardguard
;__Lib_MathDouble.c,660 :: 		
AddSubFP_underflow:
;__Lib_MathDouble.c,661 :: 		
0x02FA	0xE20016  	CP0	W11
;__Lib_MathDouble.c,662 :: 		
0x02FC	0x340013  	BRA LE	AddSubFP_round
;__Lib_MathDouble.c,663 :: 		
0x02FE	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,664 :: 		
0x0300	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,665 :: 		
0x0302	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,666 :: 		
0x0304	0x74440A  	IOR.B	W8, W10, W8
;__Lib_MathDouble.c,667 :: 		
0x0306	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,668 :: 		
0x0308	0x3A000D  	BRA NZ	AddSubFP_round
;__Lib_MathDouble.c,669 :: 		
AddSubFP_normalizeloop:
;__Lib_MathDouble.c,670 :: 		
0x030A	0xE20016  	CP0	W11
;__Lib_MathDouble.c,671 :: 		
0x030C	0x340007  	BRA LE	AddSubFP_normalizeexit
;__Lib_MathDouble.c,672 :: 		
0x030E	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,673 :: 		
0x0310	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,674 :: 		
0x0312	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,675 :: 		
0x0314	0x3A0001  	BRA NZ	AddSubFP_normalizetest
;__Lib_MathDouble.c,676 :: 		
0x0316	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,677 :: 		
AddSubFP_normalizetest:
;__Lib_MathDouble.c,678 :: 		
0x0318	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,679 :: 		
0x031A	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
;__Lib_MathDouble.c,680 :: 		
AddSubFP_normalizeexit:
;__Lib_MathDouble.c,681 :: 		
0x031C	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,682 :: 		
0x031E	0x370002  	BRA	AddSubFP_round
;__Lib_MathDouble.c,683 :: 		
AddSubFP_discardguard:
;__Lib_MathDouble.c,684 :: 		
0x0320	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,685 :: 		
0x0322	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,686 :: 		
AddSubFP_round:
;__Lib_MathDouble.c,687 :: 		
0x0324	0x070022  	RCALL	AddSubFP__fpack
;__Lib_MathDouble.c,688 :: 		
AddSubFP_signoff:
;__Lib_MathDouble.c,689 :: 		
0x0326	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,690 :: 		
0x0328	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,691 :: 		
0x032A	0x370018  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,692 :: 		
AddSubFP_aisinfinite:
;__Lib_MathDouble.c,693 :: 		
0x032C	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,694 :: 		
0x032E	0x3A0002  	BRA NZ	AddSubFP_return8_3
;__Lib_MathDouble.c,695 :: 		
0x0330	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,696 :: 		
0x0332	0x330018  	BRA N	AddSubFP__fbopReturnNaN
;__Lib_MathDouble.c,697 :: 		
AddSubFP_return8_3:
;__Lib_MathDouble.c,698 :: 		
0x0334	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,699 :: 		
AddSubFP_return2_3:
;__Lib_MathDouble.c,700 :: 		
0x0336	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,701 :: 		
0x0338	0x370011  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,702 :: 		
AddSubFP__funpack2:
;__Lib_MathDouble.c,703 :: 		
0x033A	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,704 :: 		
0x033C	0x07003C  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,705 :: 		
0x033E	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,706 :: 		
0x0340	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,707 :: 		
0x0342	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,708 :: 		
0x0344	0x070038  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,709 :: 		
0x0346	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,710 :: 		
0x0348	0x060000  	RETURN
;__Lib_MathDouble.c,711 :: 		
AddSubFP__fPropagateNaN:
;__Lib_MathDouble.c,712 :: 		
0x034A	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,713 :: 		
0x034C	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,714 :: 		
0x034E	0x360005  	BRA LEU	AddSubFP_return0_1
;__Lib_MathDouble.c,715 :: 		
0x0350	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,716 :: 		
0x0352	0x360002  	BRA LEU	AddSubFP_return8_1
;__Lib_MathDouble.c,717 :: 		
0x0354	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,718 :: 		
0x0356	0x3A0001  	BRA NZ	AddSubFP_return0_1
;__Lib_MathDouble.c,719 :: 		
AddSubFP_return8_1:
;__Lib_MathDouble.c,720 :: 		
0x0358	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,721 :: 		
AddSubFP_return0_1:
;__Lib_MathDouble.c,722 :: 		
0x035A	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,723 :: 		
AddSubFP__fbopExit:
;__Lib_MathDouble.c,724 :: 		
0x035C	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,725 :: 		
0x035E	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,726 :: 		
0x0360	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,727 :: 		
0x0362	0x060000  	RETURN
;__Lib_MathDouble.c,728 :: 		
AddSubFP__fbopReturnNaN:
;__Lib_MathDouble.c,729 :: 		
0x0364	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,730 :: 		
0x0366	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,731 :: 		
0x0368	0x37FFF9  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,732 :: 		
AddSubFP__fpack:
;__Lib_MathDouble.c,733 :: 		
0x036A	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,734 :: 		
0x036C	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,735 :: 		
0x036E	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
;__Lib_MathDouble.c,736 :: 		
0x0370	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,737 :: 		
0x0372	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,738 :: 		
0x0374	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,739 :: 		
0x0376	0x34001D  	BRA LE	AddSubFP_zerosig
;__Lib_MathDouble.c,740 :: 		
AddSubFP_subnormal_1:
;__Lib_MathDouble.c,741 :: 		
0x0378	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,742 :: 		
0x037A	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,743 :: 		
0x037C	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,744 :: 		
0x037E	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,745 :: 		
0x0380	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,746 :: 		
0x0382	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
;__Lib_MathDouble.c,747 :: 		
0x0384	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,748 :: 		
AddSubFP_notsubnormal_1:
;__Lib_MathDouble.c,749 :: 		
0x0386	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,750 :: 		
0x0388	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,751 :: 		
0x038A	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,752 :: 		
0x038C	0x320009  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,753 :: 		
0x038E	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,754 :: 		
0x0390	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,755 :: 		
0x0392	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,756 :: 		
0x0394	0x320005  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,757 :: 		
0x0396	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,758 :: 		
0x0398	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,759 :: 		
0x039A	0x3A0002  	BRA NZ	AddSubFP_packupandgo
;__Lib_MathDouble.c,760 :: 		
0x039C	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,761 :: 		
0x039E	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,762 :: 		
AddSubFP_packupandgo:
;__Lib_MathDouble.c,763 :: 		
0x03A0	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,764 :: 		
0x03A2	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,765 :: 		
0x03A4	0x3D0005  	BRA GE	AddSubFP_overflow
;__Lib_MathDouble.c,766 :: 		
0x03A6	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,767 :: 		
0x03A8	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,768 :: 		
0x03AA	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,769 :: 		
0x03AC	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,770 :: 		
0x03AE	0x060000  	RETURN
;__Lib_MathDouble.c,771 :: 		
AddSubFP_overflow:
;__Lib_MathDouble.c,772 :: 		
0x03B0	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,773 :: 		
AddSubFP_zerosig:
;__Lib_MathDouble.c,774 :: 		
0x03B2	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,775 :: 		
0x03B4	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,776 :: 		
AddSubFP__funpack:
;__Lib_MathDouble.c,777 :: 		
0x03B6	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,778 :: 		
0x03B8	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,779 :: 		
0x03BA	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,780 :: 		
0x03BC	0x320008  	BRA Z	AddSubFP_zeroorsub
;__Lib_MathDouble.c,781 :: 		
0x03BE	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,782 :: 		
0x03C0	0x320002  	BRA Z	AddSubFP_nanorinf
;__Lib_MathDouble.c,783 :: 		
AddSubFP_finitereturn:
;__Lib_MathDouble.c,784 :: 		
0x03C2	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,785 :: 		
0x03C4	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,786 :: 		
AddSubFP_nanorinf:
;__Lib_MathDouble.c,787 :: 		
0x03C6	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,788 :: 		
0x03C8	0x320001  	BRA Z	AddSubFP_infinite
;__Lib_MathDouble.c,789 :: 		
0x03CA	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,790 :: 		
AddSubFP_infinite:
;__Lib_MathDouble.c,791 :: 		
0x03CC	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,792 :: 		
AddSubFP_zeroorsub:
;__Lib_MathDouble.c,793 :: 		
0x03CE	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,794 :: 		
0x03D0	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
;__Lib_MathDouble.c,795 :: 		
0x03D2	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,796 :: 		
AddSubFP_normalize:
;__Lib_MathDouble.c,797 :: 		
0x03D4	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,798 :: 		
AddSubFP_subnormal_2:
;__Lib_MathDouble.c,799 :: 		
0x03D6	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,800 :: 		
0x03D8	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,801 :: 		
0x03DA	0x3BFFFC  	BRA NN	AddSubFP_normalize
;__Lib_MathDouble.c,802 :: 		
0x03DC	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,803 :: 		
0x03DE	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,806 :: 		
the_end__AddSub_FP:
;__Lib_MathDouble.c,809 :: 		
L_end__AddSub_FP:
0x03E0	0xFA8000  	ULNK
0x03E2	0x060000  	RETURN
; end of __AddSub_FP
__Div_FP:
0x03E4	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1050 :: 		
;__Lib_MathDouble.c,1052 :: 		
0x03E6	0x070002  	RCALL	DivFP___divsf3
;__Lib_MathDouble.c,1053 :: 		
0x03E8	0x000000040516  	GOTO	the_end__Div_FP
;__Lib_MathDouble.c,1056 :: 		
DivFP___divsf3:
;__Lib_MathDouble.c,1057 :: 		
0x03EC	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,1058 :: 		
0x03EE	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,1059 :: 		
0x03F0	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,1060 :: 		
0x03F2	0x07003E  	RCALL	DivFP__funpack2
;__Lib_MathDouble.c,1061 :: 		
0x03F4	0x330045  	BRA N	DivFP__fPropagateNaN
;__Lib_MathDouble.c,1062 :: 		
0x03F6	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,1063 :: 		
0x03F8	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1064 :: 		
0x03FA	0x32002E  	BRA Z	DivFP_aisinfinite
;__Lib_MathDouble.c,1065 :: 		
0x03FC	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1066 :: 		
0x03FE	0x320033  	BRA Z	DivFP_returnZero
;__Lib_MathDouble.c,1067 :: 		
0x0400	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,1068 :: 		
0x0402	0x32002F  	BRA Z	DivFP_aiszero
;__Lib_MathDouble.c,1069 :: 		
0x0404	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1070 :: 		
0x0406	0x320031  	BRA Z	DivFP_returnInf
;__Lib_MathDouble.c,1071 :: 		
DivFP_finitenonzero:
;__Lib_MathDouble.c,1072 :: 		
0x0408	0x558585  	SUB	W11, W5, W11
;__Lib_MathDouble.c,1073 :: 		
0x040A	0xB007EB  	ADD	#126, W11
;__Lib_MathDouble.c,1074 :: 		
0x040C	0x200009  	MOV	#0, W9
;__Lib_MathDouble.c,1075 :: 		
0x040E	0x200408  	MOV	#64, W8
;__Lib_MathDouble.c,1076 :: 		
0x0410	0x370005  	BRA	DivFP_diventry
;__Lib_MathDouble.c,1077 :: 		
DivFP_divnext:
;__Lib_MathDouble.c,1078 :: 		
0x0412	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1079 :: 		
0x0414	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1080 :: 		
0x0416	0x31000A  	BRA C	DivFP_divdone
;__Lib_MathDouble.c,1081 :: 		
DivFP_divloop:
;__Lib_MathDouble.c,1082 :: 		
0x0418	0x430306  	ADD	W6, W6, W6
;__Lib_MathDouble.c,1083 :: 		
0x041A	0x4B8387  	ADDC	W7, W7, W7
;__Lib_MathDouble.c,1084 :: 		
DivFP_diventry:
;__Lib_MathDouble.c,1085 :: 		
0x041C	0x530100  	SUB	W6, W0, W2
;__Lib_MathDouble.c,1086 :: 		
0x041E	0x5B8181  	SUBB	W7, W1, W3
;__Lib_MathDouble.c,1087 :: 		
0x0420	0x33FFF8  	BRA N	DivFP_divnext
;__Lib_MathDouble.c,1088 :: 		
0x0422	0xBE8302  	MOV.D	W2, W6
;__Lib_MathDouble.c,1089 :: 		
0x0424	0xA80010  	BSET	W8, #0
;__Lib_MathDouble.c,1090 :: 		
0x0426	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1091 :: 		
0x0428	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1092 :: 		
0x042A	0x39FFF6  	BRA NC	DivFP_divloop
;__Lib_MathDouble.c,1093 :: 		
DivFP_divdone:
;__Lib_MathDouble.c,1094 :: 		
0x042C	0xDD39C6  	SL	W7, #6, W3
;__Lib_MathDouble.c,1095 :: 		
0x042E	0x730183  	IOR	W6, W3, W3
;__Lib_MathDouble.c,1096 :: 		
0x0430	0x320001  	BRA Z	DivFP_stickyok
;__Lib_MathDouble.c,1097 :: 		
0x0432	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,1098 :: 		
DivFP_stickyok:
;__Lib_MathDouble.c,1099 :: 		
0x0434	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1100 :: 		
0x0436	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1101 :: 		
0x0438	0xA39809  	BTST.Z	W9, #9
;__Lib_MathDouble.c,1102 :: 		
0x043A	0x320005  	BRA Z	DivFP_guardused
;__Lib_MathDouble.c,1103 :: 		
0x043C	0xA70008  	BTSC	W8, #0
;__Lib_MathDouble.c,1104 :: 		
0x043E	0xA80006  	BSET	W3, #0
;__Lib_MathDouble.c,1105 :: 		
0x0440	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1106 :: 		
0x0442	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1107 :: 		
0x0444	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1108 :: 		
DivFP_guardused:
;__Lib_MathDouble.c,1109 :: 		
0x0446	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1110 :: 		
0x0448	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1111 :: 		
0x044A	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,1112 :: 		
0x044C	0xD28102  	RLC	W2, W2
;__Lib_MathDouble.c,1113 :: 		
0x044E	0x070028  	RCALL	DivFP__fpack
;__Lib_MathDouble.c,1114 :: 		
DivFP_return0_1:
;__Lib_MathDouble.c,1115 :: 		
0x0450	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,1116 :: 		
0x0452	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,1117 :: 		
0x0454	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,1118 :: 		
0x0456	0x37001D  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1119 :: 		
DivFP_aisinfinite:
;__Lib_MathDouble.c,1120 :: 		
0x0458	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1121 :: 		
0x045A	0x32001F  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1122 :: 		
DivFP_return8_1:
;__Lib_MathDouble.c,1123 :: 		
0x045C	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,1124 :: 		
DivFP_return2_1:
;__Lib_MathDouble.c,1125 :: 		
0x045E	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1126 :: 		
0x0460	0x37FFF7  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1127 :: 		
DivFP_aiszero:
;__Lib_MathDouble.c,1128 :: 		
0x0462	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1129 :: 		
0x0464	0x32001A  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1130 :: 		
DivFP_returnZero:
;__Lib_MathDouble.c,1131 :: 		
0x0466	0xB80060  	MUL.UU	W0, #0, W0
;__Lib_MathDouble.c,1132 :: 		
0x0468	0x37FFF3  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1133 :: 		
DivFP_returnInf:
;__Lib_MathDouble.c,1134 :: 		
0x046A	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1135 :: 		
0x046C	0x27F801  	MOV	#32640, W1
;__Lib_MathDouble.c,1136 :: 		
0x046E	0x37FFF0  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1137 :: 		
DivFP__funpack2:
;__Lib_MathDouble.c,1138 :: 		
0x0470	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1139 :: 		
0x0472	0x07003C  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1140 :: 		
0x0474	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1141 :: 		
0x0476	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1142 :: 		
0x0478	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1143 :: 		
0x047A	0x070038  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1144 :: 		
0x047C	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1145 :: 		
0x047E	0x060000  	RETURN
;__Lib_MathDouble.c,1146 :: 		
DivFP__fPropagateNaN:
;__Lib_MathDouble.c,1147 :: 		
0x0480	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1148 :: 		
0x0482	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1149 :: 		
0x0484	0x360005  	BRA LEU	DivFP_return0
;__Lib_MathDouble.c,1150 :: 		
0x0486	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1151 :: 		
0x0488	0x360002  	BRA LEU	DivFP_return8
;__Lib_MathDouble.c,1152 :: 		
0x048A	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,1153 :: 		
0x048C	0x3A0001  	BRA NZ	DivFP_return0
;__Lib_MathDouble.c,1154 :: 		
DivFP_return8:
;__Lib_MathDouble.c,1155 :: 		
0x048E	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,1156 :: 		
DivFP_return0:
;__Lib_MathDouble.c,1157 :: 		
0x0490	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,1158 :: 		
DivFP__fbopExit:
;__Lib_MathDouble.c,1159 :: 		
0x0492	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,1160 :: 		
0x0494	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,1161 :: 		
0x0496	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,1162 :: 		
0x0498	0x060000  	RETURN
;__Lib_MathDouble.c,1163 :: 		
DivFP__fbopReturnNaN:
;__Lib_MathDouble.c,1164 :: 		
0x049A	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1165 :: 		
0x049C	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,1166 :: 		
0x049E	0x37FFF9  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1167 :: 		
DivFP__fpack:
;__Lib_MathDouble.c,1168 :: 		
0x04A0	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,1169 :: 		
0x04A2	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,1170 :: 		
0x04A4	0x3D000B  	BRA GE	DivFP_notsubnormal
;__Lib_MathDouble.c,1171 :: 		
0x04A6	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,1172 :: 		
0x04A8	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,1173 :: 		
0x04AA	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,1174 :: 		
0x04AC	0x34001D  	BRA LE	DivFP_zerosig
;__Lib_MathDouble.c,1175 :: 		
DivFP_subnormal:
;__Lib_MathDouble.c,1176 :: 		
0x04AE	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,1177 :: 		
0x04B0	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,1178 :: 		
0x04B2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1179 :: 		
0x04B4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1180 :: 		
0x04B6	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,1181 :: 		
0x04B8	0x3AFFFA  	BRA NZ	DivFP_subnormal
;__Lib_MathDouble.c,1182 :: 		
0x04BA	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,1183 :: 		
DivFP_notsubnormal:
;__Lib_MathDouble.c,1184 :: 		
0x04BC	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,1185 :: 		
0x04BE	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,1186 :: 		
0x04C0	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,1187 :: 		
0x04C2	0x320009  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1188 :: 		
0x04C4	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,1189 :: 		
0x04C6	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,1190 :: 		
0x04C8	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,1191 :: 		
0x04CA	0x320005  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1192 :: 		
0x04CC	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1193 :: 		
0x04CE	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,1194 :: 		
0x04D0	0x3A0002  	BRA NZ	DivFP_packupandgo
;__Lib_MathDouble.c,1195 :: 		
0x04D2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1196 :: 		
0x04D4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1197 :: 		
DivFP_packupandgo:
;__Lib_MathDouble.c,1198 :: 		
0x04D6	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,1199 :: 		
0x04D8	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,1200 :: 		
0x04DA	0x3D0005  	BRA GE	DivFP_overfloW
;__Lib_MathDouble.c,1201 :: 		
0x04DC	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,1202 :: 		
0x04DE	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,1203 :: 		
0x04E0	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,1204 :: 		
0x04E2	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,1205 :: 		
0x04E4	0x060000  	RETURN
;__Lib_MathDouble.c,1206 :: 		
DivFP_overfloW:
;__Lib_MathDouble.c,1207 :: 		
0x04E6	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,1208 :: 		
DivFP_zerosig:
;__Lib_MathDouble.c,1209 :: 		
0x04E8	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,1210 :: 		
0x04EA	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,1211 :: 		
DivFP__funpack:
;__Lib_MathDouble.c,1212 :: 		
0x04EC	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1213 :: 		
0x04EE	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1214 :: 		
0x04F0	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1215 :: 		
0x04F2	0x320008  	BRA Z	DivFP_zeroorsub
;__Lib_MathDouble.c,1216 :: 		
0x04F4	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1217 :: 		
0x04F6	0x320002  	BRA Z	DivFP_nanorinf
;__Lib_MathDouble.c,1218 :: 		
DivFP_finitereturn:
;__Lib_MathDouble.c,1219 :: 		
0x04F8	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1220 :: 		
0x04FA	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1221 :: 		
DivFP_nanorinf:
;__Lib_MathDouble.c,1222 :: 		
0x04FC	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1223 :: 		
0x04FE	0x320001  	BRA Z	DivFP_infinite
;__Lib_MathDouble.c,1224 :: 		
0x0500	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1225 :: 		
DivFP_infinite:
;__Lib_MathDouble.c,1226 :: 		
0x0502	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1227 :: 		
DivFP_zeroorsub:
;__Lib_MathDouble.c,1228 :: 		
0x0504	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1229 :: 		
0x0506	0x3A0002  	BRA NZ	DivFP_subnormal2
;__Lib_MathDouble.c,1230 :: 		
0x0508	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1231 :: 		
DivFP_normalize:
;__Lib_MathDouble.c,1232 :: 		
0x050A	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1233 :: 		
DivFP_subnormal2:
;__Lib_MathDouble.c,1234 :: 		
0x050C	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1235 :: 		
0x050E	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1236 :: 		
0x0510	0x3BFFFC  	BRA NN	DivFP_normalize
;__Lib_MathDouble.c,1237 :: 		
0x0512	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1238 :: 		
0x0514	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1241 :: 		
the_end__Div_FP:
;__Lib_MathDouble.c,1243 :: 		
L_end__Div_FP:
0x0516	0xFA8000  	ULNK
0x0518	0x060000  	RETURN
; end of __Div_FP
__Sub_FP:
0x0640	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,830 :: 		
;__Lib_MathDouble.c,831 :: 		
0x0642	0xAAE007  	BTG	W3, #15
;__Lib_MathDouble.c,832 :: 		
0x0644	0x07FE19  	RCALL	__AddSub_FP
;__Lib_MathDouble.c,833 :: 		
L_end__Sub_FP:
0x0646	0xFA8000  	ULNK
0x0648	0x060000  	RETURN
; end of __Sub_FP
__Mul_FP:
0x064A	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,855 :: 		
;__Lib_MathDouble.c,857 :: 		
0x064C	0x070002  	RCALL	MulFP___mulsf3
;__Lib_MathDouble.c,858 :: 		
0x064E	0x000000040760  	GOTO	the_end__Mul_FP
;__Lib_MathDouble.c,861 :: 		
MulFP___mulsf3:
;__Lib_MathDouble.c,862 :: 		
0x0652	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,863 :: 		
0x0654	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,864 :: 		
0x0656	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,865 :: 		
0x0658	0x070030  	RCALL	MulFP__funpack2
;__Lib_MathDouble.c,866 :: 		
0x065A	0x330037  	BRA N	MulFP__fPropagateNaN
;__Lib_MathDouble.c,867 :: 		
0x065C	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,868 :: 		
0x065E	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,869 :: 		
0x0660	0x320024  	BRA Z	MulFP_aisinfinite
;__Lib_MathDouble.c,870 :: 		
0x0662	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,871 :: 		
0x0664	0x320027  	BRA Z	MulFP_bisinfinite
;__Lib_MathDouble.c,872 :: 		
0x0666	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,873 :: 		
0x0668	0x320022  	BRA Z	MulFP_return8_1
;__Lib_MathDouble.c,874 :: 		
0x066A	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,875 :: 		
0x066C	0x320021  	BRA Z	MulFP_return2_1
;__Lib_MathDouble.c,876 :: 		
0x066E	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,877 :: 		
0x0670	0xB107EB  	SUB	#126, W11
;__Lib_MathDouble.c,878 :: 		
0x0672	0xB83401  	MUL.UU	W6, W1, W8
;__Lib_MathDouble.c,879 :: 		
0x0674	0xB83A00  	MUL.UU	W7, W0, W4
;__Lib_MathDouble.c,880 :: 		
0x0676	0x420408  	ADD	W4, W8, W8
;__Lib_MathDouble.c,881 :: 		
0x0678	0x4A8489  	ADDC	W5, W9, W9
;__Lib_MathDouble.c,882 :: 		
0x067A	0xB83A01  	MUL.UU	W7, W1, W4
;__Lib_MathDouble.c,883 :: 		
0x067C	0xB83000  	MUL.UU	W6, W0, W0
;__Lib_MathDouble.c,884 :: 		
0x067E	0x408088  	ADD	W1, W8, W1
;__Lib_MathDouble.c,885 :: 		
0x0680	0x4A0109  	ADDC	W4, W9, W2
;__Lib_MathDouble.c,886 :: 		
0x0682	0x330004  	BRA N	MulFP_formsticky
;__Lib_MathDouble.c,887 :: 		
0x0684	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,888 :: 		
0x0686	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,889 :: 		
0x0688	0x490102  	ADDC	W2, W2, W2
;__Lib_MathDouble.c,890 :: 		
0x068A	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,891 :: 		
MulFP_formsticky:
;__Lib_MathDouble.c,892 :: 		
0x068C	0xDD09C9  	SL	W1, #9, W3
;__Lib_MathDouble.c,893 :: 		
0x068E	0x700183  	IOR	W0, W3, W3
;__Lib_MathDouble.c,894 :: 		
0x0690	0x320001  	BRA Z	MulFP_formRandSig
;__Lib_MathDouble.c,895 :: 		
0x0692	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,896 :: 		
MulFP_formRandSig:
;__Lib_MathDouble.c,897 :: 		
0x0694	0xDE14C8  	LSR	W2, #8, W9
;__Lib_MathDouble.c,898 :: 		
0x0696	0xDD1448  	SL	W2, #8, W8
;__Lib_MathDouble.c,899 :: 		
0x0698	0xDE0947  	LSR	W1, #7, W2
;__Lib_MathDouble.c,900 :: 		
0x069A	0xB20012  	AND	#1, W2
;__Lib_MathDouble.c,901 :: 		
0x069C	0xDE08C8  	LSR	W1, #8, W1
;__Lib_MathDouble.c,902 :: 		
0x069E	0x708408  	IOR	W1, W8, W8
;__Lib_MathDouble.c,903 :: 		
0x06A0	0x070024  	RCALL	MulFP__fpack
;__Lib_MathDouble.c,904 :: 		
MulFP_return0_1:
;__Lib_MathDouble.c,905 :: 		
0x06A2	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,906 :: 		
0x06A4	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,907 :: 		
0x06A6	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,908 :: 		
0x06A8	0x370019  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,909 :: 		
MulFP_aisinfinite:
;__Lib_MathDouble.c,910 :: 		
0x06AA	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,911 :: 		
0x06AC	0x32001B  	BRA Z	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,912 :: 		
MulFP_return8_1:
;__Lib_MathDouble.c,913 :: 		
0x06AE	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,914 :: 		
MulFP_return2_1:
;__Lib_MathDouble.c,915 :: 		
0x06B0	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,916 :: 		
0x06B2	0x37FFF7  	BRA	MulFP_return0_1
;__Lib_MathDouble.c,917 :: 		
MulFP_bisinfinite:
;__Lib_MathDouble.c,918 :: 		
0x06B4	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,919 :: 		
0x06B6	0x3AFFFC  	BRA NZ	MulFP_return2_1
;__Lib_MathDouble.c,920 :: 		
0x06B8	0x370015  	BRA	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,921 :: 		
MulFP__funpack2:
;__Lib_MathDouble.c,922 :: 		
0x06BA	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,923 :: 		
0x06BC	0x07003C  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,924 :: 		
0x06BE	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,925 :: 		
0x06C0	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,926 :: 		
0x06C2	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,927 :: 		
0x06C4	0x070038  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,928 :: 		
0x06C6	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,929 :: 		
0x06C8	0x060000  	RETURN
;__Lib_MathDouble.c,930 :: 		
MulFP__fPropagateNaN:
;__Lib_MathDouble.c,931 :: 		
0x06CA	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,932 :: 		
0x06CC	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,933 :: 		
0x06CE	0x360005  	BRA LEU	MulFP_return0_2
;__Lib_MathDouble.c,934 :: 		
0x06D0	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,935 :: 		
0x06D2	0x360002  	BRA LEU	MulFP_return8_2
;__Lib_MathDouble.c,936 :: 		
0x06D4	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,937 :: 		
0x06D6	0x3A0001  	BRA NZ	MulFP_return0_2
;__Lib_MathDouble.c,938 :: 		
MulFP_return8_2:
;__Lib_MathDouble.c,939 :: 		
0x06D8	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,940 :: 		
MulFP_return0_2:
;__Lib_MathDouble.c,941 :: 		
0x06DA	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,942 :: 		
MulFP__fbopExit:
;__Lib_MathDouble.c,943 :: 		
0x06DC	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,944 :: 		
0x06DE	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,945 :: 		
0x06E0	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,946 :: 		
0x06E2	0x060000  	RETURN
;__Lib_MathDouble.c,947 :: 		
MulFP__fbopReturnNaN:
;__Lib_MathDouble.c,948 :: 		
0x06E4	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,949 :: 		
0x06E6	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,950 :: 		
0x06E8	0x37FFF9  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,951 :: 		
MulFP__fpack:
;__Lib_MathDouble.c,952 :: 		
0x06EA	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,953 :: 		
0x06EC	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,954 :: 		
0x06EE	0x3D000B  	BRA GE	MulFP_notsubnormal
;__Lib_MathDouble.c,955 :: 		
0x06F0	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,956 :: 		
0x06F2	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,957 :: 		
0x06F4	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,958 :: 		
0x06F6	0x34001D  	BRA LE	MulFP_zerosig
;__Lib_MathDouble.c,959 :: 		
MulFP_subnormal1:
;__Lib_MathDouble.c,960 :: 		
0x06F8	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,961 :: 		
0x06FA	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,962 :: 		
0x06FC	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,963 :: 		
0x06FE	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,964 :: 		
0x0700	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,965 :: 		
0x0702	0x3AFFFA  	BRA NZ	MulFP_subnormal1
;__Lib_MathDouble.c,966 :: 		
0x0704	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,967 :: 		
MulFP_notsubnormal:
;__Lib_MathDouble.c,968 :: 		
0x0706	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,969 :: 		
0x0708	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,970 :: 		
0x070A	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,971 :: 		
0x070C	0x320009  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,972 :: 		
0x070E	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,973 :: 		
0x0710	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,974 :: 		
0x0712	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,975 :: 		
0x0714	0x320005  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,976 :: 		
0x0716	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,977 :: 		
0x0718	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,978 :: 		
0x071A	0x3A0002  	BRA NZ	MulFP_packupandgo
;__Lib_MathDouble.c,979 :: 		
0x071C	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,980 :: 		
0x071E	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,981 :: 		
MulFP_packupandgo:
;__Lib_MathDouble.c,982 :: 		
0x0720	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,983 :: 		
0x0722	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,984 :: 		
0x0724	0x3D0005  	BRA GE	MulFP_overflow
;__Lib_MathDouble.c,985 :: 		
0x0726	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,986 :: 		
0x0728	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,987 :: 		
0x072A	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,988 :: 		
0x072C	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,989 :: 		
0x072E	0x060000  	RETURN
;__Lib_MathDouble.c,990 :: 		
MulFP_overflow:
;__Lib_MathDouble.c,991 :: 		
0x0730	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,992 :: 		
MulFP_zerosig:
;__Lib_MathDouble.c,993 :: 		
0x0732	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,994 :: 		
0x0734	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,995 :: 		
MulFP__funpack:
;__Lib_MathDouble.c,996 :: 		
0x0736	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,997 :: 		
0x0738	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,998 :: 		
0x073A	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,999 :: 		
0x073C	0x320008  	BRA Z	MulFP_zeroorsub
;__Lib_MathDouble.c,1000 :: 		
0x073E	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1001 :: 		
0x0740	0x320002  	BRA Z	MulFP_nanorinf
;__Lib_MathDouble.c,1002 :: 		
MulFP_finitereturn:
;__Lib_MathDouble.c,1003 :: 		
0x0742	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1004 :: 		
0x0744	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1005 :: 		
MulFP_nanorinf:
;__Lib_MathDouble.c,1006 :: 		
0x0746	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1007 :: 		
0x0748	0x320001  	BRA Z	MulFP_infinite
;__Lib_MathDouble.c,1008 :: 		
0x074A	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1009 :: 		
MulFP_infinite:
;__Lib_MathDouble.c,1010 :: 		
0x074C	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1011 :: 		
MulFP_zeroorsub:
;__Lib_MathDouble.c,1012 :: 		
0x074E	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1013 :: 		
0x0750	0x3A0002  	BRA NZ	MulFP_subnormal2
;__Lib_MathDouble.c,1014 :: 		
0x0752	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1015 :: 		
MulFP_normalize:
;__Lib_MathDouble.c,1016 :: 		
0x0754	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1017 :: 		
MulFP_subnormal2:
;__Lib_MathDouble.c,1018 :: 		
0x0756	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1019 :: 		
0x0758	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1020 :: 		
0x075A	0x3BFFFC  	BRA NN	MulFP_normalize
;__Lib_MathDouble.c,1021 :: 		
0x075C	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1022 :: 		
0x075E	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1025 :: 		
the_end__Mul_FP:
;__Lib_MathDouble.c,1028 :: 		
L_end__Mul_FP:
0x0760	0xFA8000  	ULNK
0x0762	0x060000  	RETURN
; end of __Mul_FP
__Float2Longint:
0x0764	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x0766	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x0768	0x0000000407D8  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x076C	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,488 :: 		
0x076E	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x0770	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,490 :: 		
0x0772	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,491 :: 		
0x0774	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,492 :: 		
0x0776	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x0778	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x077A	0xE12868  	CP	W5, #8
;__Lib_MathDouble.c,495 :: 		
0x077C	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x077E	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,497 :: 		
0x0780	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,498 :: 		
0x0782	0xE20006  	CP0	W3
;__Lib_MathDouble.c,499 :: 		
0x0784	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x0786	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,501 :: 		
0x0788	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x078A	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,504 :: 		
0x078C	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,505 :: 		
0x078E	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,506 :: 		
0x0790	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x0792	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x0794	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,510 :: 		
0x0796	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x0798	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,512 :: 		
0x079A	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x079C	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,515 :: 		
0x079E	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,516 :: 		
0x07A0	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,517 :: 		
0x07A2	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x07A4	0xE20006  	CP0	W3
;__Lib_MathDouble.c,520 :: 		
0x07A6	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x07A8	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,522 :: 		
0x07AA	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x07AC	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x07AE	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,527 :: 		
0x07B0	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,528 :: 		
0x07B2	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,529 :: 		
0x07B4	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x07B6	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,531 :: 		
0x07B8	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x07BA	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,534 :: 		
0x07BC	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x07BE	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,537 :: 		
0x07C0	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x07C2	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x07C4	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x07C6	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,543 :: 		
0x07C8	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x07CA	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x07CC	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x07CE	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,549 :: 		
0x07D0	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,550 :: 		
0x07D2	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x07D4	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,552 :: 		
0x07D6	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x07D8	0xFA8000  	ULNK
0x07DA	0x060000  	RETURN
; end of __Float2Longint
_mySensorControl:
0x0958	0xFA0102  	LNK	#258
;sensorFunction.c,7 :: 		float mySensorControl (){
;sensorFunction.c,10 :: 		int soma = 0;
0x095A	0x781F8A  	PUSH	W10
0x095C	0x781F8B  	PUSH	W11
;sensorFunction.c,11 :: 		float erro = 0;
;sensorFunction.c,13 :: 		soma = ((-2*RB6_bit) + (3*RA7_bit) + RB5_bit + (-3*RB4_bit) + (2*RB3_bit) + (-4*RA6_bit) + (4*RA3_bit));
0x095E	0xEF6000  	CLR.B	W0
0x0960	0xAFC2CA  	BTSC	RB6_bit, BitPos(RB6_bit+0)
0x0962	0xEC6000  	INC.B	W0
0x0964	0x2FFFE1  	MOV	#65534, W1
0x0966	0xFB8000  	ZE	W0, W0
0x0968	0xB98900  	MUL.SS	W1, W0, W2
0x096A	0xEF6000  	CLR.B	W0
0x096C	0xAFE2C2  	BTSC	RA7_bit, BitPos(RA7_bit+0)
0x096E	0xEC6000  	INC.B	W0
0x0970	0xFB8080  	ZE	W0, W1
0x0972	0x200030  	MOV	#3, W0
0x0974	0xB98001  	MUL.SS	W0, W1, W0
0x0976	0x410080  	ADD	W2, W0, W1
0x0978	0xEF6000  	CLR.B	W0
0x097A	0xAFA2CA  	BTSC	RB5_bit, BitPos(RB5_bit+0)
0x097C	0xEC6000  	INC.B	W0
0x097E	0xFB8000  	ZE	W0, W0
0x0980	0x408100  	ADD	W1, W0, W2
0x0982	0xEF6000  	CLR.B	W0
0x0984	0xAF82CA  	BTSC	RB4_bit, BitPos(RB4_bit+0)
0x0986	0xEC6000  	INC.B	W0
0x0988	0x2FFFD1  	MOV	#65533, W1
0x098A	0xFB8000  	ZE	W0, W0
0x098C	0xB98800  	MUL.SS	W1, W0, W0
0x098E	0x410080  	ADD	W2, W0, W1
0x0990	0xEF6000  	CLR.B	W0
0x0992	0xAF62CA  	BTSC	RB3_bit, BitPos(RB3_bit+0)
0x0994	0xEC6000  	INC.B	W0
0x0996	0xFB8000  	ZE	W0, W0
0x0998	0xDD0041  	SL	W0, #1, W0
0x099A	0x408100  	ADD	W1, W0, W2
0x099C	0xEF6000  	CLR.B	W0
0x099E	0xAFC2C2  	BTSC	RA6_bit, BitPos(RA6_bit+0)
0x09A0	0xEC6000  	INC.B	W0
0x09A2	0x2FFFC1  	MOV	#65532, W1
0x09A4	0xFB8000  	ZE	W0, W0
0x09A6	0xB98800  	MUL.SS	W1, W0, W0
0x09A8	0x410080  	ADD	W2, W0, W1
0x09AA	0xEF6000  	CLR.B	W0
0x09AC	0xAF62C2  	BTSC	RA3_bit, BitPos(RA3_bit+0)
0x09AE	0xEC6000  	INC.B	W0
0x09B0	0xFB8000  	ZE	W0, W0
0x09B2	0xDD0042  	SL	W0, #2, W0
0x09B4	0x408000  	ADD	W1, W0, W0
;sensorFunction.c,15 :: 		erro = soma/10;
0x09B6	0x2000A2  	MOV	#10, W2
0x09B8	0x090011  	REPEAT	#17
0x09BA	0xD80002  	DIV.S	W0, W2
0x09BC	0xDE80CF  	ASR	W0, #15, W1
0x09BE	0xEB8100  	SETM	W2
0x09C0	0x07FDDA  	RCALL	__Long2Float
; erro start address is: 8 (W4)
0x09C2	0xBE0200  	MOV.D	W0, W4
;sensorFunction.c,18 :: 		if (erro == 0.1 ){
0x09C4	0xBE9F84  	PUSH.D	W4
0x09C6	0x2CCCD2  	MOV	#52429, W2
0x09C8	0x23DCC3  	MOV	#15820, W3
0x09CA	0x07FE30  	RCALL	__Compare_Le_Fp
0x09CC	0xE00000  	CP0	W0
0x09CE	0xEF6000  	CLR.B	W0
0x09D0	0x3A0001  	BRA NZ	L__mySensorControl20
0x09D2	0xEC6000  	INC.B	W0
L__mySensorControl20:
0x09D4	0xBE024F  	POP.D	W4
0x09D6	0xE24000  	CP0.B	W0
0x09D8	0x320005  	BRA Z	L_mySensorControl0
L__mySensorControl21:
; erro end address is: 8 (W4)
;sensorFunction.c,19 :: 		UART2_Write_Text("inimigo logo a frente");
0x09DA	0x20887A  	MOV	#lo_addr(?lstr1_sensorFunction), W10
0x09DC	0x070150  	RCALL	_UART2_Write_Text
;sensorFunction.c,21 :: 		return erro;
0x09DE	0xEF2000  	CLR	W0
0x09E0	0xEF2002  	CLR	W1
0x09E2	0x37005E  	BRA	L_end_mySensorControl
;sensorFunction.c,23 :: 		}
L_mySensorControl0:
;sensorFunction.c,25 :: 		if (erro >0.1){
; erro start address is: 8 (W4)
0x09E4	0xBE9F84  	PUSH.D	W4
0x09E6	0xBE0004  	MOV.D	W4, W0
0x09E8	0x2CCCD2  	MOV	#52429, W2
0x09EA	0x23DCC3  	MOV	#15820, W3
0x09EC	0x07FE24  	RCALL	__Compare_Ge_Fp
0x09EE	0xE00000  	CP0	W0
0x09F0	0xEF6000  	CLR.B	W0
0x09F2	0x340001  	BRA LE	L__mySensorControl22
0x09F4	0xEC6000  	INC.B	W0
L__mySensorControl22:
0x09F6	0xBE024F  	POP.D	W4
0x09F8	0xE24000  	CP0.B	W0
0x09FA	0x32002A  	BRA Z	L_mySensorControl1
L__mySensorControl23:
;sensorFunction.c,28 :: 		erro = erro  + 0.6;
0x09FC	0x2999A0  	MOV	#39322, W0
0x09FE	0x23F191  	MOV	#16153, W1
0x0A00	0xBE0104  	MOV.D	W4, W2
0x0A02	0x07FC3A  	RCALL	__AddSub_FP
; erro end address is: 8 (W4)
; erro start address is: 6 (W3)
0x0A04	0x780180  	MOV	W0, W3
0x0A06	0x780201  	MOV	W1, W4
;sensorFunction.c,29 :: 		IntToStr(erro,buffer);
0x0A08	0x470160  	ADD	W14, #0, W2
0x0A0A	0x990702  	MOV	W2, [W14+256]
0x0A0C	0x781F83  	PUSH	W3
0x0A0E	0x781F84  	PUSH	W4
0x0A10	0x07FEA9  	RCALL	__Float2Longint
0x0A12	0x91008E  	MOV	[W14+256], W1
0x0A14	0x780581  	MOV	W1, W11
0x0A16	0x780500  	MOV	W0, W10
0x0A18	0x070047  	RCALL	_IntToStr
0x0A1A	0x78024F  	POP	W4
0x0A1C	0x7801CF  	POP	W3
;sensorFunction.c,30 :: 		UART2_Write_Text("Inimigo visto na direita");
0x0A1E	0x2089DA  	MOV	#lo_addr(?lstr2_sensorFunction), W10
0x0A20	0x07012E  	RCALL	_UART2_Write_Text
;sensorFunction.c,31 :: 		UART2_Write_Text("/n");
0x0A22	0x20884A  	MOV	#lo_addr(?lstr3_sensorFunction), W10
0x0A24	0x07012C  	RCALL	_UART2_Write_Text
;sensorFunction.c,33 :: 		if (erro > 1){
0x0A26	0x781F83  	PUSH	W3
0x0A28	0x781F84  	PUSH	W4
0x0A2A	0x780003  	MOV	W3, W0
0x0A2C	0x780084  	MOV	W4, W1
0x0A2E	0x200002  	MOV	#0, W2
0x0A30	0x23F803  	MOV	#16256, W3
0x0A32	0x07FE01  	RCALL	__Compare_Ge_Fp
0x0A34	0xE00000  	CP0	W0
0x0A36	0xEF6000  	CLR.B	W0
0x0A38	0x340001  	BRA LE	L__mySensorControl24
0x0A3A	0xEC6000  	INC.B	W0
L__mySensorControl24:
0x0A3C	0x78024F  	POP	W4
0x0A3E	0x7801CF  	POP	W3
0x0A40	0xE24000  	CP0.B	W0
0x0A42	0x320003  	BRA Z	L_mySensorControl2
L__mySensorControl25:
; erro end address is: 6 (W3)
;sensorFunction.c,35 :: 		return erro;
0x0A44	0x200000  	MOV	#0, W0
0x0A46	0x23F801  	MOV	#16256, W1
0x0A48	0x37002B  	BRA	L_end_mySensorControl
;sensorFunction.c,36 :: 		}
L_mySensorControl2:
;sensorFunction.c,38 :: 		return erro;
; erro start address is: 6 (W3)
0x0A4A	0x780003  	MOV	W3, W0
0x0A4C	0x780084  	MOV	W4, W1
; erro end address is: 6 (W3)
0x0A4E	0x370028  	BRA	L_end_mySensorControl
;sensorFunction.c,40 :: 		}
L_mySensorControl1:
;sensorFunction.c,42 :: 		if (erro <0.1){
; erro start address is: 8 (W4)
0x0A50	0xBE9F84  	PUSH.D	W4
0x0A52	0xBE0004  	MOV.D	W4, W0
0x0A54	0x2CCCD2  	MOV	#52429, W2
0x0A56	0x23DCC3  	MOV	#15820, W3
0x0A58	0x07FDE9  	RCALL	__Compare_Le_Fp
0x0A5A	0xE00000  	CP0	W0
0x0A5C	0xEF6000  	CLR.B	W0
0x0A5E	0x3D0001  	BRA GE	L__mySensorControl26
0x0A60	0xEC6000  	INC.B	W0
L__mySensorControl26:
0x0A62	0xBE024F  	POP.D	W4
0x0A64	0xE24000  	CP0.B	W0
0x0A66	0x32001A  	BRA Z	L_mySensorControl4
L__mySensorControl27:
;sensorFunction.c,44 :: 		erro = erro - 0.6;
0x0A68	0x2999A2  	MOV	#39322, W2
0x0A6A	0x23F193  	MOV	#16153, W3
0x0A6C	0xBE0004  	MOV.D	W4, W0
0x0A6E	0x07FDE8  	RCALL	__Sub_FP
; erro end address is: 8 (W4)
; erro start address is: 4 (W2)
0x0A70	0xBE0100  	MOV.D	W0, W2
;sensorFunction.c,45 :: 		UART2_Write_Text(buffer);
0x0A72	0x470060  	ADD	W14, #0, W0
0x0A74	0x780500  	MOV	W0, W10
0x0A76	0x070103  	RCALL	_UART2_Write_Text
;sensorFunction.c,46 :: 		UART2_Write_Text("inimigo visto na esquerda");
0x0A78	0x208DCA  	MOV	#lo_addr(?lstr4_sensorFunction), W10
0x0A7A	0x070101  	RCALL	_UART2_Write_Text
;sensorFunction.c,47 :: 		UART2_Write_Text("/n");
0x0A7C	0x208F6A  	MOV	#lo_addr(?lstr5_sensorFunction), W10
0x0A7E	0x0700FF  	RCALL	_UART2_Write_Text
;sensorFunction.c,48 :: 		if (erro > -1){
0x0A80	0xBE0002  	MOV.D	W2, W0
0x0A82	0x200002  	MOV	#0, W2
0x0A84	0x2BF803  	MOV	#49024, W3
0x0A86	0x07FDD7  	RCALL	__Compare_Ge_Fp
0x0A88	0xE00000  	CP0	W0
0x0A8A	0xEF6000  	CLR.B	W0
0x0A8C	0x340001  	BRA LE	L__mySensorControl28
0x0A8E	0xEC6000  	INC.B	W0
L__mySensorControl28:
; erro end address is: 4 (W2)
0x0A90	0xE24000  	CP0.B	W0
0x0A92	0x320003  	BRA Z	L_mySensorControl5
L__mySensorControl29:
;sensorFunction.c,50 :: 		return erro;
0x0A94	0x200000  	MOV	#0, W0
0x0A96	0x2BF801  	MOV	#49024, W1
0x0A98	0x370003  	BRA	L_end_mySensorControl
;sensorFunction.c,51 :: 		}
L_mySensorControl5:
;sensorFunction.c,52 :: 		}
0x0A9A	0x370002  	BRA	L_mySensorControl6
L_mySensorControl4:
;sensorFunction.c,54 :: 		return erro;
; erro start address is: 8 (W4)
0x0A9C	0xBE0004  	MOV.D	W4, W0
; erro end address is: 8 (W4)
0x0A9E	0x370000  	BRA	L_end_mySensorControl
L_mySensorControl6:
;sensorFunction.c,56 :: 		}
L_end_mySensorControl:
0x0AA0	0x7805CF  	POP	W11
0x0AA2	0x78054F  	POP	W10
0x0AA4	0xFA8000  	ULNK
0x0AA6	0x060000  	RETURN
; end of _mySensorControl
__Long2Float:
0x0576	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x0578	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x057A	0x000000040628  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x057E	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x0580	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x0582	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x0584	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x0586	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x0588	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x058A	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x058C	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x058E	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x0590	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x0592	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x0594	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x0596	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x0598	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x059A	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x059C	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x059E	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x05A0	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x05A2	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x05A4	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x05A6	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x05A8	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x05AA	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x05AC	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x05AE	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x05B0	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x05B2	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x05B4	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x05B6	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x05B8	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x05BA	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x05BC	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x05BE	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x05C0	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x05C2	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x05C4	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x05C6	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x05C8	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x05CA	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x05CC	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x05CE	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x05D0	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x05D2	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x05D4	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x05D6	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x05D8	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x05DA	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x05DC	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x05DE	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x05E0	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x05E2	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x05E4	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x05E6	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x05E8	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x05EA	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x05EC	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x05EE	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x05F0	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x05F2	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x05F4	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x05F6	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x05F8	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x05FA	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x05FC	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x05FE	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x0600	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x0602	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x0604	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x0606	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x0608	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x060A	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x060C	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x060E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x0610	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x0612	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x0614	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x0616	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x0618	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x061A	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x061C	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x061E	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x0620	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x0622	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x0624	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x0626	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x0628	0xFA8000  	ULNK
0x062A	0x060000  	RETURN
; end of __Long2Float
__Compare_Le_Fp:
0x062C	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1348 :: 		
;__Lib_MathDouble.c,1349 :: 		
0x062E	0x200014  	MOV	#1, W4
;__Lib_MathDouble.c,1350 :: 		
0x0630	0x07FDE7  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1351 :: 		
L_end__Compare_Le_Fp:
0x0632	0xFA8000  	ULNK
0x0634	0x060000  	RETURN
; end of __Compare_Le_Fp
__Compare_Fp:
0x0200	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1272 :: 		
;__Lib_MathDouble.c,1274 :: 		
0x0202	0x070002  	RCALL	CompareFp__fcompare
;__Lib_MathDouble.c,1275 :: 		
0x0204	0x00000004026E  	GOTO	the_end__Compare_Fp
;__Lib_MathDouble.c,1277 :: 		
CompareFp__fcompare:
;__Lib_MathDouble.c,1278 :: 		
0x0208	0x781F84  	MOV	W4, [W15++]
;__Lib_MathDouble.c,1279 :: 		
0x020A	0x070014  	RCALL	CompareFp__funpack2
;__Lib_MathDouble.c,1280 :: 		
0x020C	0x78004F  	MOV	[--W15], W0
;__Lib_MathDouble.c,1281 :: 		
0x020E	0x330011  	BRA N	CompareFp_exit
;__Lib_MathDouble.c,1282 :: 		
0x0210	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1283 :: 		
0x0212	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,1284 :: 		
0x0214	0x3B0006  	BRA NN	CompareFp_comparemag
;__Lib_MathDouble.c,1285 :: 		
0x0216	0x650504  	AND	W10, W4, W10
;__Lib_MathDouble.c,1286 :: 		
0x0218	0xA7000A  	BTSC	W10, #0
;__Lib_MathDouble.c,1287 :: 		
0x021A	0x370008  	BRA	CompareFp_returnEqual
;__Lib_MathDouble.c,1288 :: 		
0x021C	0xA6F009  	BTSS	W9, #15
;__Lib_MathDouble.c,1289 :: 		
0x021E	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1290 :: 		
0x0220	0x370008  	BRA	CompareFp_exit
;__Lib_MathDouble.c,1291 :: 		
CompareFp_comparemag:
;__Lib_MathDouble.c,1292 :: 		
0x0222	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,1293 :: 		
0x0224	0x5C8F83  	SUBB	W9, W3, [W15]
;__Lib_MathDouble.c,1294 :: 		
0x0226	0x390003  	BRA LTU	CompareFp_adjust
;__Lib_MathDouble.c,1295 :: 		
0x0228	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1296 :: 		
0x022A	0x3E0001  	BRA GTU	CompareFp_adjust
;__Lib_MathDouble.c,1297 :: 		
CompareFp_returnEqual:
;__Lib_MathDouble.c,1298 :: 		
0x022C	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1299 :: 		
CompareFp_adjust:
;__Lib_MathDouble.c,1300 :: 		
0x022E	0xA7F009  	BTSC	W9, #15
;__Lib_MathDouble.c,1301 :: 		
0x0230	0xEA0000  	NEG	W0, W0
;__Lib_MathDouble.c,1302 :: 		
CompareFp_exit:
;__Lib_MathDouble.c,1303 :: 		
0x0232	0x060000  	RETURN
;__Lib_MathDouble.c,1304 :: 		
CompareFp__funpack2:
;__Lib_MathDouble.c,1305 :: 		
0x0234	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1306 :: 		
0x0236	0x070006  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1307 :: 		
0x0238	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1308 :: 		
0x023A	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1309 :: 		
0x023C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1310 :: 		
0x023E	0x070002  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1311 :: 		
0x0240	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1312 :: 		
0x0242	0x060000  	RETURN
;__Lib_MathDouble.c,1313 :: 		
CompareFp__funpack:
;__Lib_MathDouble.c,1314 :: 		
0x0244	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1315 :: 		
0x0246	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1316 :: 		
0x0248	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1317 :: 		
0x024A	0x320008  	BRA Z	CompareFp_zeroorsub
;__Lib_MathDouble.c,1318 :: 		
0x024C	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1319 :: 		
0x024E	0x320002  	BRA Z	CompareFp_nanorinf
;__Lib_MathDouble.c,1320 :: 		
CompareFp_finitereturn:
;__Lib_MathDouble.c,1321 :: 		
0x0250	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1322 :: 		
0x0252	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1323 :: 		
CompareFp_nanorinf:
;__Lib_MathDouble.c,1324 :: 		
0x0254	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1325 :: 		
0x0256	0x320001  	BRA Z	CompareFp_infinite
;__Lib_MathDouble.c,1326 :: 		
0x0258	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1327 :: 		
CompareFp_infinite:
;__Lib_MathDouble.c,1328 :: 		
0x025A	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1329 :: 		
CompareFp_zeroorsub:
;__Lib_MathDouble.c,1330 :: 		
0x025C	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1331 :: 		
0x025E	0x3A0002  	BRA NZ	CompareFp_subnormal
;__Lib_MathDouble.c,1332 :: 		
0x0260	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1333 :: 		
CompareFp_normalize:
;__Lib_MathDouble.c,1334 :: 		
0x0262	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1335 :: 		
CompareFp_subnormal:
;__Lib_MathDouble.c,1336 :: 		
0x0264	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1337 :: 		
0x0266	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1338 :: 		
0x0268	0x3BFFFC  	BRA NN	CompareFp_normalize
;__Lib_MathDouble.c,1339 :: 		
0x026A	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1340 :: 		
0x026C	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1343 :: 		
the_end__Compare_Fp:
;__Lib_MathDouble.c,1345 :: 		
L_end__Compare_Fp:
0x026E	0xFA8000  	ULNK
0x0270	0x060000  	RETURN
; end of __Compare_Fp
__Compare_Ge_Fp:
0x0636	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1354 :: 		
;__Lib_MathDouble.c,1355 :: 		
0x0638	0x2FFFF4  	MOV	#65535, W4
;__Lib_MathDouble.c,1356 :: 		
0x063A	0x07FDE2  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1357 :: 		
L_end__Compare_Ge_Fp:
0x063C	0xFA8000  	ULNK
0x063E	0x060000  	RETURN
; end of __Compare_Ge_Fp
0x0EBC	0x208001  	MOV	#lo_addr(?lstr12_sensorFunction), W1
0x0EBE	0x28DC20  	MOV	#36290, W0
0x0EC0	0x09007B  	REPEAT	#123
0x0EC2	0x7818B0  	MOV	[W0++], [W1++]
0x0EC4	0x7858B0  	MOV.B	[W0++], [W1++]
0x0EC6	0x060000  	RETURN
;,0 :: _initBlock_0 [42]
; Containing: ?ICS?lstr12_sensorFunction [39]
;             ?ICS?lstr13_sensorFunction [3]
0x0DC2	0x6553 ;_initBlock_0+0 : ?ICS?lstr12_sensorFunction at 0x0DC2
0x0DC4	0x736E ;_initBlock_0+2
0x0DC6	0x726F ;_initBlock_0+4
0x0DC8	0x6420 ;_initBlock_0+6
0x0DCA	0x2065 ;_initBlock_0+8
0x0DCC	0x6F62 ;_initBlock_0+10
0x0DCE	0x6472 ;_initBlock_0+12
0x0DD0	0x2061 ;_initBlock_0+14
0x0DD2	0x7365 ;_initBlock_0+16
0x0DD4	0x7571 ;_initBlock_0+18
0x0DD6	0x7265 ;_initBlock_0+20
0x0DD8	0x6164 ;_initBlock_0+22
0x0DDA	0x6620 ;_initBlock_0+24
0x0DDC	0x726F ;_initBlock_0+26
0x0DDE	0x2061 ;_initBlock_0+28
0x0DE0	0x6164 ;_initBlock_0+30
0x0DE2	0x6120 ;_initBlock_0+32
0x0DE4	0x6572 ;_initBlock_0+34
0x0DE6	0x616E ;_initBlock_0+36
0x0DE8	0x2F00 ;_initBlock_0+38 : ?ICS?lstr13_sensorFunction at 0x0DE9
0x0DEA	0x006E ;_initBlock_0+40
; end of _initBlock_0
;,0 :: _initBlock_1 [6]
; Containing: ?ICS?lstr11_sensorFunction [3]
;             ?ICS?lstr7_sensorFunction [3]
0x0DEC	0x6E2F ;_initBlock_1+0 : ?ICS?lstr11_sensorFunction at 0x0DEC
0x0DEE	0x2F00 ;_initBlock_1+2 : ?ICS?lstr7_sensorFunction at 0x0DEF
0x0DF0	0x006E ;_initBlock_1+4
; end of _initBlock_1
;sensorFunction.c,0 :: ?ICS?lstr8_sensorFunction [40]
0x0DF2	0x6553 ;?ICS?lstr8_sensorFunction+0
0x0DF4	0x736E ;?ICS?lstr8_sensorFunction+2
0x0DF6	0x726F ;?ICS?lstr8_sensorFunction+4
0x0DF8	0x6420 ;?ICS?lstr8_sensorFunction+6
0x0DFA	0x2065 ;?ICS?lstr8_sensorFunction+8
0x0DFC	0x6F62 ;?ICS?lstr8_sensorFunction+10
0x0DFE	0x6472 ;?ICS?lstr8_sensorFunction+12
0x0E00	0x2061 ;?ICS?lstr8_sensorFunction+14
0x0E02	0x6964 ;?ICS?lstr8_sensorFunction+16
0x0E04	0x6572 ;?ICS?lstr8_sensorFunction+18
0x0E06	0x7469 ;?ICS?lstr8_sensorFunction+20
0x0E08	0x2061 ;?ICS?lstr8_sensorFunction+22
0x0E0A	0x6564 ;?ICS?lstr8_sensorFunction+24
0x0E0C	0x746E ;?ICS?lstr8_sensorFunction+26
0x0E0E	0x6F72 ;?ICS?lstr8_sensorFunction+28
0x0E10	0x6420 ;?ICS?lstr8_sensorFunction+30
0x0E12	0x2061 ;?ICS?lstr8_sensorFunction+32
0x0E14	0x7261 ;?ICS?lstr8_sensorFunction+34
0x0E16	0x6E65 ;?ICS?lstr8_sensorFunction+36
0x0E18	0x0061 ;?ICS?lstr8_sensorFunction+38
; end of ?ICS?lstr8_sensorFunction
;,0 :: _initBlock_3 [44]
; Containing: ?ICS?lstr6_sensorFunction [41]
;             ?ICS?lstr9_sensorFunction [3]
0x0E1A	0x6553 ;_initBlock_3+0 : ?ICS?lstr6_sensorFunction at 0x0E1A
0x0E1C	0x736E ;_initBlock_3+2
0x0E1E	0x726F ;_initBlock_3+4
0x0E20	0x6420 ;_initBlock_3+6
0x0E22	0x2065 ;_initBlock_3+8
0x0E24	0x6F62 ;_initBlock_3+10
0x0E26	0x6472 ;_initBlock_3+12
0x0E28	0x2061 ;_initBlock_3+14
0x0E2A	0x7365 ;_initBlock_3+16
0x0E2C	0x7571 ;_initBlock_3+18
0x0E2E	0x7265 ;_initBlock_3+20
0x0E30	0x6164 ;_initBlock_3+22
0x0E32	0x6420 ;_initBlock_3+24
0x0E34	0x6E65 ;_initBlock_3+26
0x0E36	0x7274 ;_initBlock_3+28
0x0E38	0x206F ;_initBlock_3+30
0x0E3A	0x6164 ;_initBlock_3+32
0x0E3C	0x6120 ;_initBlock_3+34
0x0E3E	0x6572 ;_initBlock_3+36
0x0E40	0x616E ;_initBlock_3+38
0x0E42	0x2F00 ;_initBlock_3+40 : ?ICS?lstr9_sensorFunction at 0x0E43
0x0E44	0x006E ;_initBlock_3+42
; end of _initBlock_3
;,0 :: _initBlock_4 [50]
; Containing: ?ICS?lstr3_sensorFunction [3]
;             ?ICS?lstr1_sensorFunction [22]
;             ?ICS?lstr2_sensorFunction [25]
0x0E46	0x6E2F ;_initBlock_4+0 : ?ICS?lstr3_sensorFunction at 0x0E46
0x0E48	0x6900 ;_initBlock_4+2 : ?ICS?lstr1_sensorFunction at 0x0E49
0x0E4A	0x696E ;_initBlock_4+4
0x0E4C	0x696D ;_initBlock_4+6
0x0E4E	0x6F67 ;_initBlock_4+8
0x0E50	0x6C20 ;_initBlock_4+10
0x0E52	0x676F ;_initBlock_4+12
0x0E54	0x206F ;_initBlock_4+14
0x0E56	0x2061 ;_initBlock_4+16
0x0E58	0x7266 ;_initBlock_4+18
0x0E5A	0x6E65 ;_initBlock_4+20
0x0E5C	0x6574 ;_initBlock_4+22
0x0E5E	0x4900 ;_initBlock_4+24 : ?ICS?lstr2_sensorFunction at 0x0E5F
0x0E60	0x696E ;_initBlock_4+26
0x0E62	0x696D ;_initBlock_4+28
0x0E64	0x6F67 ;_initBlock_4+30
0x0E66	0x7620 ;_initBlock_4+32
0x0E68	0x7369 ;_initBlock_4+34
0x0E6A	0x6F74 ;_initBlock_4+36
0x0E6C	0x6E20 ;_initBlock_4+38
0x0E6E	0x2061 ;_initBlock_4+40
0x0E70	0x6964 ;_initBlock_4+42
0x0E72	0x6572 ;_initBlock_4+44
0x0E74	0x7469 ;_initBlock_4+46
0x0E76	0x0061 ;_initBlock_4+48
; end of _initBlock_4
;sensorFunction.c,0 :: ?ICS?lstr10_sensorFunction [38]
0x0E78	0x6553 ;?ICS?lstr10_sensorFunction+0
0x0E7A	0x736E ;?ICS?lstr10_sensorFunction+2
0x0E7C	0x726F ;?ICS?lstr10_sensorFunction+4
0x0E7E	0x6420 ;?ICS?lstr10_sensorFunction+6
0x0E80	0x2065 ;?ICS?lstr10_sensorFunction+8
0x0E82	0x6F62 ;?ICS?lstr10_sensorFunction+10
0x0E84	0x6472 ;?ICS?lstr10_sensorFunction+12
0x0E86	0x2061 ;?ICS?lstr10_sensorFunction+14
0x0E88	0x6964 ;?ICS?lstr10_sensorFunction+16
0x0E8A	0x6572 ;?ICS?lstr10_sensorFunction+18
0x0E8C	0x7469 ;?ICS?lstr10_sensorFunction+20
0x0E8E	0x2061 ;?ICS?lstr10_sensorFunction+22
0x0E90	0x6F66 ;?ICS?lstr10_sensorFunction+24
0x0E92	0x6172 ;?ICS?lstr10_sensorFunction+26
0x0E94	0x6420 ;?ICS?lstr10_sensorFunction+28
0x0E96	0x2061 ;?ICS?lstr10_sensorFunction+30
0x0E98	0x7261 ;?ICS?lstr10_sensorFunction+32
0x0E9A	0x6E65 ;?ICS?lstr10_sensorFunction+34
0x0E9C	0x0061 ;?ICS?lstr10_sensorFunction+36
; end of ?ICS?lstr10_sensorFunction
;sensorFunction.c,0 :: ?ICS?lstr4_sensorFunction [26]
0x0E9E	0x6E69 ;?ICS?lstr4_sensorFunction+0
0x0EA0	0x6D69 ;?ICS?lstr4_sensorFunction+2
0x0EA2	0x6769 ;?ICS?lstr4_sensorFunction+4
0x0EA4	0x206F ;?ICS?lstr4_sensorFunction+6
0x0EA6	0x6976 ;?ICS?lstr4_sensorFunction+8
0x0EA8	0x7473 ;?ICS?lstr4_sensorFunction+10
0x0EAA	0x206F ;?ICS?lstr4_sensorFunction+12
0x0EAC	0x616E ;?ICS?lstr4_sensorFunction+14
0x0EAE	0x6520 ;?ICS?lstr4_sensorFunction+16
0x0EB0	0x7173 ;?ICS?lstr4_sensorFunction+18
0x0EB2	0x6575 ;?ICS?lstr4_sensorFunction+20
0x0EB4	0x6472 ;?ICS?lstr4_sensorFunction+22
0x0EB6	0x0061 ;?ICS?lstr4_sensorFunction+24
; end of ?ICS?lstr4_sensorFunction
;sensorFunction.c,0 :: ?ICS?lstr5_sensorFunction [3]
0x0EB8	0x6E2F ;?ICS?lstr5_sensorFunction+0
0x0EBA	0x00 ;?ICS?lstr5_sensorFunction+2
; end of ?ICS?lstr5_sensorFunction
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200     [114]    __Compare_Fp
0x0272       [6]    _myDAC1_write
0x0278     [364]    __AddSub_FP
0x03E4     [310]    __Div_FP
0x051A      [72]    _WordToStr
0x0562      [14]    _UART2_Write
0x0570       [6]    _myDAC2_write
0x0576     [182]    __Long2Float
0x062C      [10]    __Compare_Le_Fp
0x0636      [10]    __Compare_Ge_Fp
0x0640      [10]    __Sub_FP
0x064A     [282]    __Mul_FP
0x0764     [120]    __Float2Longint
0x07DC      [18]    __Multiply_32x32
0x07EE      [88]    __Modulus_32x32
0x0846      [82]    __Divide_32x32
0x0898       [6]    _Get_Fosc_kHz
0x089E       [4]    _Get_Fosc_Per_Cyc
0x08A2      [14]    _Delay_100ms
0x08B0      [26]    _ADC1_Init
0x08CA     [142]    _ADC1_Get_Sample
0x0958     [336]    _mySensorControl
0x0AA8      [80]    _IntToStr
0x0AF8     [258]    _UART2_Init
0x0BFA      [10]    _ADC1_Read
0x0C04     [122]    _MotorController
0x0C7E      [34]    _UART2_Write_Text
0x0CA0      [42]    _init_robot
0x0CCA     [222]    _Sniffing
0x0DA8      [26]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0340       [2]    ADCON1
0x0348       [2]    AD1CHS
0x0300       [2]    ADCBUF0
0x0342       [2]    ADCON2
0x08FA       [2]    _ADC_Get_Sample_Ptr
0x08FC       [2]    _UART_Rdy_Ptr
0x08FE       [2]    _UART_Rd_Ptr
0x0900       [2]    _UART_Tx_Idle_Ptr
0x0238       [2]    U2BRG
0x0230       [2]    U2MODE
0x0350       [2]    ADCSSL
0x0344       [2]    ADCON3
0x0232       [2]    U2STA
0x0902       [2]    _UART_Wr_Ptr
0x0234       [2]    U2TXREG
0x0276       [2]    DAC1DAT
0x027A       [2]    DAC2DAT
0x02CA       [0]    RB4_bit
0x02CA       [0]    RB5_bit
0x02CA       [0]    RB3_bit
0x02C2       [0]    RA3_bit
0x02C2       [0]    RA6_bit
0x04E0       [2]    ANSA
0x04E2       [2]    ANSB
0x02C8       [2]    TRISB
0x02C2       [0]    RA7_bit
0x02CA       [0]    RB6_bit
0x0800      [39]    ?lstr12_sensorFunction
0x0827       [3]    ?lstr13_sensorFunction
0x082A       [3]    ?lstr11_sensorFunction
0x082D       [3]    ?lstr7_sensorFunction
0x0830      [40]    ?lstr8_sensorFunction
0x0858      [41]    ?lstr6_sensorFunction
0x0881       [3]    ?lstr9_sensorFunction
0x0884       [3]    ?lstr3_sensorFunction
0x0887      [22]    ?lstr1_sensorFunction
0x089D      [25]    ?lstr2_sensorFunction
0x08B6      [38]    ?lstr10_sensorFunction
0x08DC      [26]    ?lstr4_sensorFunction
0x08F6       [3]    ?lstr5_sensorFunction
0x0230       [2]    U2MODE
0x0232       [2]    U2STA
0x0234       [2]    U2TXREG
0x0238       [2]    U2BRG
0x0014       [1]    FARG_myDAC1_write_value
0x0276       [2]    DAC1DAT
0x027A       [2]    DAC2DAT
0x02C8       [2]    TRISB
0x0300       [2]    ADCBUF0
0x0340       [2]    ADCON1
0x0342       [2]    ADCON2
0x0344       [2]    ADCON3
0x0348       [2]    AD1CHS
0x0350       [2]    ADCSSL
0x04E0       [2]    ANSA
0x04E2       [2]    ANSB
0x0014       [2]    FARG_WordToStr_input
0x0016       [2]    FARG_WordToStr_output
0x0014       [2]    FARG_UART2_Write__data
0x0014       [1]    FARG_myDAC2_write_value
0x0014       [2]    FARG_ADC1_Get_Sample_channel
0x0014       [2]    FARG_IntToStr_input
0x0016       [2]    FARG_IntToStr_output
0x0014       [4]    FARG_UART2_Init_baud_rate
0x0014       [2]    FARG_ADC1_Read_channel
0x0014       [4]    FARG_MotorController_linear
0x0018       [4]    FARG_MotorController_angular
0x0014       [2]    FARG_UART2_Write_Text_uart_text
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0DC2      [39]    ?ICS?lstr12_sensorFunction
0x0DE9       [3]    ?ICS?lstr13_sensorFunction
0x0DEC       [3]    ?ICS?lstr11_sensorFunction
0x0DEF       [3]    ?ICS?lstr7_sensorFunction
0x0DF2      [40]    ?ICS?lstr8_sensorFunction
0x0E1A      [41]    ?ICS?lstr6_sensorFunction
0x0E43       [3]    ?ICS?lstr9_sensorFunction
0x0E46       [3]    ?ICS?lstr3_sensorFunction
0x0E49      [22]    ?ICS?lstr1_sensorFunction
0x0E5F      [25]    ?ICS?lstr2_sensorFunction
0x0E78      [38]    ?ICS?lstr10_sensorFunction
0x0E9E      [26]    ?ICS?lstr4_sensorFunction
0x0EB8       [3]    ?ICS?lstr5_sensorFunction
