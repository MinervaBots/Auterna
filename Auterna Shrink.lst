;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2017/03/02 18:15:11
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040C6A  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x0C6A	0x20804F  	MOV	#2052, W15
0x0C6C	0x20FFF0  	MOV	#4095, W0
0x0C6E	0xB7A020  	MOV	WREG, SPLIM
0x0C70	0x200000  	MOV	#0, W0
0x0C72	0xB7A034  	MOV	WREG, PSVPAG
0x0C74	0x200040  	MOV	#4, W0
0x0C76	0xB72044  	IOR	CORCON
;Auterna Shrink.c,239 :: 		void main()
;Auterna Shrink.c,241 :: 		initRobot();
0x0C78	0x781F8A  	PUSH	W10
0x0C7A	0x781F8B  	PUSH	W11
0x0C7C	0x781F8C  	PUSH	W12
0x0C7E	0x781F8D  	PUSH	W13
0x0C80	0x07FFB3  	RCALL	_initRobot
;Auterna Shrink.c,242 :: 		controlMotors(0,0);
0x0C82	0xEF2018  	CLR	W12
0x0C84	0xEF201A  	CLR	W13
0x0C86	0xEF2014  	CLR	W10
0x0C88	0xEF2016  	CLR	W11
0x0C8A	0x07FE5B  	RCALL	_controlMotors
;Auterna Shrink.c,315 :: 		}
;Auterna Shrink.c,243 :: 		return;
;Auterna Shrink.c,315 :: 		}
L_end_main:
0x0C8C	0x7806CF  	POP	W13
0x0C8E	0x78064F  	POP	W12
0x0C90	0x7805CF  	POP	W11
0x0C92	0x78054F  	POP	W10
L__main_end_loop:
0x0C94	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_initRobot:
;Auterna Shrink.c,152 :: 		void initRobot()
;Auterna Shrink.c,156 :: 		TRISA0_bit = 1; //Borda Esquerda Frente (ANALOG)
0x0BE8	0x781F8A  	PUSH	W10
0x0BEA	0x781F8B  	PUSH	W11
0x0BEC	0x781F8C  	PUSH	W12
0x0BEE	0x781F8D  	PUSH	W13
0x0BF0	0xA802C0  	BSET	TRISA0_bit, BitPos(TRISA0_bit+0)
;Auterna Shrink.c,157 :: 		TRISA1_bit = 1; //Borda Direita Frente (ANALOG)
0x0BF2	0xA822C0  	BSET	TRISA1_bit, BitPos(TRISA1_bit+0)
;Auterna Shrink.c,159 :: 		TRISA4_bit = 1; //Borda Direita Atras  (ANALOG)
0x0BF4	0xA882C0  	BSET	TRISA4_bit, BitPos(TRISA4_bit+0)
;Auterna Shrink.c,160 :: 		TRISA7_bit = 1; //Estratégia 4
0x0BF6	0xA8E2C0  	BSET	TRISA7_bit, BitPos(TRISA7_bit+0)
;Auterna Shrink.c,161 :: 		TRISA.B5 = 1;   //Estratégia 2
0x0BF8	0xA8A2C0  	BSET	TRISA, #5
;Auterna Shrink.c,162 :: 		TRISA.B6 = 1;   //Estratégia 3
0x0BFA	0xA8C2C0  	BSET	TRISA, #6
;Auterna Shrink.c,166 :: 		AMP1CON  = 0;
0x0BFC	0xEF224A  	CLR	AMP1CON
;Auterna Shrink.c,167 :: 		TRISB0_bit = 0;  //Pino de UART : TX
0x0BFE	0xA902C8  	BCLR	TRISB0_bit, BitPos(TRISB0_bit+0)
;Auterna Shrink.c,168 :: 		TRISB1_bit = 0;  //Pino de UART : RX
0x0C00	0xA922C8  	BCLR	TRISB1_bit, BitPos(TRISB1_bit+0)
;Auterna Shrink.c,169 :: 		TRISB2_bit = 1;  //Borda Esquerda Atras  (ANALOG)
0x0C02	0xA842C8  	BSET	TRISB2_bit, BitPos(TRISB2_bit+0)
;Auterna Shrink.c,170 :: 		TRISB3_bit = 1;  //Oponente Direito - OD
0x0C04	0xA862C8  	BSET	TRISB3_bit, BitPos(TRISB3_bit+0)
;Auterna Shrink.c,171 :: 		TRISB4_bit = 1;  //Oponente Diagonal Esquerdo - ODE. Esse pino também é o Secondary OSC. Tomar cuidado nas configs.Funcionando: SOSC Type : Digital e SOSC Power: Low Power.
0x0C06	0xA882C8  	BSET	TRISB4_bit, BitPos(TRISB4_bit+0)
;Auterna Shrink.c,172 :: 		TRISB5_bit = 1;  //Oponente Centro - OC
0x0C08	0xA8A2C8  	BSET	TRISB5_bit, BitPos(TRISB5_bit+0)
;Auterna Shrink.c,173 :: 		TRISB6_bit = 1;  //Oponente Esquerdo - OE
0x0C0A	0xA8C2C8  	BSET	TRISB6_bit, BitPos(TRISB6_bit+0)
;Auterna Shrink.c,174 :: 		TRISB7_bit = 1;  //Oponente Diagonal Direito - ODD
0x0C0C	0xA8E2C8  	BSET	TRISB7_bit, BitPos(TRISB7_bit+0)
;Auterna Shrink.c,175 :: 		TRISB8_bit = 1;  //Pino de I2C : SCL
0x0C0E	0xA802C9  	BSET	TRISB8_bit, BitPos(TRISB8_bit+0)
;Auterna Shrink.c,176 :: 		TRISB9_bit = 1;  //Pino de I2C : SDA
0x0C10	0xA822C9  	BSET	TRISB9_bit, BitPos(TRISB9_bit+0)
;Auterna Shrink.c,177 :: 		TRISB10_bit = 0; //Servo Motor
0x0C12	0xA942C9  	BCLR	TRISB10_bit, BitPos(TRISB10_bit+0)
;Auterna Shrink.c,178 :: 		TRISB11_bit = 1; //Start/Stop Button
0x0C14	0xA862C9  	BSET	TRISB11_bit, BitPos(TRISB11_bit+0)
;Auterna Shrink.c,179 :: 		TRISB12_bit = 0; //Motor1 (DAC1OUT)
0x0C16	0xA982C9  	BCLR	TRISB12_bit, BitPos(TRISB12_bit+0)
;Auterna Shrink.c,180 :: 		TRISB13_bit = 1; //Estratégia 1
0x0C18	0xA8A2C9  	BSET	TRISB13_bit, BitPos(TRISB13_bit+0)
;Auterna Shrink.c,181 :: 		TRISB14_bit = 0; //Motor2 (DAC2OUT)
0x0C1A	0xA9C2C9  	BCLR	TRISB14_bit, BitPos(TRISB14_bit+0)
;Auterna Shrink.c,182 :: 		TRISB15_bit = 1; //Controle Infra-Red
0x0C1C	0xA8E2C9  	BSET	TRISB15_bit, BitPos(TRISB15_bit+0)
;Auterna Shrink.c,189 :: 		ANSA = 0b0000000000010011;
0x0C1E	0x200130  	MOV	#19, W0
0x0C20	0xB7A4E0  	MOV	WREG, ANSA
;Auterna Shrink.c,195 :: 		ANSB = 0b0101000000000100;
0x0C22	0x250040  	MOV	#20484, W0
0x0C24	0xB7A4E2  	MOV	WREG, ANSB
;Auterna Shrink.c,207 :: 		ADC1_Init();
0x0C26	0x07FE66  	RCALL	_ADC1_Init
;Auterna Shrink.c,210 :: 		CM1CON = 0;
0x0C28	0xEF2634  	CLR	CM1CON
;Auterna Shrink.c,211 :: 		CM2CON = 0;
0x0C2A	0xEF2636  	CLR	CM2CON
;Auterna Shrink.c,212 :: 		CM3CON = 0;
0x0C2C	0xEF2638  	CLR	CM3CON
;Auterna Shrink.c,215 :: 		DAC1CON = 0b1001001010000011;
0x0C2E	0x292830  	MOV	#37507, W0
0x0C30	0xB7A274  	MOV	WREG, DAC1CON
;Auterna Shrink.c,216 :: 		DAC2CON = 0b1001001010000011;
0x0C32	0x292830  	MOV	#37507, W0
0x0C34	0xB7A278  	MOV	WREG, DAC2CON
;Auterna Shrink.c,218 :: 		BUFCON0 = 2;
0x0C36	0x200020  	MOV	#2, W0
0x0C38	0xB7A670  	MOV	WREG, BUFCON0
;Auterna Shrink.c,219 :: 		controlMotors(0,0);
0x0C3A	0xEF2018  	CLR	W12
0x0C3C	0xEF201A  	CLR	W13
0x0C3E	0xEF2014  	CLR	W10
0x0C40	0xEF2016  	CLR	W11
0x0C42	0x07FE7F  	RCALL	_controlMotors
;Auterna Shrink.c,222 :: 		ServoPeriod =  PWM3_Init(250,3,1);
0x0C44	0x20001C  	MOV	#1, W12
0x0C46	0x20003B  	MOV	#3, W11
0x0C48	0x200FAA  	MOV	#250, W10
0x0C4A	0x07FE61  	RCALL	_PWM3_Init
0x0C4C	0x884000  	MOV	W0, _ServoPeriod
;Auterna Shrink.c,223 :: 		PWM3_Set_Duty(0.1 * ServoPeriod);
0x0C4E	0xEB0080  	CLR	W1
0x0C50	0x07FD2D  	RCALL	__Long2Float
0x0C52	0x2CCCD2  	MOV	#52429, W2
0x0C54	0x23DCC3  	MOV	#15820, W3
0x0C56	0x07FC8E  	RCALL	__Mul_FP
0x0C58	0x07FC51  	RCALL	__Float2Longint
0x0C5A	0x780500  	MOV	W0, W10
0x0C5C	0x07FE6E  	RCALL	_PWM3_Set_Duty
;Auterna Shrink.c,224 :: 		PWM3_Start();
0x0C5E	0x07FE46  	RCALL	_PWM3_Start
;Auterna Shrink.c,235 :: 		}
L_end_initRobot:
0x0C60	0x7806CF  	POP	W13
0x0C62	0x78064F  	POP	W12
0x0C64	0x7805CF  	POP	W11
0x0C66	0x78054F  	POP	W10
0x0C68	0x060000  	RETURN
; end of _initRobot
_ADC1_Init:
0x08F4	0xFA0000  	LNK	#0
;__Lib_ADC_1_24FXXKMX02.c,13 :: 		
;__Lib_ADC_1_24FXXKMX02.c,14 :: 		
0x08F6	0x202DC0  	MOV	#lo_addr(_ADC1_Get_Sample), W0
0x08F8	0x884010  	MOV	W0, _ADC_Get_Sample_Ptr
;__Lib_ADC_1_24FXXKMX02.c,16 :: 		
0x08FA	0x204700  	MOV	#1136, W0
0x08FC	0xB7A340  	MOV	WREG, ADCON1
;__Lib_ADC_1_24FXXKMX02.c,17 :: 		
0x08FE	0xEF2342  	CLR	ADCON2
;__Lib_ADC_1_24FXXKMX02.c,19 :: 		
0x0900	0x21F3F0  	MOV	#7999, W0
0x0902	0xB7A344  	MOV	WREG, ADCON3
;__Lib_ADC_1_24FXXKMX02.c,20 :: 		
0x0904	0xEF2350  	CLR	ADCSSL
;__Lib_ADC_1_24FXXKMX02.c,21 :: 		
0x0906	0xA8E341  	BSET	ADCON1, #15
;__Lib_ADC_1_24FXXKMX02.c,23 :: 		
0x0908	0xA82340  	BSET	ADCON1, #1
;__Lib_ADC_1_24FXXKMX02.c,24 :: 		
L_end_ADC1_Init:
0x090A	0xFA8000  	ULNK
0x090C	0x060000  	RETURN
; end of _ADC1_Init
_controlMotors:
;Auterna Shrink.c,63 :: 		void controlMotors(double leftPower, double rightPower)
;Auterna Shrink.c,65 :: 		leftPower = leftPower * LEFT_MOTOR_INVERTER;
;Auterna Shrink.c,66 :: 		rightPower = rightPower * RIGHT_MOTOR_INVERTER * 0.8;
0x0942	0xBE9F8C  	PUSH.D	W12
0x0944	0xBE9F8A  	PUSH.D	W10
0x0946	0xBE000C  	MOV.D	W12, W0
0x0948	0x200002  	MOV	#0, W2
0x094A	0x2BF803  	MOV	#49024, W3
0x094C	0x07FE13  	RCALL	__Mul_FP
0x094E	0x2CCCD2  	MOV	#52429, W2
0x0950	0x23F4C3  	MOV	#16204, W3
0x0952	0x07FE10  	RCALL	__Mul_FP
0x0954	0xBE054F  	POP.D	W10
0x0956	0xBE064F  	POP.D	W12
0x0958	0xBE0600  	MOV.D	W0, W12
;Auterna Shrink.c,75 :: 		if (leftPower > 100) leftPower = 100;
0x095A	0xBE9F8C  	PUSH.D	W12
0x095C	0xBE9F8A  	PUSH.D	W10
0x095E	0x200002  	MOV	#0, W2
0x0960	0x242C83  	MOV	#17096, W3
0x0962	0xBE000A  	MOV.D	W10, W0
0x0964	0x07FE94  	RCALL	__Compare_Ge_Fp
0x0966	0xE00000  	CP0	W0
0x0968	0xEF6000  	CLR.B	W0
0x096A	0x340001  	BRA LE	L__controlMotors74
0x096C	0xEC6000  	INC.B	W0
L__controlMotors74:
0x096E	0xBE054F  	POP.D	W10
0x0970	0xBE064F  	POP.D	W12
0x0972	0xE24000  	CP0.B	W0
0x0974	0x320002  	BRA Z	L_controlMotors3
L__controlMotors75:
0x0976	0x20000A  	MOV	#0, W10
0x0978	0x242C8B  	MOV	#17096, W11
L_controlMotors3:
;Auterna Shrink.c,76 :: 		if (leftPower < -100) leftPower = -100;
0x097A	0xBE9F8C  	PUSH.D	W12
0x097C	0xBE9F8A  	PUSH.D	W10
0x097E	0x200002  	MOV	#0, W2
0x0980	0x2C2C83  	MOV	#49864, W3
0x0982	0xBE000A  	MOV.D	W10, W0
0x0984	0x07FE89  	RCALL	__Compare_Le_Fp
0x0986	0xE00000  	CP0	W0
0x0988	0xEF6000  	CLR.B	W0
0x098A	0x3D0001  	BRA GE	L__controlMotors76
0x098C	0xEC6000  	INC.B	W0
L__controlMotors76:
0x098E	0xBE054F  	POP.D	W10
0x0990	0xBE064F  	POP.D	W12
0x0992	0xE24000  	CP0.B	W0
0x0994	0x320002  	BRA Z	L_controlMotors4
L__controlMotors77:
0x0996	0x20000A  	MOV	#0, W10
0x0998	0x2C2C8B  	MOV	#49864, W11
L_controlMotors4:
;Auterna Shrink.c,78 :: 		if (rightPower > 100) rightPower = 100;
0x099A	0xBE9F8C  	PUSH.D	W12
0x099C	0xBE9F8A  	PUSH.D	W10
0x099E	0x200002  	MOV	#0, W2
0x09A0	0x242C83  	MOV	#17096, W3
0x09A2	0xBE000C  	MOV.D	W12, W0
0x09A4	0x07FE74  	RCALL	__Compare_Ge_Fp
0x09A6	0xE00000  	CP0	W0
0x09A8	0xEF6000  	CLR.B	W0
0x09AA	0x340001  	BRA LE	L__controlMotors78
0x09AC	0xEC6000  	INC.B	W0
L__controlMotors78:
0x09AE	0xBE054F  	POP.D	W10
0x09B0	0xBE064F  	POP.D	W12
0x09B2	0xE24000  	CP0.B	W0
0x09B4	0x320002  	BRA Z	L_controlMotors5
L__controlMotors79:
0x09B6	0x20000C  	MOV	#0, W12
0x09B8	0x242C8D  	MOV	#17096, W13
L_controlMotors5:
;Auterna Shrink.c,79 :: 		if (rightPower < -100) rightPower = -100;
0x09BA	0xBE9F8C  	PUSH.D	W12
0x09BC	0xBE9F8A  	PUSH.D	W10
0x09BE	0x200002  	MOV	#0, W2
0x09C0	0x2C2C83  	MOV	#49864, W3
0x09C2	0xBE000C  	MOV.D	W12, W0
0x09C4	0x07FE69  	RCALL	__Compare_Le_Fp
0x09C6	0xE00000  	CP0	W0
0x09C8	0xEF6000  	CLR.B	W0
0x09CA	0x3D0001  	BRA GE	L__controlMotors80
0x09CC	0xEC6000  	INC.B	W0
L__controlMotors80:
0x09CE	0xBE054F  	POP.D	W10
0x09D0	0xBE064F  	POP.D	W12
0x09D2	0xE24000  	CP0.B	W0
0x09D4	0x320002  	BRA Z	L_controlMotors6
L__controlMotors81:
0x09D6	0x20000C  	MOV	#0, W12
0x09D8	0x2C2C8D  	MOV	#49864, W13
L_controlMotors6:
;Auterna Shrink.c,81 :: 		if (leftPower >= 0)
0x09DA	0xBE9F8C  	PUSH.D	W12
0x09DC	0xBE9F8A  	PUSH.D	W10
0x09DE	0xEF2004  	CLR	W2
0x09E0	0xEF2006  	CLR	W3
0x09E2	0xBE000A  	MOV.D	W10, W0
0x09E4	0x07FE54  	RCALL	__Compare_Ge_Fp
0x09E6	0xE00000  	CP0	W0
0x09E8	0xEF6000  	CLR.B	W0
0x09EA	0x350001  	BRA LT	L__controlMotors82
0x09EC	0xEC6000  	INC.B	W0
L__controlMotors82:
0x09EE	0xBE054F  	POP.D	W10
0x09F0	0xBE064F  	POP.D	W12
0x09F2	0xE24000  	CP0.B	W0
0x09F4	0x32000C  	BRA Z	L_controlMotors7
L__controlMotors83:
;Auterna Shrink.c,82 :: 		LEFT_MOTOR = (STOP_V_LEFT + (LEFT_MOTOR_RISE_RATE * leftPower));
0x09F6	0xBE9F8C  	PUSH.D	W12
0x09F8	0x233330  	MOV	#13107, W0
0x09FA	0x23F931  	MOV	#16275, W1
0x09FC	0xBE010A  	MOV.D	W10, W2
0x09FE	0x07FDBA  	RCALL	__Mul_FP
0x0A00	0x200002  	MOV	#0, W2
0x0A02	0x2430C3  	MOV	#17164, W3
0x0A04	0x07FCB2  	RCALL	__AddSub_FP
0x0A06	0x07FD7A  	RCALL	__Float2Longint
0x0A08	0xBE064F  	POP.D	W12
0x0A0A	0xB7A276  	MOV	WREG, DAC1DAT
0x0A0C	0x37000B  	BRA	L_controlMotors8
L_controlMotors7:
;Auterna Shrink.c,84 :: 		LEFT_MOTOR = (STOP_V_LEFT + (LEFT_MOTOR_DOWN_RATE * leftPower));
0x0A0E	0xBE9F8C  	PUSH.D	W12
0x0A10	0x233330  	MOV	#13107, W0
0x0A12	0x23FB31  	MOV	#16307, W1
0x0A14	0xBE010A  	MOV.D	W10, W2
0x0A16	0x07FDAE  	RCALL	__Mul_FP
0x0A18	0x200002  	MOV	#0, W2
0x0A1A	0x2430C3  	MOV	#17164, W3
0x0A1C	0x07FCA6  	RCALL	__AddSub_FP
0x0A1E	0x07FD6E  	RCALL	__Float2Longint
0x0A20	0xBE064F  	POP.D	W12
0x0A22	0xB7A276  	MOV	WREG, DAC1DAT
L_controlMotors8:
;Auterna Shrink.c,86 :: 		if (rightPower > 0)
0x0A24	0xBE9F8C  	PUSH.D	W12
0x0A26	0xEF2004  	CLR	W2
0x0A28	0xEF2006  	CLR	W3
0x0A2A	0xBE000C  	MOV.D	W12, W0
0x0A2C	0x07FE30  	RCALL	__Compare_Ge_Fp
0x0A2E	0xE00000  	CP0	W0
0x0A30	0xEF6000  	CLR.B	W0
0x0A32	0x340001  	BRA LE	L__controlMotors84
0x0A34	0xEC6000  	INC.B	W0
L__controlMotors84:
0x0A36	0xBE064F  	POP.D	W12
0x0A38	0xE24000  	CP0.B	W0
0x0A3A	0x32000A  	BRA Z	L_controlMotors9
L__controlMotors85:
;Auterna Shrink.c,87 :: 		RIGHT_MOTOR = (STOP_V_RIGHT + (RIGHT_MOTOR_RISE_RATE * rightPower));
0x0A3C	0x233330  	MOV	#13107, W0
0x0A3E	0x23F931  	MOV	#16275, W1
0x0A40	0xBE010C  	MOV.D	W12, W2
0x0A42	0x07FD98  	RCALL	__Mul_FP
0x0A44	0x200002  	MOV	#0, W2
0x0A46	0x2430C3  	MOV	#17164, W3
0x0A48	0x07FC90  	RCALL	__AddSub_FP
0x0A4A	0x07FD58  	RCALL	__Float2Longint
0x0A4C	0xB7A27A  	MOV	WREG, DAC2DAT
0x0A4E	0x370009  	BRA	L_controlMotors10
L_controlMotors9:
;Auterna Shrink.c,89 :: 		RIGHT_MOTOR = (STOP_V_RIGHT + (RIGHT_MOTOR_DOWN_RATE * rightPower));
0x0A50	0x233330  	MOV	#13107, W0
0x0A52	0x23FB31  	MOV	#16307, W1
0x0A54	0xBE010C  	MOV.D	W12, W2
0x0A56	0x07FD8E  	RCALL	__Mul_FP
0x0A58	0x200002  	MOV	#0, W2
0x0A5A	0x2430C3  	MOV	#17164, W3
0x0A5C	0x07FC86  	RCALL	__AddSub_FP
0x0A5E	0x07FD4E  	RCALL	__Float2Longint
0x0A60	0xB7A27A  	MOV	WREG, DAC2DAT
L_controlMotors10:
;Auterna Shrink.c,105 :: 		}
L_end_controlMotors:
0x0A62	0x060000  	RETURN
; end of _controlMotors
__Mul_FP:
0x0574	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,855 :: 		
;__Lib_MathDouble.c,857 :: 		
0x0576	0x070002  	RCALL	MulFP___mulsf3
;__Lib_MathDouble.c,858 :: 		
0x0578	0x00000004068A  	GOTO	the_end__Mul_FP
;__Lib_MathDouble.c,861 :: 		
MulFP___mulsf3:
;__Lib_MathDouble.c,862 :: 		
0x057C	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,863 :: 		
0x057E	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,864 :: 		
0x0580	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,865 :: 		
0x0582	0x070030  	RCALL	MulFP__funpack2
;__Lib_MathDouble.c,866 :: 		
0x0584	0x330037  	BRA N	MulFP__fPropagateNaN
;__Lib_MathDouble.c,867 :: 		
0x0586	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,868 :: 		
0x0588	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,869 :: 		
0x058A	0x320024  	BRA Z	MulFP_aisinfinite
;__Lib_MathDouble.c,870 :: 		
0x058C	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,871 :: 		
0x058E	0x320027  	BRA Z	MulFP_bisinfinite
;__Lib_MathDouble.c,872 :: 		
0x0590	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,873 :: 		
0x0592	0x320022  	BRA Z	MulFP_return8_1
;__Lib_MathDouble.c,874 :: 		
0x0594	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,875 :: 		
0x0596	0x320021  	BRA Z	MulFP_return2_1
;__Lib_MathDouble.c,876 :: 		
0x0598	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,877 :: 		
0x059A	0xB107EB  	SUB	#126, W11
;__Lib_MathDouble.c,878 :: 		
0x059C	0xB83401  	MUL.UU	W6, W1, W8
;__Lib_MathDouble.c,879 :: 		
0x059E	0xB83A00  	MUL.UU	W7, W0, W4
;__Lib_MathDouble.c,880 :: 		
0x05A0	0x420408  	ADD	W4, W8, W8
;__Lib_MathDouble.c,881 :: 		
0x05A2	0x4A8489  	ADDC	W5, W9, W9
;__Lib_MathDouble.c,882 :: 		
0x05A4	0xB83A01  	MUL.UU	W7, W1, W4
;__Lib_MathDouble.c,883 :: 		
0x05A6	0xB83000  	MUL.UU	W6, W0, W0
;__Lib_MathDouble.c,884 :: 		
0x05A8	0x408088  	ADD	W1, W8, W1
;__Lib_MathDouble.c,885 :: 		
0x05AA	0x4A0109  	ADDC	W4, W9, W2
;__Lib_MathDouble.c,886 :: 		
0x05AC	0x330004  	BRA N	MulFP_formsticky
;__Lib_MathDouble.c,887 :: 		
0x05AE	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,888 :: 		
0x05B0	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,889 :: 		
0x05B2	0x490102  	ADDC	W2, W2, W2
;__Lib_MathDouble.c,890 :: 		
0x05B4	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,891 :: 		
MulFP_formsticky:
;__Lib_MathDouble.c,892 :: 		
0x05B6	0xDD09C9  	SL	W1, #9, W3
;__Lib_MathDouble.c,893 :: 		
0x05B8	0x700183  	IOR	W0, W3, W3
;__Lib_MathDouble.c,894 :: 		
0x05BA	0x320001  	BRA Z	MulFP_formRandSig
;__Lib_MathDouble.c,895 :: 		
0x05BC	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,896 :: 		
MulFP_formRandSig:
;__Lib_MathDouble.c,897 :: 		
0x05BE	0xDE14C8  	LSR	W2, #8, W9
;__Lib_MathDouble.c,898 :: 		
0x05C0	0xDD1448  	SL	W2, #8, W8
;__Lib_MathDouble.c,899 :: 		
0x05C2	0xDE0947  	LSR	W1, #7, W2
;__Lib_MathDouble.c,900 :: 		
0x05C4	0xB20012  	AND	#1, W2
;__Lib_MathDouble.c,901 :: 		
0x05C6	0xDE08C8  	LSR	W1, #8, W1
;__Lib_MathDouble.c,902 :: 		
0x05C8	0x708408  	IOR	W1, W8, W8
;__Lib_MathDouble.c,903 :: 		
0x05CA	0x070024  	RCALL	MulFP__fpack
;__Lib_MathDouble.c,904 :: 		
MulFP_return0_1:
;__Lib_MathDouble.c,905 :: 		
0x05CC	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,906 :: 		
0x05CE	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,907 :: 		
0x05D0	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,908 :: 		
0x05D2	0x370019  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,909 :: 		
MulFP_aisinfinite:
;__Lib_MathDouble.c,910 :: 		
0x05D4	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,911 :: 		
0x05D6	0x32001B  	BRA Z	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,912 :: 		
MulFP_return8_1:
;__Lib_MathDouble.c,913 :: 		
0x05D8	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,914 :: 		
MulFP_return2_1:
;__Lib_MathDouble.c,915 :: 		
0x05DA	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,916 :: 		
0x05DC	0x37FFF7  	BRA	MulFP_return0_1
;__Lib_MathDouble.c,917 :: 		
MulFP_bisinfinite:
;__Lib_MathDouble.c,918 :: 		
0x05DE	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,919 :: 		
0x05E0	0x3AFFFC  	BRA NZ	MulFP_return2_1
;__Lib_MathDouble.c,920 :: 		
0x05E2	0x370015  	BRA	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,921 :: 		
MulFP__funpack2:
;__Lib_MathDouble.c,922 :: 		
0x05E4	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,923 :: 		
0x05E6	0x07003C  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,924 :: 		
0x05E8	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,925 :: 		
0x05EA	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,926 :: 		
0x05EC	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,927 :: 		
0x05EE	0x070038  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,928 :: 		
0x05F0	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,929 :: 		
0x05F2	0x060000  	RETURN
;__Lib_MathDouble.c,930 :: 		
MulFP__fPropagateNaN:
;__Lib_MathDouble.c,931 :: 		
0x05F4	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,932 :: 		
0x05F6	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,933 :: 		
0x05F8	0x360005  	BRA LEU	MulFP_return0_2
;__Lib_MathDouble.c,934 :: 		
0x05FA	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,935 :: 		
0x05FC	0x360002  	BRA LEU	MulFP_return8_2
;__Lib_MathDouble.c,936 :: 		
0x05FE	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,937 :: 		
0x0600	0x3A0001  	BRA NZ	MulFP_return0_2
;__Lib_MathDouble.c,938 :: 		
MulFP_return8_2:
;__Lib_MathDouble.c,939 :: 		
0x0602	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,940 :: 		
MulFP_return0_2:
;__Lib_MathDouble.c,941 :: 		
0x0604	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,942 :: 		
MulFP__fbopExit:
;__Lib_MathDouble.c,943 :: 		
0x0606	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,944 :: 		
0x0608	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,945 :: 		
0x060A	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,946 :: 		
0x060C	0x060000  	RETURN
;__Lib_MathDouble.c,947 :: 		
MulFP__fbopReturnNaN:
;__Lib_MathDouble.c,948 :: 		
0x060E	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,949 :: 		
0x0610	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,950 :: 		
0x0612	0x37FFF9  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,951 :: 		
MulFP__fpack:
;__Lib_MathDouble.c,952 :: 		
0x0614	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,953 :: 		
0x0616	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,954 :: 		
0x0618	0x3D000B  	BRA GE	MulFP_notsubnormal
;__Lib_MathDouble.c,955 :: 		
0x061A	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,956 :: 		
0x061C	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,957 :: 		
0x061E	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,958 :: 		
0x0620	0x34001D  	BRA LE	MulFP_zerosig
;__Lib_MathDouble.c,959 :: 		
MulFP_subnormal1:
;__Lib_MathDouble.c,960 :: 		
0x0622	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,961 :: 		
0x0624	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,962 :: 		
0x0626	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,963 :: 		
0x0628	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,964 :: 		
0x062A	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,965 :: 		
0x062C	0x3AFFFA  	BRA NZ	MulFP_subnormal1
;__Lib_MathDouble.c,966 :: 		
0x062E	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,967 :: 		
MulFP_notsubnormal:
;__Lib_MathDouble.c,968 :: 		
0x0630	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,969 :: 		
0x0632	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,970 :: 		
0x0634	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,971 :: 		
0x0636	0x320009  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,972 :: 		
0x0638	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,973 :: 		
0x063A	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,974 :: 		
0x063C	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,975 :: 		
0x063E	0x320005  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,976 :: 		
0x0640	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,977 :: 		
0x0642	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,978 :: 		
0x0644	0x3A0002  	BRA NZ	MulFP_packupandgo
;__Lib_MathDouble.c,979 :: 		
0x0646	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,980 :: 		
0x0648	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,981 :: 		
MulFP_packupandgo:
;__Lib_MathDouble.c,982 :: 		
0x064A	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,983 :: 		
0x064C	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,984 :: 		
0x064E	0x3D0005  	BRA GE	MulFP_overflow
;__Lib_MathDouble.c,985 :: 		
0x0650	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,986 :: 		
0x0652	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,987 :: 		
0x0654	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,988 :: 		
0x0656	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,989 :: 		
0x0658	0x060000  	RETURN
;__Lib_MathDouble.c,990 :: 		
MulFP_overflow:
;__Lib_MathDouble.c,991 :: 		
0x065A	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,992 :: 		
MulFP_zerosig:
;__Lib_MathDouble.c,993 :: 		
0x065C	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,994 :: 		
0x065E	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,995 :: 		
MulFP__funpack:
;__Lib_MathDouble.c,996 :: 		
0x0660	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,997 :: 		
0x0662	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,998 :: 		
0x0664	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,999 :: 		
0x0666	0x320008  	BRA Z	MulFP_zeroorsub
;__Lib_MathDouble.c,1000 :: 		
0x0668	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1001 :: 		
0x066A	0x320002  	BRA Z	MulFP_nanorinf
;__Lib_MathDouble.c,1002 :: 		
MulFP_finitereturn:
;__Lib_MathDouble.c,1003 :: 		
0x066C	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1004 :: 		
0x066E	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1005 :: 		
MulFP_nanorinf:
;__Lib_MathDouble.c,1006 :: 		
0x0670	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1007 :: 		
0x0672	0x320001  	BRA Z	MulFP_infinite
;__Lib_MathDouble.c,1008 :: 		
0x0674	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1009 :: 		
MulFP_infinite:
;__Lib_MathDouble.c,1010 :: 		
0x0676	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1011 :: 		
MulFP_zeroorsub:
;__Lib_MathDouble.c,1012 :: 		
0x0678	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1013 :: 		
0x067A	0x3A0002  	BRA NZ	MulFP_subnormal2
;__Lib_MathDouble.c,1014 :: 		
0x067C	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1015 :: 		
MulFP_normalize:
;__Lib_MathDouble.c,1016 :: 		
0x067E	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1017 :: 		
MulFP_subnormal2:
;__Lib_MathDouble.c,1018 :: 		
0x0680	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1019 :: 		
0x0682	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1020 :: 		
0x0684	0x3BFFFC  	BRA NN	MulFP_normalize
;__Lib_MathDouble.c,1021 :: 		
0x0686	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1022 :: 		
0x0688	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1025 :: 		
the_end__Mul_FP:
;__Lib_MathDouble.c,1028 :: 		
L_end__Mul_FP:
0x068A	0xFA8000  	ULNK
0x068C	0x060000  	RETURN
; end of __Mul_FP
__Compare_Ge_Fp:
0x068E	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1354 :: 		
;__Lib_MathDouble.c,1355 :: 		
0x0690	0x2FFFF4  	MOV	#65535, W4
;__Lib_MathDouble.c,1356 :: 		
0x0692	0x07FDB9  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1357 :: 		
L_end__Compare_Ge_Fp:
0x0694	0xFA8000  	ULNK
0x0696	0x060000  	RETURN
; end of __Compare_Ge_Fp
__Compare_Fp:
0x0206	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1272 :: 		
;__Lib_MathDouble.c,1274 :: 		
0x0208	0x070002  	RCALL	CompareFp__fcompare
;__Lib_MathDouble.c,1275 :: 		
0x020A	0x000000040274  	GOTO	the_end__Compare_Fp
;__Lib_MathDouble.c,1277 :: 		
CompareFp__fcompare:
;__Lib_MathDouble.c,1278 :: 		
0x020E	0x781F84  	MOV	W4, [W15++]
;__Lib_MathDouble.c,1279 :: 		
0x0210	0x070014  	RCALL	CompareFp__funpack2
;__Lib_MathDouble.c,1280 :: 		
0x0212	0x78004F  	MOV	[--W15], W0
;__Lib_MathDouble.c,1281 :: 		
0x0214	0x330011  	BRA N	CompareFp_exit
;__Lib_MathDouble.c,1282 :: 		
0x0216	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1283 :: 		
0x0218	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,1284 :: 		
0x021A	0x3B0006  	BRA NN	CompareFp_comparemag
;__Lib_MathDouble.c,1285 :: 		
0x021C	0x650504  	AND	W10, W4, W10
;__Lib_MathDouble.c,1286 :: 		
0x021E	0xA7000A  	BTSC	W10, #0
;__Lib_MathDouble.c,1287 :: 		
0x0220	0x370008  	BRA	CompareFp_returnEqual
;__Lib_MathDouble.c,1288 :: 		
0x0222	0xA6F009  	BTSS	W9, #15
;__Lib_MathDouble.c,1289 :: 		
0x0224	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1290 :: 		
0x0226	0x370008  	BRA	CompareFp_exit
;__Lib_MathDouble.c,1291 :: 		
CompareFp_comparemag:
;__Lib_MathDouble.c,1292 :: 		
0x0228	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,1293 :: 		
0x022A	0x5C8F83  	SUBB	W9, W3, [W15]
;__Lib_MathDouble.c,1294 :: 		
0x022C	0x390003  	BRA LTU	CompareFp_adjust
;__Lib_MathDouble.c,1295 :: 		
0x022E	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1296 :: 		
0x0230	0x3E0001  	BRA GTU	CompareFp_adjust
;__Lib_MathDouble.c,1297 :: 		
CompareFp_returnEqual:
;__Lib_MathDouble.c,1298 :: 		
0x0232	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1299 :: 		
CompareFp_adjust:
;__Lib_MathDouble.c,1300 :: 		
0x0234	0xA7F009  	BTSC	W9, #15
;__Lib_MathDouble.c,1301 :: 		
0x0236	0xEA0000  	NEG	W0, W0
;__Lib_MathDouble.c,1302 :: 		
CompareFp_exit:
;__Lib_MathDouble.c,1303 :: 		
0x0238	0x060000  	RETURN
;__Lib_MathDouble.c,1304 :: 		
CompareFp__funpack2:
;__Lib_MathDouble.c,1305 :: 		
0x023A	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1306 :: 		
0x023C	0x070006  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1307 :: 		
0x023E	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1308 :: 		
0x0240	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1309 :: 		
0x0242	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1310 :: 		
0x0244	0x070002  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1311 :: 		
0x0246	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1312 :: 		
0x0248	0x060000  	RETURN
;__Lib_MathDouble.c,1313 :: 		
CompareFp__funpack:
;__Lib_MathDouble.c,1314 :: 		
0x024A	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1315 :: 		
0x024C	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1316 :: 		
0x024E	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1317 :: 		
0x0250	0x320008  	BRA Z	CompareFp_zeroorsub
;__Lib_MathDouble.c,1318 :: 		
0x0252	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1319 :: 		
0x0254	0x320002  	BRA Z	CompareFp_nanorinf
;__Lib_MathDouble.c,1320 :: 		
CompareFp_finitereturn:
;__Lib_MathDouble.c,1321 :: 		
0x0256	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1322 :: 		
0x0258	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1323 :: 		
CompareFp_nanorinf:
;__Lib_MathDouble.c,1324 :: 		
0x025A	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1325 :: 		
0x025C	0x320001  	BRA Z	CompareFp_infinite
;__Lib_MathDouble.c,1326 :: 		
0x025E	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1327 :: 		
CompareFp_infinite:
;__Lib_MathDouble.c,1328 :: 		
0x0260	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1329 :: 		
CompareFp_zeroorsub:
;__Lib_MathDouble.c,1330 :: 		
0x0262	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1331 :: 		
0x0264	0x3A0002  	BRA NZ	CompareFp_subnormal
;__Lib_MathDouble.c,1332 :: 		
0x0266	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1333 :: 		
CompareFp_normalize:
;__Lib_MathDouble.c,1334 :: 		
0x0268	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1335 :: 		
CompareFp_subnormal:
;__Lib_MathDouble.c,1336 :: 		
0x026A	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1337 :: 		
0x026C	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1338 :: 		
0x026E	0x3BFFFC  	BRA NN	CompareFp_normalize
;__Lib_MathDouble.c,1339 :: 		
0x0270	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1340 :: 		
0x0272	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1343 :: 		
the_end__Compare_Fp:
;__Lib_MathDouble.c,1345 :: 		
L_end__Compare_Fp:
0x0274	0xFA8000  	ULNK
0x0276	0x060000  	RETURN
; end of __Compare_Fp
__Compare_Le_Fp:
0x0698	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1348 :: 		
;__Lib_MathDouble.c,1349 :: 		
0x069A	0x200014  	MOV	#1, W4
;__Lib_MathDouble.c,1350 :: 		
0x069C	0x07FDB4  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1351 :: 		
L_end__Compare_Le_Fp:
0x069E	0xFA8000  	ULNK
0x06A0	0x060000  	RETURN
; end of __Compare_Le_Fp
__AddSub_FP:
0x036A	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,582 :: 		
;__Lib_MathDouble.c,584 :: 		
0x036C	0x070002  	RCALL	AddSubFP__addsf3
;__Lib_MathDouble.c,585 :: 		
0x036E	0x0000000404D2  	GOTO	the_end__AddSub_FP
;__Lib_MathDouble.c,588 :: 		
AddSubFP__addsf3:
;__Lib_MathDouble.c,589 :: 		
0x0372	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,590 :: 		
0x0374	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,591 :: 		
0x0376	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,592 :: 		
0x0378	0x070059  	RCALL	AddSubFP__funpack2
;__Lib_MathDouble.c,593 :: 		
0x037A	0x330060  	BRA N	AddSubFP__fPropagateNaN
;__Lib_MathDouble.c,594 :: 		
0x037C	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,595 :: 		
0x037E	0x32004F  	BRA Z	AddSubFP_aisinfinite
;__Lib_MathDouble.c,596 :: 		
AddSubFP_checkspecialb:
;__Lib_MathDouble.c,597 :: 		
0x0380	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,598 :: 		
0x0382	0x320052  	BRA Z	AddSubFP_return2_3
;__Lib_MathDouble.c,599 :: 		
0x0384	0x6C8203  	XOR	W9, W3, W4
;__Lib_MathDouble.c,600 :: 		
0x0386	0x3B0007  	BRA NN	AddSubFP_getsign
;__Lib_MathDouble.c,601 :: 		
0x0388	0xD00509  	SL	W9, W10
;__Lib_MathDouble.c,602 :: 		
0x038A	0xD00603  	SL	W3, W12
;__Lib_MathDouble.c,603 :: 		
0x038C	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,604 :: 		
0x038E	0x5D060C  	SUBB	W10, W12, W12
;__Lib_MathDouble.c,605 :: 		
0x0390	0x390002  	BRA NC	AddSubFP_getsign
;__Lib_MathDouble.c,606 :: 		
0x0392	0x320002  	BRA Z	AddSubFP_gotsign
;__Lib_MathDouble.c,607 :: 		
0x0394	0x880039  	MOV	W9, W3
;__Lib_MathDouble.c,608 :: 		
AddSubFP_getsign:
;__Lib_MathDouble.c,609 :: 		
0x0396	0x8800C3  	MOV	W3, W12
;__Lib_MathDouble.c,610 :: 		
AddSubFP_gotsign:
;__Lib_MathDouble.c,611 :: 		
0x0398	0x558285  	SUB	W11, W5, W5
;__Lib_MathDouble.c,612 :: 		
0x039A	0x3D0004  	BRA GE	AddSubFP_expcanonical
;__Lib_MathDouble.c,613 :: 		
0x039C	0xFD0300  	EXCH	W0, W6
;__Lib_MathDouble.c,614 :: 		
0x039E	0xFD0381  	EXCH	W1, W7
;__Lib_MathDouble.c,615 :: 		
0x03A0	0xEA0285  	NEG	W5, W5
;__Lib_MathDouble.c,616 :: 		
0x03A2	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,617 :: 		
AddSubFP_expcanonical:
;__Lib_MathDouble.c,618 :: 		
0x03A4	0x720F84  	IOR	W4, W4, [W15]
;__Lib_MathDouble.c,619 :: 		
0x03A6	0x3B0002  	BRA NN	AddSubFP_nonegate
;__Lib_MathDouble.c,620 :: 		
0x03A8	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,621 :: 		
0x03AA	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,622 :: 		
AddSubFP_nonegate:
;__Lib_MathDouble.c,623 :: 		
0x03AC	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,624 :: 		
0x03AE	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,625 :: 		
0x03B0	0xE1287A  	CP	W5, #26
;__Lib_MathDouble.c,626 :: 		
0x03B2	0x39000A  	BRA NC	AddSubFP_aligniter
;__Lib_MathDouble.c,627 :: 		
0x03B4	0x880006  	MOV	W6, W0
;__Lib_MathDouble.c,628 :: 		
0x03B6	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,629 :: 		
0x03B8	0xB207F7  	AND	#127, W7
;__Lib_MathDouble.c,630 :: 		
0x03BA	0x758087  	IOR	W11, W7, W1
;__Lib_MathDouble.c,631 :: 		
0x03BC	0x37002D  	BRA	AddSubFP_signoff
;__Lib_MathDouble.c,632 :: 		
AddSubFP_align:
;__Lib_MathDouble.c,633 :: 		
0x03BE	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,634 :: 		
0x03C0	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,635 :: 		
0x03C2	0x600561  	AND	W0, #1, W10
;__Lib_MathDouble.c,636 :: 		
0x03C4	0xD18081  	ASR	W1, W1
;__Lib_MathDouble.c,637 :: 		
0x03C6	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,638 :: 		
AddSubFP_aligniter:
;__Lib_MathDouble.c,639 :: 		
0x03C8	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,640 :: 		
0x03CA	0x3BFFF9  	BRA NN	AddSubFP_align
;__Lib_MathDouble.c,641 :: 		
AddSubFP_aligned:
;__Lib_MathDouble.c,642 :: 		
0x03CC	0x400406  	ADD	W0, W6, W8
;__Lib_MathDouble.c,643 :: 		
0x03CE	0x488487  	ADDC	W1, W7, W9
;__Lib_MathDouble.c,644 :: 		
0x03D0	0x3B0002  	BRA NN	AddSubFP_normalizesum
;__Lib_MathDouble.c,645 :: 		
0x03D2	0x140460  	SUBR	W8, #0, W8
;__Lib_MathDouble.c,646 :: 		
0x03D4	0x1C84E0  	SUBBR	W9, #0, W9
;__Lib_MathDouble.c,647 :: 		
AddSubFP_normalizesum:
;__Lib_MathDouble.c,648 :: 		
0x03D6	0xA38809  	BTST.Z	W9, #8
;__Lib_MathDouble.c,649 :: 		
0x03D8	0x320007  	BRA Z	AddSubFP_checknormal
;__Lib_MathDouble.c,650 :: 		
0x03DA	0x71818A  	IOR	W3, W10, W3
;__Lib_MathDouble.c,651 :: 		
0x03DC	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,652 :: 		
0x03DE	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,653 :: 		
0x03E0	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,654 :: 		
0x03E2	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,655 :: 		
0x03E4	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,656 :: 		
0x03E6	0x370017  	BRA	AddSubFP_round
;__Lib_MathDouble.c,657 :: 		
AddSubFP_checknormal:
;__Lib_MathDouble.c,658 :: 		
0x03E8	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,659 :: 		
0x03EA	0x3A0013  	BRA NZ	AddSubFP_discardguard
;__Lib_MathDouble.c,660 :: 		
AddSubFP_underflow:
;__Lib_MathDouble.c,661 :: 		
0x03EC	0xE20016  	CP0	W11
;__Lib_MathDouble.c,662 :: 		
0x03EE	0x340013  	BRA LE	AddSubFP_round
;__Lib_MathDouble.c,663 :: 		
0x03F0	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,664 :: 		
0x03F2	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,665 :: 		
0x03F4	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,666 :: 		
0x03F6	0x74440A  	IOR.B	W8, W10, W8
;__Lib_MathDouble.c,667 :: 		
0x03F8	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,668 :: 		
0x03FA	0x3A000D  	BRA NZ	AddSubFP_round
;__Lib_MathDouble.c,669 :: 		
AddSubFP_normalizeloop:
;__Lib_MathDouble.c,670 :: 		
0x03FC	0xE20016  	CP0	W11
;__Lib_MathDouble.c,671 :: 		
0x03FE	0x340007  	BRA LE	AddSubFP_normalizeexit
;__Lib_MathDouble.c,672 :: 		
0x0400	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,673 :: 		
0x0402	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,674 :: 		
0x0404	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,675 :: 		
0x0406	0x3A0001  	BRA NZ	AddSubFP_normalizetest
;__Lib_MathDouble.c,676 :: 		
0x0408	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,677 :: 		
AddSubFP_normalizetest:
;__Lib_MathDouble.c,678 :: 		
0x040A	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,679 :: 		
0x040C	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
;__Lib_MathDouble.c,680 :: 		
AddSubFP_normalizeexit:
;__Lib_MathDouble.c,681 :: 		
0x040E	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,682 :: 		
0x0410	0x370002  	BRA	AddSubFP_round
;__Lib_MathDouble.c,683 :: 		
AddSubFP_discardguard:
;__Lib_MathDouble.c,684 :: 		
0x0412	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,685 :: 		
0x0414	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,686 :: 		
AddSubFP_round:
;__Lib_MathDouble.c,687 :: 		
0x0416	0x070022  	RCALL	AddSubFP__fpack
;__Lib_MathDouble.c,688 :: 		
AddSubFP_signoff:
;__Lib_MathDouble.c,689 :: 		
0x0418	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,690 :: 		
0x041A	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,691 :: 		
0x041C	0x370018  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,692 :: 		
AddSubFP_aisinfinite:
;__Lib_MathDouble.c,693 :: 		
0x041E	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,694 :: 		
0x0420	0x3A0002  	BRA NZ	AddSubFP_return8_3
;__Lib_MathDouble.c,695 :: 		
0x0422	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,696 :: 		
0x0424	0x330018  	BRA N	AddSubFP__fbopReturnNaN
;__Lib_MathDouble.c,697 :: 		
AddSubFP_return8_3:
;__Lib_MathDouble.c,698 :: 		
0x0426	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,699 :: 		
AddSubFP_return2_3:
;__Lib_MathDouble.c,700 :: 		
0x0428	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,701 :: 		
0x042A	0x370011  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,702 :: 		
AddSubFP__funpack2:
;__Lib_MathDouble.c,703 :: 		
0x042C	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,704 :: 		
0x042E	0x07003C  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,705 :: 		
0x0430	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,706 :: 		
0x0432	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,707 :: 		
0x0434	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,708 :: 		
0x0436	0x070038  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,709 :: 		
0x0438	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,710 :: 		
0x043A	0x060000  	RETURN
;__Lib_MathDouble.c,711 :: 		
AddSubFP__fPropagateNaN:
;__Lib_MathDouble.c,712 :: 		
0x043C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,713 :: 		
0x043E	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,714 :: 		
0x0440	0x360005  	BRA LEU	AddSubFP_return0_1
;__Lib_MathDouble.c,715 :: 		
0x0442	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,716 :: 		
0x0444	0x360002  	BRA LEU	AddSubFP_return8_1
;__Lib_MathDouble.c,717 :: 		
0x0446	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,718 :: 		
0x0448	0x3A0001  	BRA NZ	AddSubFP_return0_1
;__Lib_MathDouble.c,719 :: 		
AddSubFP_return8_1:
;__Lib_MathDouble.c,720 :: 		
0x044A	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,721 :: 		
AddSubFP_return0_1:
;__Lib_MathDouble.c,722 :: 		
0x044C	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,723 :: 		
AddSubFP__fbopExit:
;__Lib_MathDouble.c,724 :: 		
0x044E	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,725 :: 		
0x0450	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,726 :: 		
0x0452	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,727 :: 		
0x0454	0x060000  	RETURN
;__Lib_MathDouble.c,728 :: 		
AddSubFP__fbopReturnNaN:
;__Lib_MathDouble.c,729 :: 		
0x0456	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,730 :: 		
0x0458	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,731 :: 		
0x045A	0x37FFF9  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,732 :: 		
AddSubFP__fpack:
;__Lib_MathDouble.c,733 :: 		
0x045C	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,734 :: 		
0x045E	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,735 :: 		
0x0460	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
;__Lib_MathDouble.c,736 :: 		
0x0462	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,737 :: 		
0x0464	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,738 :: 		
0x0466	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,739 :: 		
0x0468	0x34001D  	BRA LE	AddSubFP_zerosig
;__Lib_MathDouble.c,740 :: 		
AddSubFP_subnormal_1:
;__Lib_MathDouble.c,741 :: 		
0x046A	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,742 :: 		
0x046C	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,743 :: 		
0x046E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,744 :: 		
0x0470	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,745 :: 		
0x0472	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,746 :: 		
0x0474	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
;__Lib_MathDouble.c,747 :: 		
0x0476	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,748 :: 		
AddSubFP_notsubnormal_1:
;__Lib_MathDouble.c,749 :: 		
0x0478	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,750 :: 		
0x047A	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,751 :: 		
0x047C	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,752 :: 		
0x047E	0x320009  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,753 :: 		
0x0480	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,754 :: 		
0x0482	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,755 :: 		
0x0484	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,756 :: 		
0x0486	0x320005  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,757 :: 		
0x0488	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,758 :: 		
0x048A	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,759 :: 		
0x048C	0x3A0002  	BRA NZ	AddSubFP_packupandgo
;__Lib_MathDouble.c,760 :: 		
0x048E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,761 :: 		
0x0490	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,762 :: 		
AddSubFP_packupandgo:
;__Lib_MathDouble.c,763 :: 		
0x0492	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,764 :: 		
0x0494	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,765 :: 		
0x0496	0x3D0005  	BRA GE	AddSubFP_overflow
;__Lib_MathDouble.c,766 :: 		
0x0498	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,767 :: 		
0x049A	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,768 :: 		
0x049C	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,769 :: 		
0x049E	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,770 :: 		
0x04A0	0x060000  	RETURN
;__Lib_MathDouble.c,771 :: 		
AddSubFP_overflow:
;__Lib_MathDouble.c,772 :: 		
0x04A2	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,773 :: 		
AddSubFP_zerosig:
;__Lib_MathDouble.c,774 :: 		
0x04A4	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,775 :: 		
0x04A6	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,776 :: 		
AddSubFP__funpack:
;__Lib_MathDouble.c,777 :: 		
0x04A8	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,778 :: 		
0x04AA	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,779 :: 		
0x04AC	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,780 :: 		
0x04AE	0x320008  	BRA Z	AddSubFP_zeroorsub
;__Lib_MathDouble.c,781 :: 		
0x04B0	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,782 :: 		
0x04B2	0x320002  	BRA Z	AddSubFP_nanorinf
;__Lib_MathDouble.c,783 :: 		
AddSubFP_finitereturn:
;__Lib_MathDouble.c,784 :: 		
0x04B4	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,785 :: 		
0x04B6	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,786 :: 		
AddSubFP_nanorinf:
;__Lib_MathDouble.c,787 :: 		
0x04B8	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,788 :: 		
0x04BA	0x320001  	BRA Z	AddSubFP_infinite
;__Lib_MathDouble.c,789 :: 		
0x04BC	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,790 :: 		
AddSubFP_infinite:
;__Lib_MathDouble.c,791 :: 		
0x04BE	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,792 :: 		
AddSubFP_zeroorsub:
;__Lib_MathDouble.c,793 :: 		
0x04C0	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,794 :: 		
0x04C2	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
;__Lib_MathDouble.c,795 :: 		
0x04C4	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,796 :: 		
AddSubFP_normalize:
;__Lib_MathDouble.c,797 :: 		
0x04C6	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,798 :: 		
AddSubFP_subnormal_2:
;__Lib_MathDouble.c,799 :: 		
0x04C8	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,800 :: 		
0x04CA	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,801 :: 		
0x04CC	0x3BFFFC  	BRA NN	AddSubFP_normalize
;__Lib_MathDouble.c,802 :: 		
0x04CE	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,803 :: 		
0x04D0	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,806 :: 		
the_end__AddSub_FP:
;__Lib_MathDouble.c,809 :: 		
L_end__AddSub_FP:
0x04D2	0xFA8000  	ULNK
0x04D4	0x060000  	RETURN
; end of __AddSub_FP
__Float2Longint:
0x04FC	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x04FE	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x0500	0x000000040570  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x0504	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,488 :: 		
0x0506	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x0508	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,490 :: 		
0x050A	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,491 :: 		
0x050C	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,492 :: 		
0x050E	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x0510	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x0512	0xE12868  	CP	W5, #8
;__Lib_MathDouble.c,495 :: 		
0x0514	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x0516	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,497 :: 		
0x0518	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,498 :: 		
0x051A	0xE20006  	CP0	W3
;__Lib_MathDouble.c,499 :: 		
0x051C	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x051E	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,501 :: 		
0x0520	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x0522	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,504 :: 		
0x0524	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,505 :: 		
0x0526	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,506 :: 		
0x0528	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x052A	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x052C	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,510 :: 		
0x052E	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x0530	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,512 :: 		
0x0532	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x0534	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,515 :: 		
0x0536	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,516 :: 		
0x0538	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,517 :: 		
0x053A	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x053C	0xE20006  	CP0	W3
;__Lib_MathDouble.c,520 :: 		
0x053E	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x0540	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,522 :: 		
0x0542	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x0544	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x0546	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,527 :: 		
0x0548	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,528 :: 		
0x054A	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,529 :: 		
0x054C	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x054E	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,531 :: 		
0x0550	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x0552	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,534 :: 		
0x0554	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x0556	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,537 :: 		
0x0558	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x055A	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x055C	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x055E	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,543 :: 		
0x0560	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x0562	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x0564	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x0566	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,549 :: 		
0x0568	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,550 :: 		
0x056A	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x056C	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,552 :: 		
0x056E	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x0570	0xFA8000  	ULNK
0x0572	0x060000  	RETURN
; end of __Float2Longint
_PWM3_Init:
0x090E	0xFA0000  	LNK	#0
;__Lib_PWM_FXXKM20X.c,122 :: 		
;__Lib_PWM_FXXKM20X.c,124 :: 		
0x0910	0x781F8B  	PUSH	W11
0x0912	0xEF2188  	CLR	CCP3CON1L
;__Lib_PWM_FXXKM20X.c,126 :: 		
0x0914	0xA96188  	BCLR	CCP3CON1Lbits, #3
;__Lib_PWM_FXXKM20X.c,127 :: 		
0x0916	0xA84188  	BSET	CCP3CON1Lbits, #2
;__Lib_PWM_FXXKM20X.c,128 :: 		
0x0918	0xA82188  	BSET	CCP3CON1Lbits, #1
;__Lib_PWM_FXXKM20X.c,129 :: 		
0x091A	0xA90188  	BCLR	CCP3CON1Lbits, #0
;__Lib_PWM_FXXKM20X.c,131 :: 		
0x091C	0xEF218A  	CLR	CCP3CON1H
;__Lib_PWM_FXXKM20X.c,133 :: 		
0x091E	0xA8E18D  	BSET	CCP3CON2Lbits, #15
;__Lib_PWM_FXXKM20X.c,135 :: 		
0x0920	0xAE0016  	BTSS	W11, #0
0x0922	0x370001  	BRA	L_PWM3_Init12
;__Lib_PWM_FXXKM20X.c,136 :: 		
0x0924	0xA8018F  	BSET	CCP3CON2Hbits, #8
L_PWM3_Init12:
;__Lib_PWM_FXXKM20X.c,137 :: 		
0x0926	0xAE8016  	BTSS	W11, #4
0x0928	0x370001  	BRA	L_PWM3_Init13
;__Lib_PWM_FXXKM20X.c,138 :: 		
0x092A	0xA8218F  	BSET	CCP3CON2Hbits, #9
L_PWM3_Init13:
;__Lib_PWM_FXXKM20X.c,140 :: 		
0x092C	0x78058C  	MOV	W12, W11
0x092E	0x07FDD3  	RCALL	_Pwm_Calc_Period
0x0930	0xB7A19C  	MOV	WREG, CCP3PRL
;__Lib_PWM_FXXKM20X.c,142 :: 		
0x0932	0xBF819C  	MOV	CCP3PRL, WREG
;__Lib_PWM_FXXKM20X.c,143 :: 		
;__Lib_PWM_FXXKM20X.c,142 :: 		
;__Lib_PWM_FXXKM20X.c,143 :: 		
L_end_PWM3_Init:
0x0934	0x7805CF  	POP	W11
0x0936	0xFA8000  	ULNK
0x0938	0x060000  	RETURN
; end of _PWM3_Init
_Pwm_Calc_Period:
0x04D6	0xFA0000  	LNK	#0
;__Lib_PWM_FXXKM20X.c,8 :: 		
;__Lib_PWM_FXXKM20X.c,11 :: 		
0x04D8	0x07FE93  	RCALL	_Get_Fosc_kHz
0x04DA	0x201F42  	MOV	#500, W2
0x04DC	0x200003  	MOV	#0, W3
0x04DE	0x07FECC  	RCALL	__Multiply_32x32
;__Lib_PWM_FXXKM20X.c,12 :: 		
0x04E0	0x781F8B  	PUSH	W11
0x04E2	0x78010A  	MOV	W10, W2
0x04E4	0xEB0180  	CLR	W3
0x04E6	0xEB8200  	SETM	W4
0x04E8	0x07FED0  	RCALL	__Divide_32x32
0x04EA	0x7805CF  	POP	W11
;__Lib_PWM_FXXKM20X.c,13 :: 		
0x04EC	0x78010B  	MOV	W11, W2
0x04EE	0xEB0180  	CLR	W3
0x04F0	0xEB8200  	SETM	W4
0x04F2	0x07FECB  	RCALL	__Divide_32x32
;__Lib_PWM_FXXKM20X.c,14 :: 		
0x04F4	0x500061  	SUB	W0, #1, W0
0x04F6	0x5880E0  	SUBB	W1, #0, W1
;__Lib_PWM_FXXKM20X.c,15 :: 		
L_end_Pwm_Calc_Period:
0x04F8	0xFA8000  	ULNK
0x04FA	0x060000  	RETURN
; end of _Pwm_Calc_Period
_Get_Fosc_kHz:
;__Lib_Delays.c,38 :: 		unsigned long Get_Fosc_kHz() {
;__Lib_Delays.c,39 :: 		return Clock_kHz();
0x0200	0x24E200  	MOV	#20000, W0
0x0202	0x200001  	MOV	#0, W1
;__Lib_Delays.c,40 :: 		}
L_end_Get_Fosc_kHz:
0x0204	0x060000  	RETURN
; end of _Get_Fosc_kHz
__Multiply_32x32:
0x0278	0xFA0000  	LNK	#0
;__Lib_Math.c,43 :: 		
;__Lib_Math.c,46 :: 		
0x027A	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.c,47 :: 		
0x027C	0x880050  	MOV	W0, W5
;__Lib_Math.c,48 :: 		
0x027E	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.c,49 :: 		
0x0280	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,50 :: 		
0x0282	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.c,51 :: 		
0x0284	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,54 :: 		
L_end__Multiply_32x32:
0x0286	0xFA8000  	ULNK
0x0288	0x060000  	RETURN
; end of __Multiply_32x32
__Divide_32x32:
0x028A	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x028C	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x028E	0x0000000402D8  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x0292	0xE20008  	CP0	W4
;__Lib_Math.c,90 :: 		
0x0294	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x0296	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x0298	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x029A	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.c,97 :: 		
0x029C	0xE20002  	CP0	W1
;__Lib_Math.c,98 :: 		
0x029E	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x02A0	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,100 :: 		
0x02A2	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x02A4	0xE20006  	CP0	W3
;__Lib_Math.c,103 :: 		
0x02A6	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x02A8	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,105 :: 		
0x02AA	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x02AC	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x02AE	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,109 :: 		
0x02B0	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x02B2	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,111 :: 		
0x02B4	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x02B6	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x02B8	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,116 :: 		
0x02BA	0x200206  	MOV	#32, W6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x02BC	0xD00000  	SL	W0, W0
;__Lib_Math.c,119 :: 		
0x02BE	0xD28081  	RLC	W1, W1
;__Lib_Math.c,120 :: 		
0x02C0	0xD28204  	RLC	W4, W4
;__Lib_Math.c,121 :: 		
0x02C2	0xD28285  	RLC	W5, W5
;__Lib_Math.c,122 :: 		
0x02C4	0xA80000  	BSET	W0, #0
;__Lib_Math.c,123 :: 		
0x02C6	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,124 :: 		
0x02C8	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,125 :: 		
0x02CA	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x02CC	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,127 :: 		
0x02CE	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,128 :: 		
0x02D0	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x02D2	0xE90306  	DEC	W6, W6
;__Lib_Math.c,131 :: 		
0x02D4	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x02D6	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x02D8	0xFA8000  	ULNK
0x02DA	0x060000  	RETURN
; end of __Divide_32x32
_PWM3_Set_Duty:
0x093A	0xFA0000  	LNK	#0
;__Lib_PWM_FXXKM20X.c,158 :: 		
;__Lib_PWM_FXXKM20X.c,159 :: 		
0x093C	0x880D0A  	MOV	W10, CCP3RA
;__Lib_PWM_FXXKM20X.c,160 :: 		
L_end_PWM3_Set_Duty:
0x093E	0xFA8000  	ULNK
0x0940	0x060000  	RETURN
; end of _PWM3_Set_Duty
_PWM3_Start:
0x08EC	0xFA0000  	LNK	#0
;__Lib_PWM_FXXKM20X.c,145 :: 		
;__Lib_PWM_FXXKM20X.c,146 :: 		
0x08EE	0xA8E189  	BSET	CCP3CON1Lbits, #15
;__Lib_PWM_FXXKM20X.c,147 :: 		
L_end_PWM3_Start:
0x08F0	0xFA8000  	ULNK
0x08F2	0x060000  	RETURN
; end of _PWM3_Start
__Long2Float:
0x06AC	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x06AE	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x06B0	0x00000004075E  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x06B4	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x06B6	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x06B8	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x06BA	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x06BC	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x06BE	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x06C0	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x06C2	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x06C4	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x06C6	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x06C8	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x06CA	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x06CC	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x06CE	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x06D0	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x06D2	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x06D4	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x06D6	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x06D8	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x06DA	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x06DC	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x06DE	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x06E0	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x06E2	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x06E4	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x06E6	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x06E8	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x06EA	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x06EC	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x06EE	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x06F0	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x06F2	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x06F4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x06F6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x06F8	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x06FA	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x06FC	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x06FE	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x0700	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x0702	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x0704	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x0706	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x0708	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x070A	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x070C	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x070E	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x0710	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x0712	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x0714	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x0716	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x0718	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x071A	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x071C	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x071E	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x0720	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x0722	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x0724	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x0726	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x0728	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x072A	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x072C	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x072E	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x0730	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x0732	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x0734	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x0736	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x0738	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x073A	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x073C	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x073E	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x0740	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x0742	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x0744	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x0746	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x0748	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x074A	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x074C	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x074E	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x0750	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x0752	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x0754	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x0756	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x0758	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x075A	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x075C	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x075E	0xFA8000  	ULNK
0x0760	0x060000  	RETURN
; end of __Long2Float
_seekAndDestroy:
0x0A64	0xFA0012  	LNK	#18
;Auterna Shrink.c,107 :: 		void seekAndDestroy()
;Auterna Shrink.c,110 :: 		int velocidade = 70;
0x0A66	0x781F8A  	PUSH	W10
0x0A68	0x781F8B  	PUSH	W11
0x0A6A	0x781F8C  	PUSH	W12
0x0A6C	0x781F8D  	PUSH	W13
;Auterna Shrink.c,111 :: 		int sum = 0;
;Auterna Shrink.c,113 :: 		sum = (RB3_bit + RB4_bit + RB5_bit + RB6_bit + RB7_bit);
0x0A6E	0xEF6002  	CLR.B	W1
0x0A70	0xAF62CA  	BTSC	RB3_bit, BitPos(RB3_bit+0)
0x0A72	0xEC6002  	INC.B	W1
0x0A74	0xEF6000  	CLR.B	W0
0x0A76	0xAF82CA  	BTSC	RB4_bit, BitPos(RB4_bit+0)
0x0A78	0xEC6000  	INC.B	W0
0x0A7A	0xFB8081  	ZE	W1, W1
0x0A7C	0xFB8000  	ZE	W0, W0
0x0A7E	0x408080  	ADD	W1, W0, W1
0x0A80	0xEF6000  	CLR.B	W0
0x0A82	0xAFA2CA  	BTSC	RB5_bit, BitPos(RB5_bit+0)
0x0A84	0xEC6000  	INC.B	W0
0x0A86	0xFB8000  	ZE	W0, W0
0x0A88	0x408080  	ADD	W1, W0, W1
0x0A8A	0xEF6000  	CLR.B	W0
0x0A8C	0xAFC2CA  	BTSC	RB6_bit, BitPos(RB6_bit+0)
0x0A8E	0xEC6000  	INC.B	W0
0x0A90	0xFB8000  	ZE	W0, W0
0x0A92	0x408080  	ADD	W1, W0, W1
0x0A94	0xEF6000  	CLR.B	W0
0x0A96	0xAFE2CA  	BTSC	RB7_bit, BitPos(RB7_bit+0)
0x0A98	0xEC6000  	INC.B	W0
0x0A9A	0xFB8000  	ZE	W0, W0
0x0A9C	0x408000  	ADD	W1, W0, W0
; sum start address is: 8 (W4)
0x0A9E	0x780200  	MOV	W0, W4
;Auterna Shrink.c,114 :: 		if(sum != 0)
0x0AA0	0xE10060  	CP	W0, #0
0x0AA2	0x32002C  	BRA Z	L_seekAndDestroy11
L__seekAndDestroy87:
;Auterna Shrink.c,115 :: 		error = (1000 * RB4_bit + 2000 * RB3_bit + 3000 * RB5_bit + 4000 * RB6_bit + 5000 * RB7_bit)/sum - 3000;
0x0AA4	0xEF6000  	CLR.B	W0
0x0AA6	0xAF82CA  	BTSC	RB4_bit, BitPos(RB4_bit+0)
0x0AA8	0xEC6000  	INC.B	W0
0x0AAA	0xFB8080  	ZE	W0, W1
0x0AAC	0x203E80  	MOV	#1000, W0
0x0AAE	0xB98101  	MUL.SS	W0, W1, W2
0x0AB0	0xEF6000  	CLR.B	W0
0x0AB2	0xAF62CA  	BTSC	RB3_bit, BitPos(RB3_bit+0)
0x0AB4	0xEC6000  	INC.B	W0
0x0AB6	0xFB8080  	ZE	W0, W1
0x0AB8	0x207D00  	MOV	#2000, W0
0x0ABA	0xB98001  	MUL.SS	W0, W1, W0
0x0ABC	0x410100  	ADD	W2, W0, W2
0x0ABE	0xEF6000  	CLR.B	W0
0x0AC0	0xAFA2CA  	BTSC	RB5_bit, BitPos(RB5_bit+0)
0x0AC2	0xEC6000  	INC.B	W0
0x0AC4	0xFB8080  	ZE	W0, W1
0x0AC6	0x20BB80  	MOV	#3000, W0
0x0AC8	0xB98001  	MUL.SS	W0, W1, W0
0x0ACA	0x410100  	ADD	W2, W0, W2
0x0ACC	0xEF6000  	CLR.B	W0
0x0ACE	0xAFC2CA  	BTSC	RB6_bit, BitPos(RB6_bit+0)
0x0AD0	0xEC6000  	INC.B	W0
0x0AD2	0xFB8080  	ZE	W0, W1
0x0AD4	0x20FA00  	MOV	#4000, W0
0x0AD6	0xB98001  	MUL.SS	W0, W1, W0
0x0AD8	0x410100  	ADD	W2, W0, W2
0x0ADA	0xEF6000  	CLR.B	W0
0x0ADC	0xAFE2CA  	BTSC	RB7_bit, BitPos(RB7_bit+0)
0x0ADE	0xEC6000  	INC.B	W0
0x0AE0	0xFB8080  	ZE	W0, W1
0x0AE2	0x213880  	MOV	#5000, W0
0x0AE4	0xB98001  	MUL.SS	W0, W1, W0
0x0AE6	0x410000  	ADD	W2, W0, W0
0x0AE8	0x090011  	REPEAT	#17
0x0AEA	0xD80004  	DIV.S	W0, W4
0x0AEC	0x780080  	MOV	W0, W1
; sum end address is: 8 (W4)
0x0AEE	0x20BB80  	MOV	#3000, W0
0x0AF0	0x508000  	SUB	W1, W0, W0
0x0AF2	0xDE80CF  	ASR	W0, #15, W1
0x0AF4	0xEB8100  	SETM	W2
0x0AF6	0x07FDDA  	RCALL	__Long2Float
0x0AF8	0x980700  	MOV	W0, [W14+0]
0x0AFA	0x980711  	MOV	W1, [W14+2]
L_seekAndDestroy11:
;Auterna Shrink.c,123 :: 		if(ADC1_READ(0) < 300 || ADC1_READ(4) < 300)
0x0AFC	0xEF2014  	CLR	W10
0x0AFE	0x07FDD1  	RCALL	_ADC1_Read
0x0B00	0x2012C1  	MOV	#300, W1
0x0B02	0xE10001  	CP	W0, W1
0x0B04	0x390006  	BRA LTU	L__seekAndDestroy65
L__seekAndDestroy88:
0x0B06	0x20004A  	MOV	#4, W10
0x0B08	0x07FDCC  	RCALL	_ADC1_Read
0x0B0A	0x2012C1  	MOV	#300, W1
0x0B0C	0xE10001  	CP	W0, W1
0x0B0E	0x390001  	BRA LTU	L__seekAndDestroy64
L__seekAndDestroy89:
0x0B10	0x370018  	BRA	L_seekAndDestroy14
L__seekAndDestroy65:
L__seekAndDestroy64:
;Auterna Shrink.c,125 :: 		controlMotors(-100,-100);
0x0B12	0x20000C  	MOV	#0, W12
0x0B14	0x2C2C8D  	MOV	#49864, W13
0x0B16	0x20000A  	MOV	#0, W10
0x0B18	0x2C2C8B  	MOV	#49864, W11
0x0B1A	0x07FF13  	RCALL	_controlMotors
;Auterna Shrink.c,126 :: 		delay_ms(150);
0x0B1C	0x200088  	MOV	#8, W8
0x0B1E	0x2A1217  	MOV	#41249, W7
L_seekAndDestroy15:
0x0B20	0xED200E  	DEC	W7
0x0B22	0x3AFFFE  	BRA NZ	L_seekAndDestroy15
0x0B24	0xED2010  	DEC	W8
0x0B26	0x3AFFFC  	BRA NZ	L_seekAndDestroy15
0x0B28	0x000000  	NOP
;Auterna Shrink.c,127 :: 		controlMotors(-100,100);
0x0B2A	0x20000C  	MOV	#0, W12
0x0B2C	0x242C8D  	MOV	#17096, W13
0x0B2E	0x20000A  	MOV	#0, W10
0x0B30	0x2C2C8B  	MOV	#49864, W11
0x0B32	0x07FF07  	RCALL	_controlMotors
;Auterna Shrink.c,128 :: 		delay_ms(200);
0x0B34	0x2000B8  	MOV	#11, W8
0x0B36	0x22C2D7  	MOV	#11309, W7
L_seekAndDestroy17:
0x0B38	0xED200E  	DEC	W7
0x0B3A	0x3AFFFE  	BRA NZ	L_seekAndDestroy17
0x0B3C	0xED2010  	DEC	W8
0x0B3E	0x3AFFFC  	BRA NZ	L_seekAndDestroy17
;Auterna Shrink.c,129 :: 		}
0x0B40	0x37004D  	BRA	L_seekAndDestroy19
L_seekAndDestroy14:
;Auterna Shrink.c,132 :: 		if(error > -100 && error < 100)
0x0B42	0x200002  	MOV	#0, W2
0x0B44	0x2C2C83  	MOV	#49864, W3
0x0B46	0x90000E  	MOV	[W14+0], W0
0x0B48	0x90009E  	MOV	[W14+2], W1
0x0B4A	0x07FDA1  	RCALL	__Compare_Ge_Fp
0x0B4C	0xE00000  	CP0	W0
0x0B4E	0xEF6000  	CLR.B	W0
0x0B50	0x340001  	BRA LE	L__seekAndDestroy90
0x0B52	0xEC6000  	INC.B	W0
L__seekAndDestroy90:
0x0B54	0xE24000  	CP0.B	W0
0x0B56	0x32000E  	BRA Z	L__seekAndDestroy67
L__seekAndDestroy91:
0x0B58	0x200002  	MOV	#0, W2
0x0B5A	0x242C83  	MOV	#17096, W3
0x0B5C	0x90000E  	MOV	[W14+0], W0
0x0B5E	0x90009E  	MOV	[W14+2], W1
0x0B60	0x07FD9B  	RCALL	__Compare_Le_Fp
0x0B62	0xE00000  	CP0	W0
0x0B64	0xEF6000  	CLR.B	W0
0x0B66	0x3D0001  	BRA GE	L__seekAndDestroy92
0x0B68	0xEC6000  	INC.B	W0
L__seekAndDestroy92:
0x0B6A	0xE24000  	CP0.B	W0
0x0B6C	0x320003  	BRA Z	L__seekAndDestroy66
L__seekAndDestroy93:
L__seekAndDestroy62:
;Auterna Shrink.c,133 :: 		velocidade = 90;
0x0B6E	0x2005A0  	MOV	#90, W0
0x0B70	0x980740  	MOV	W0, [W14+8]
0x0B72	0x370002  	BRA	L_seekAndDestroy23
;Auterna Shrink.c,132 :: 		if(error > -100 && error < 100)
L__seekAndDestroy67:
L__seekAndDestroy66:
;Auterna Shrink.c,135 :: 		velocidade = 70;
0x0B74	0x200460  	MOV	#70, W0
0x0B76	0x980740  	MOV	W0, [W14+8]
L_seekAndDestroy23:
;Auterna Shrink.c,138 :: 		powerR  = velocidade  - error/10.0;
0x0B78	0x200002  	MOV	#0, W2
0x0B7A	0x241203  	MOV	#16672, W3
0x0B7C	0x90000E  	MOV	[W14+0], W0
0x0B7E	0x90009E  	MOV	[W14+2], W1
0x0B80	0x07FE1A  	RCALL	__Div_FP
0x0B82	0x980770  	MOV	W0, [W14+14]
0x0B84	0x980F01  	MOV	W1, [W14+16]
0x0B86	0x90004E  	MOV	[W14+8], W0
0x0B88	0xDE80CF  	ASR	W0, #15, W1
0x0B8A	0xEB8100  	SETM	W2
0x0B8C	0x07FD8F  	RCALL	__Long2Float
0x0B8E	0x90017E  	MOV	[W14+14], W2
0x0B90	0x90098E  	MOV	[W14+16], W3
0x0B92	0x07FE0C  	RCALL	__Sub_FP
;Auterna Shrink.c,139 :: 		powerR = clamp(powerR, -100, 100);
0x0B94	0x20000C  	MOV	#0, W12
0x0B96	0x2C2C8D  	MOV	#49864, W13
0x0B98	0xBE0500  	MOV.D	W0, W10
0x0B9A	0x200000  	MOV	#0, W0
0x0B9C	0x242C81  	MOV	#17096, W1
0x0B9E	0xBE9F80  	PUSH.D	W0
0x0BA0	0x07FDE0  	RCALL	_clamp
0x0BA2	0xB1004F  	SUB	#4, W15
0x0BA4	0x980720  	MOV	W0, [W14+4]
0x0BA6	0x980731  	MOV	W1, [W14+6]
;Auterna Shrink.c,141 :: 		powerL = velocidade  + error/10.0;
0x0BA8	0x200002  	MOV	#0, W2
0x0BAA	0x241203  	MOV	#16672, W3
0x0BAC	0x90000E  	MOV	[W14+0], W0
0x0BAE	0x90009E  	MOV	[W14+2], W1
0x0BB0	0x07FE02  	RCALL	__Div_FP
0x0BB2	0x980770  	MOV	W0, [W14+14]
0x0BB4	0x980F01  	MOV	W1, [W14+16]
0x0BB6	0x90004E  	MOV	[W14+8], W0
0x0BB8	0xDE80CF  	ASR	W0, #15, W1
0x0BBA	0xEB8100  	SETM	W2
0x0BBC	0x07FD77  	RCALL	__Long2Float
0x0BBE	0x90017E  	MOV	[W14+14], W2
0x0BC0	0x90098E  	MOV	[W14+16], W3
0x0BC2	0x07FBD3  	RCALL	__AddSub_FP
;Auterna Shrink.c,142 :: 		powerL = clamp(powerL, -100, 100);
0x0BC4	0x20000C  	MOV	#0, W12
0x0BC6	0x2C2C8D  	MOV	#49864, W13
0x0BC8	0xBE0500  	MOV.D	W0, W10
0x0BCA	0x200000  	MOV	#0, W0
0x0BCC	0x242C81  	MOV	#17096, W1
0x0BCE	0xBE9F80  	PUSH.D	W0
0x0BD0	0x07FDC8  	RCALL	_clamp
0x0BD2	0xB1004F  	SUB	#4, W15
;Auterna Shrink.c,144 :: 		controlMotors(powerL, powerR);
0x0BD4	0x90062E  	MOV	[W14+4], W12
0x0BD6	0x9006BE  	MOV	[W14+6], W13
0x0BD8	0xBE0500  	MOV.D	W0, W10
0x0BDA	0x07FEB3  	RCALL	_controlMotors
;Auterna Shrink.c,145 :: 		}
L_seekAndDestroy19:
;Auterna Shrink.c,150 :: 		}
L_end_seekAndDestroy:
0x0BDC	0x7806CF  	POP	W13
0x0BDE	0x78064F  	POP	W12
0x0BE0	0x7805CF  	POP	W11
0x0BE2	0x78054F  	POP	W10
0x0BE4	0xFA8000  	ULNK
0x0BE6	0x060000  	RETURN
; end of _seekAndDestroy
_ADC1_Read:
0x06A2	0xFA0000  	LNK	#0
;__Lib_ADC_1_24FXXKMX02.c,65 :: 		
;__Lib_ADC_1_24FXXKMX02.c,66 :: 		
0x06A4	0x070127  	RCALL	_ADC1_Init
;__Lib_ADC_1_24FXXKMX02.c,67 :: 		
0x06A6	0x07FE1A  	RCALL	_ADC1_Get_Sample
;__Lib_ADC_1_24FXXKMX02.c,68 :: 		
L_end_ADC1_Read:
0x06A8	0xFA8000  	ULNK
0x06AA	0x060000  	RETURN
; end of _ADC1_Read
_ADC1_Get_Sample:
0x02DC	0xFA0000  	LNK	#0
;__Lib_ADC_1_24FXXKMX02.c,37 :: 		
;__Lib_ADC_1_24FXXKMX02.c,38 :: 		
0x02DE	0xE15061  	CP	W10, #1
0x02E0	0x3E0005  	BRA GTU	L_ADC1_Get_Sample0
L__ADC1_Get_Sample38:
;__Lib_ADC_1_24FXXKMX02.c,39 :: 		
0x02E2	0x200010  	MOV	#1, W0
0x02E4	0xDD008A  	SL	W0, W10, W1
0x02E6	0x204E00  	MOV	#lo_addr(ANSA), W0
0x02E8	0x708810  	IOR	W1, [W0], [W0]
0x02EA	0x370035  	BRA	L_ADC1_Get_Sample1
L_ADC1_Get_Sample0:
;__Lib_ADC_1_24FXXKMX02.c,40 :: 		
0x02EC	0xE15061  	CP	W10, #1
0x02EE	0x360008  	BRA LEU	L__ADC1_Get_Sample28
L__ADC1_Get_Sample39:
0x02F0	0xE15065  	CP	W10, #5
0x02F2	0x3E0006  	BRA GTU	L__ADC1_Get_Sample27
L__ADC1_Get_Sample40:
L__ADC1_Get_Sample26:
;__Lib_ADC_1_24FXXKMX02.c,41 :: 		
0x02F4	0x5500E2  	SUB	W10, #2, W1
0x02F6	0x200010  	MOV	#1, W0
0x02F8	0xDD0081  	SL	W0, W1, W1
0x02FA	0x204E20  	MOV	#lo_addr(ANSB), W0
0x02FC	0x708810  	IOR	W1, [W0], [W0]
0x02FE	0x37002B  	BRA	L_ADC1_Get_Sample5
;__Lib_ADC_1_24FXXKMX02.c,40 :: 		
L__ADC1_Get_Sample28:
L__ADC1_Get_Sample27:
;__Lib_ADC_1_24FXXKMX02.c,42 :: 		
0x0300	0xE1506C  	CP	W10, #12
0x0302	0x360008  	BRA LEU	L__ADC1_Get_Sample30
L__ADC1_Get_Sample41:
0x0304	0xE1506E  	CP	W10, #14
0x0306	0x3E0006  	BRA GTU	L__ADC1_Get_Sample29
L__ADC1_Get_Sample42:
L__ADC1_Get_Sample25:
;__Lib_ADC_1_24FXXKMX02.c,43 :: 		
0x0308	0x5500EB  	SUB	W10, #11, W1
0x030A	0x200010  	MOV	#1, W0
0x030C	0xDD0081  	SL	W0, W1, W1
0x030E	0x204E00  	MOV	#lo_addr(ANSA), W0
0x0310	0x708810  	IOR	W1, [W0], [W0]
0x0312	0x370021  	BRA	L_ADC1_Get_Sample9
;__Lib_ADC_1_24FXXKMX02.c,42 :: 		
L__ADC1_Get_Sample30:
L__ADC1_Get_Sample29:
;__Lib_ADC_1_24FXXKMX02.c,44 :: 		
0x0314	0xE1506F  	CP	W10, #15
0x0316	0x3A0004  	BRA NZ	L_ADC1_Get_Sample10
L__ADC1_Get_Sample43:
;__Lib_ADC_1_24FXXKMX02.c,45 :: 		
0x0318	0x200101  	MOV	#16, W1
0x031A	0x204E20  	MOV	#lo_addr(ANSB), W0
0x031C	0x708810  	IOR	W1, [W0], [W0]
0x031E	0x37001B  	BRA	L_ADC1_Get_Sample11
L_ADC1_Get_Sample10:
;__Lib_ADC_1_24FXXKMX02.c,46 :: 		
0x0320	0xE15070  	CP	W10, #16
0x0322	0x3A0004  	BRA NZ	L_ADC1_Get_Sample12
L__ADC1_Get_Sample44:
;__Lib_ADC_1_24FXXKMX02.c,47 :: 		
0x0324	0x200101  	MOV	#16, W1
0x0326	0x204E00  	MOV	#lo_addr(ANSA), W0
0x0328	0x708810  	IOR	W1, [W0], [W0]
0x032A	0x370015  	BRA	L_ADC1_Get_Sample13
L_ADC1_Get_Sample12:
;__Lib_ADC_1_24FXXKMX02.c,48 :: 		
0x032C	0xE15070  	CP	W10, #16
0x032E	0x360008  	BRA LEU	L__ADC1_Get_Sample32
L__ADC1_Get_Sample45:
0x0330	0xE15075  	CP	W10, #21
0x0332	0x3E0006  	BRA GTU	L__ADC1_Get_Sample31
L__ADC1_Get_Sample46:
L__ADC1_Get_Sample24:
;__Lib_ADC_1_24FXXKMX02.c,49 :: 		
0x0334	0x5500EC  	SUB	W10, #12, W1
0x0336	0x200010  	MOV	#1, W0
0x0338	0xDD0081  	SL	W0, W1, W1
0x033A	0x204E20  	MOV	#lo_addr(ANSB), W0
0x033C	0x708810  	IOR	W1, [W0], [W0]
0x033E	0x37000B  	BRA	L_ADC1_Get_Sample17
;__Lib_ADC_1_24FXXKMX02.c,48 :: 		
L__ADC1_Get_Sample32:
L__ADC1_Get_Sample31:
;__Lib_ADC_1_24FXXKMX02.c,50 :: 		
0x0340	0xE15068  	CP	W10, #8
0x0342	0x360009  	BRA LEU	L__ADC1_Get_Sample34
L__ADC1_Get_Sample47:
0x0344	0xE1506C  	CP	W10, #12
0x0346	0x3E0007  	BRA GTU	L__ADC1_Get_Sample33
L__ADC1_Get_Sample48:
L__ADC1_Get_Sample23:
;__Lib_ADC_1_24FXXKMX02.c,51 :: 		
0x0348	0x15006C  	SUBR	W10, #12, W0
0x034A	0xDD0041  	SL	W0, #1, W0
0x034C	0x450080  	ADD	W10, W0, W1
0x034E	0x200010  	MOV	#1, W0
0x0350	0xDD0081  	SL	W0, W1, W1
0x0352	0x204E20  	MOV	#lo_addr(ANSB), W0
0x0354	0x708810  	IOR	W1, [W0], [W0]
;__Lib_ADC_1_24FXXKMX02.c,50 :: 		
L__ADC1_Get_Sample34:
L__ADC1_Get_Sample33:
;__Lib_ADC_1_24FXXKMX02.c,51 :: 		
L_ADC1_Get_Sample17:
L_ADC1_Get_Sample13:
L_ADC1_Get_Sample11:
L_ADC1_Get_Sample9:
L_ADC1_Get_Sample5:
L_ADC1_Get_Sample1:
;__Lib_ADC_1_24FXXKMX02.c,53 :: 		
0x0356	0x881A4A  	MOV	W10, AD1CHS
;__Lib_ADC_1_24FXXKMX02.c,55 :: 		
0x0358	0xA92340  	BCLR	ADCON1, #1
;__Lib_ADC_1_24FXXKMX02.c,57 :: 		
L_ADC1_Get_Sample21:
0x035A	0xAF0340  	BTSC	ADCON1, #0
0x035C	0x370001  	BRA	L_ADC1_Get_Sample22
;__Lib_ADC_1_24FXXKMX02.c,58 :: 		
0x035E	0x37FFFD  	BRA	L_ADC1_Get_Sample21
L_ADC1_Get_Sample22:
;__Lib_ADC_1_24FXXKMX02.c,59 :: 		
0x0360	0xA90340  	BCLR	ADCON1, #0
;__Lib_ADC_1_24FXXKMX02.c,60 :: 		
0x0362	0xA82340  	BSET	ADCON1, #1
;__Lib_ADC_1_24FXXKMX02.c,62 :: 		
0x0364	0xBF8300  	MOV	ADCBUF0, WREG
;__Lib_ADC_1_24FXXKMX02.c,63 :: 		
L_end_ADC1_Get_Sample:
0x0366	0xFA8000  	ULNK
0x0368	0x060000  	RETURN
; end of _ADC1_Get_Sample
_clamp:
0x0762	0xFA0000  	LNK	#0
;Auterna Shrink.c,48 :: 		double clamp(double value, double min, double max)
0x0764	0x97B83E  	MOV	[W14-10], W0
0x0766	0x97B8CE  	MOV	[W14-8], W1
0x0768	0x9FBF30  	MOV	W0, [W14-10]
0x076A	0x9FBF41  	MOV	W1, [W14-8]
;Auterna Shrink.c,50 :: 		if (value < min) value = min;
0x076C	0xBE9F8C  	PUSH.D	W12
0x076E	0xBE9F8A  	PUSH.D	W10
0x0770	0xBE010C  	MOV.D	W12, W2
0x0772	0xBE000A  	MOV.D	W10, W0
0x0774	0x07FF91  	RCALL	__Compare_Le_Fp
0x0776	0xE00000  	CP0	W0
0x0778	0xEF6000  	CLR.B	W0
0x077A	0x3D0001  	BRA GE	L__clamp69
0x077C	0xEC6000  	INC.B	W0
L__clamp69:
0x077E	0xBE054F  	POP.D	W10
0x0780	0xBE064F  	POP.D	W12
0x0782	0xE24000  	CP0.B	W0
0x0784	0x320002  	BRA Z	L_clamp0
L__clamp70:
0x0786	0xBE050C  	MOV.D	W12, W10
0x0788	0x37000E  	BRA	L_clamp1
L_clamp0:
;Auterna Shrink.c,51 :: 		else if (value > max) value = max;
0x078A	0xBE9F8A  	PUSH.D	W10
0x078C	0x97B93E  	MOV	[W14-10], W2
0x078E	0x97B9CE  	MOV	[W14-8], W3
0x0790	0xBE000A  	MOV.D	W10, W0
0x0792	0x07FF7D  	RCALL	__Compare_Ge_Fp
0x0794	0xE00000  	CP0	W0
0x0796	0xEF6000  	CLR.B	W0
0x0798	0x340001  	BRA LE	L__clamp71
0x079A	0xEC6000  	INC.B	W0
L__clamp71:
0x079C	0xBE054F  	POP.D	W10
0x079E	0xE24000  	CP0.B	W0
0x07A0	0x320002  	BRA Z	L_clamp2
L__clamp72:
0x07A2	0x97BD3E  	MOV	[W14-10], W10
0x07A4	0x97BDCE  	MOV	[W14-8], W11
L_clamp2:
L_clamp1:
;Auterna Shrink.c,52 :: 		return value;
0x07A6	0xBE000A  	MOV.D	W10, W0
;Auterna Shrink.c,53 :: 		}
L_end_clamp:
0x07A8	0xFA8000  	ULNK
0x07AA	0x060000  	RETURN
; end of _clamp
__Div_FP:
0x07B6	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1050 :: 		
;__Lib_MathDouble.c,1052 :: 		
0x07B8	0x070002  	RCALL	DivFP___divsf3
;__Lib_MathDouble.c,1053 :: 		
0x07BA	0x0000000408E8  	GOTO	the_end__Div_FP
;__Lib_MathDouble.c,1056 :: 		
DivFP___divsf3:
;__Lib_MathDouble.c,1057 :: 		
0x07BE	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,1058 :: 		
0x07C0	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,1059 :: 		
0x07C2	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,1060 :: 		
0x07C4	0x07003E  	RCALL	DivFP__funpack2
;__Lib_MathDouble.c,1061 :: 		
0x07C6	0x330045  	BRA N	DivFP__fPropagateNaN
;__Lib_MathDouble.c,1062 :: 		
0x07C8	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,1063 :: 		
0x07CA	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1064 :: 		
0x07CC	0x32002E  	BRA Z	DivFP_aisinfinite
;__Lib_MathDouble.c,1065 :: 		
0x07CE	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1066 :: 		
0x07D0	0x320033  	BRA Z	DivFP_returnZero
;__Lib_MathDouble.c,1067 :: 		
0x07D2	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,1068 :: 		
0x07D4	0x32002F  	BRA Z	DivFP_aiszero
;__Lib_MathDouble.c,1069 :: 		
0x07D6	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1070 :: 		
0x07D8	0x320031  	BRA Z	DivFP_returnInf
;__Lib_MathDouble.c,1071 :: 		
DivFP_finitenonzero:
;__Lib_MathDouble.c,1072 :: 		
0x07DA	0x558585  	SUB	W11, W5, W11
;__Lib_MathDouble.c,1073 :: 		
0x07DC	0xB007EB  	ADD	#126, W11
;__Lib_MathDouble.c,1074 :: 		
0x07DE	0x200009  	MOV	#0, W9
;__Lib_MathDouble.c,1075 :: 		
0x07E0	0x200408  	MOV	#64, W8
;__Lib_MathDouble.c,1076 :: 		
0x07E2	0x370005  	BRA	DivFP_diventry
;__Lib_MathDouble.c,1077 :: 		
DivFP_divnext:
;__Lib_MathDouble.c,1078 :: 		
0x07E4	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1079 :: 		
0x07E6	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1080 :: 		
0x07E8	0x31000A  	BRA C	DivFP_divdone
;__Lib_MathDouble.c,1081 :: 		
DivFP_divloop:
;__Lib_MathDouble.c,1082 :: 		
0x07EA	0x430306  	ADD	W6, W6, W6
;__Lib_MathDouble.c,1083 :: 		
0x07EC	0x4B8387  	ADDC	W7, W7, W7
;__Lib_MathDouble.c,1084 :: 		
DivFP_diventry:
;__Lib_MathDouble.c,1085 :: 		
0x07EE	0x530100  	SUB	W6, W0, W2
;__Lib_MathDouble.c,1086 :: 		
0x07F0	0x5B8181  	SUBB	W7, W1, W3
;__Lib_MathDouble.c,1087 :: 		
0x07F2	0x33FFF8  	BRA N	DivFP_divnext
;__Lib_MathDouble.c,1088 :: 		
0x07F4	0xBE8302  	MOV.D	W2, W6
;__Lib_MathDouble.c,1089 :: 		
0x07F6	0xA80010  	BSET	W8, #0
;__Lib_MathDouble.c,1090 :: 		
0x07F8	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1091 :: 		
0x07FA	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1092 :: 		
0x07FC	0x39FFF6  	BRA NC	DivFP_divloop
;__Lib_MathDouble.c,1093 :: 		
DivFP_divdone:
;__Lib_MathDouble.c,1094 :: 		
0x07FE	0xDD39C6  	SL	W7, #6, W3
;__Lib_MathDouble.c,1095 :: 		
0x0800	0x730183  	IOR	W6, W3, W3
;__Lib_MathDouble.c,1096 :: 		
0x0802	0x320001  	BRA Z	DivFP_stickyok
;__Lib_MathDouble.c,1097 :: 		
0x0804	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,1098 :: 		
DivFP_stickyok:
;__Lib_MathDouble.c,1099 :: 		
0x0806	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1100 :: 		
0x0808	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1101 :: 		
0x080A	0xA39809  	BTST.Z	W9, #9
;__Lib_MathDouble.c,1102 :: 		
0x080C	0x320005  	BRA Z	DivFP_guardused
;__Lib_MathDouble.c,1103 :: 		
0x080E	0xA70008  	BTSC	W8, #0
;__Lib_MathDouble.c,1104 :: 		
0x0810	0xA80006  	BSET	W3, #0
;__Lib_MathDouble.c,1105 :: 		
0x0812	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1106 :: 		
0x0814	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1107 :: 		
0x0816	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1108 :: 		
DivFP_guardused:
;__Lib_MathDouble.c,1109 :: 		
0x0818	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1110 :: 		
0x081A	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1111 :: 		
0x081C	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,1112 :: 		
0x081E	0xD28102  	RLC	W2, W2
;__Lib_MathDouble.c,1113 :: 		
0x0820	0x070028  	RCALL	DivFP__fpack
;__Lib_MathDouble.c,1114 :: 		
DivFP_return0_1:
;__Lib_MathDouble.c,1115 :: 		
0x0822	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,1116 :: 		
0x0824	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,1117 :: 		
0x0826	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,1118 :: 		
0x0828	0x37001D  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1119 :: 		
DivFP_aisinfinite:
;__Lib_MathDouble.c,1120 :: 		
0x082A	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1121 :: 		
0x082C	0x32001F  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1122 :: 		
DivFP_return8_1:
;__Lib_MathDouble.c,1123 :: 		
0x082E	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,1124 :: 		
DivFP_return2_1:
;__Lib_MathDouble.c,1125 :: 		
0x0830	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1126 :: 		
0x0832	0x37FFF7  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1127 :: 		
DivFP_aiszero:
;__Lib_MathDouble.c,1128 :: 		
0x0834	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1129 :: 		
0x0836	0x32001A  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1130 :: 		
DivFP_returnZero:
;__Lib_MathDouble.c,1131 :: 		
0x0838	0xB80060  	MUL.UU	W0, #0, W0
;__Lib_MathDouble.c,1132 :: 		
0x083A	0x37FFF3  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1133 :: 		
DivFP_returnInf:
;__Lib_MathDouble.c,1134 :: 		
0x083C	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1135 :: 		
0x083E	0x27F801  	MOV	#32640, W1
;__Lib_MathDouble.c,1136 :: 		
0x0840	0x37FFF0  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1137 :: 		
DivFP__funpack2:
;__Lib_MathDouble.c,1138 :: 		
0x0842	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1139 :: 		
0x0844	0x07003C  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1140 :: 		
0x0846	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1141 :: 		
0x0848	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1142 :: 		
0x084A	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1143 :: 		
0x084C	0x070038  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1144 :: 		
0x084E	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1145 :: 		
0x0850	0x060000  	RETURN
;__Lib_MathDouble.c,1146 :: 		
DivFP__fPropagateNaN:
;__Lib_MathDouble.c,1147 :: 		
0x0852	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1148 :: 		
0x0854	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1149 :: 		
0x0856	0x360005  	BRA LEU	DivFP_return0
;__Lib_MathDouble.c,1150 :: 		
0x0858	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1151 :: 		
0x085A	0x360002  	BRA LEU	DivFP_return8
;__Lib_MathDouble.c,1152 :: 		
0x085C	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,1153 :: 		
0x085E	0x3A0001  	BRA NZ	DivFP_return0
;__Lib_MathDouble.c,1154 :: 		
DivFP_return8:
;__Lib_MathDouble.c,1155 :: 		
0x0860	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,1156 :: 		
DivFP_return0:
;__Lib_MathDouble.c,1157 :: 		
0x0862	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,1158 :: 		
DivFP__fbopExit:
;__Lib_MathDouble.c,1159 :: 		
0x0864	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,1160 :: 		
0x0866	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,1161 :: 		
0x0868	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,1162 :: 		
0x086A	0x060000  	RETURN
;__Lib_MathDouble.c,1163 :: 		
DivFP__fbopReturnNaN:
;__Lib_MathDouble.c,1164 :: 		
0x086C	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1165 :: 		
0x086E	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,1166 :: 		
0x0870	0x37FFF9  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1167 :: 		
DivFP__fpack:
;__Lib_MathDouble.c,1168 :: 		
0x0872	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,1169 :: 		
0x0874	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,1170 :: 		
0x0876	0x3D000B  	BRA GE	DivFP_notsubnormal
;__Lib_MathDouble.c,1171 :: 		
0x0878	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,1172 :: 		
0x087A	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,1173 :: 		
0x087C	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,1174 :: 		
0x087E	0x34001D  	BRA LE	DivFP_zerosig
;__Lib_MathDouble.c,1175 :: 		
DivFP_subnormal:
;__Lib_MathDouble.c,1176 :: 		
0x0880	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,1177 :: 		
0x0882	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,1178 :: 		
0x0884	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1179 :: 		
0x0886	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1180 :: 		
0x0888	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,1181 :: 		
0x088A	0x3AFFFA  	BRA NZ	DivFP_subnormal
;__Lib_MathDouble.c,1182 :: 		
0x088C	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,1183 :: 		
DivFP_notsubnormal:
;__Lib_MathDouble.c,1184 :: 		
0x088E	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,1185 :: 		
0x0890	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,1186 :: 		
0x0892	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,1187 :: 		
0x0894	0x320009  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1188 :: 		
0x0896	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,1189 :: 		
0x0898	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,1190 :: 		
0x089A	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,1191 :: 		
0x089C	0x320005  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1192 :: 		
0x089E	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1193 :: 		
0x08A0	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,1194 :: 		
0x08A2	0x3A0002  	BRA NZ	DivFP_packupandgo
;__Lib_MathDouble.c,1195 :: 		
0x08A4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1196 :: 		
0x08A6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1197 :: 		
DivFP_packupandgo:
;__Lib_MathDouble.c,1198 :: 		
0x08A8	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,1199 :: 		
0x08AA	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,1200 :: 		
0x08AC	0x3D0005  	BRA GE	DivFP_overfloW
;__Lib_MathDouble.c,1201 :: 		
0x08AE	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,1202 :: 		
0x08B0	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,1203 :: 		
0x08B2	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,1204 :: 		
0x08B4	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,1205 :: 		
0x08B6	0x060000  	RETURN
;__Lib_MathDouble.c,1206 :: 		
DivFP_overfloW:
;__Lib_MathDouble.c,1207 :: 		
0x08B8	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,1208 :: 		
DivFP_zerosig:
;__Lib_MathDouble.c,1209 :: 		
0x08BA	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,1210 :: 		
0x08BC	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,1211 :: 		
DivFP__funpack:
;__Lib_MathDouble.c,1212 :: 		
0x08BE	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1213 :: 		
0x08C0	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1214 :: 		
0x08C2	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1215 :: 		
0x08C4	0x320008  	BRA Z	DivFP_zeroorsub
;__Lib_MathDouble.c,1216 :: 		
0x08C6	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1217 :: 		
0x08C8	0x320002  	BRA Z	DivFP_nanorinf
;__Lib_MathDouble.c,1218 :: 		
DivFP_finitereturn:
;__Lib_MathDouble.c,1219 :: 		
0x08CA	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1220 :: 		
0x08CC	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1221 :: 		
DivFP_nanorinf:
;__Lib_MathDouble.c,1222 :: 		
0x08CE	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1223 :: 		
0x08D0	0x320001  	BRA Z	DivFP_infinite
;__Lib_MathDouble.c,1224 :: 		
0x08D2	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1225 :: 		
DivFP_infinite:
;__Lib_MathDouble.c,1226 :: 		
0x08D4	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1227 :: 		
DivFP_zeroorsub:
;__Lib_MathDouble.c,1228 :: 		
0x08D6	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1229 :: 		
0x08D8	0x3A0002  	BRA NZ	DivFP_subnormal2
;__Lib_MathDouble.c,1230 :: 		
0x08DA	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1231 :: 		
DivFP_normalize:
;__Lib_MathDouble.c,1232 :: 		
0x08DC	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1233 :: 		
DivFP_subnormal2:
;__Lib_MathDouble.c,1234 :: 		
0x08DE	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1235 :: 		
0x08E0	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1236 :: 		
0x08E2	0x3BFFFC  	BRA NN	DivFP_normalize
;__Lib_MathDouble.c,1237 :: 		
0x08E4	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1238 :: 		
0x08E6	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1241 :: 		
the_end__Div_FP:
;__Lib_MathDouble.c,1243 :: 		
L_end__Div_FP:
0x08E8	0xFA8000  	ULNK
0x08EA	0x060000  	RETURN
; end of __Div_FP
__Sub_FP:
0x07AC	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,830 :: 		
;__Lib_MathDouble.c,831 :: 		
0x07AE	0xAAE007  	BTG	W3, #15
;__Lib_MathDouble.c,832 :: 		
0x07B0	0x07FDDC  	RCALL	__AddSub_FP
;__Lib_MathDouble.c,833 :: 		
L_end__Sub_FP:
0x07B2	0xFA8000  	ULNK
0x07B4	0x060000  	RETURN
; end of __Sub_FP
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200       [6]    _Get_Fosc_kHz
0x0206     [114]    __Compare_Fp
0x0278      [18]    __Multiply_32x32
0x028A      [82]    __Divide_32x32
0x02DC     [142]    _ADC1_Get_Sample
0x036A     [364]    __AddSub_FP
0x04D6      [38]    _Pwm_Calc_Period
0x04FC     [120]    __Float2Longint
0x0574     [282]    __Mul_FP
0x068E      [10]    __Compare_Ge_Fp
0x0698      [10]    __Compare_Le_Fp
0x06A2      [10]    _ADC1_Read
0x06AC     [182]    __Long2Float
0x0762      [74]    _clamp
0x07AC      [10]    __Sub_FP
0x07B6     [310]    __Div_FP
0x08EC       [8]    _PWM3_Start
0x08F4      [26]    _ADC1_Init
0x090E      [44]    _PWM3_Init
0x093A       [8]    _PWM3_Set_Duty
0x0942     [290]    _controlMotors
0x0A64     [388]    _seekAndDestroy
0x0BE8     [130]    _initRobot
0x0C6A      [44]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0670       [2]    BUFCON0
0x0278       [2]    DAC2CON
0x0274       [2]    DAC1CON
0x02CA       [0]    RB11_bit
0x02CA       [0]    RB15_bit
0x0800       [2]    _ServoPeriod
0x0638       [2]    CM3CON
0x04E0       [2]    ANSA
0x02C8       [0]    TRISB15_bit
0x02C8       [0]    TRISB14_bit
0x0636       [2]    CM2CON
0x0634       [2]    CM1CON
0x04E2       [2]    ANSB
0x0348       [2]    AD1CHS
0x018C       [2]    CCP3CON2Lbits
0x018A       [2]    CCP3CON1H
0x0188       [2]    CCP3CON1Lbits
0x01A0       [2]    CCP3RA
0x019C       [2]    CCP3PRL
0x018E       [2]    CCP3CON2Hbits
0x0188       [2]    CCP3CON1L
0x0802       [2]    _ADC_Get_Sample_Ptr
0x0300       [2]    ADCBUF0
0x0340       [2]    ADCON1
0x0350       [2]    ADCSSL
0x0344       [2]    ADCON3
0x0342       [2]    ADCON2
0x02C0       [0]    TRISA4_bit
0x02C0       [0]    TRISA1_bit
0x02C0       [0]    TRISA0_bit
0x024A       [2]    AMP1CON
0x02C0       [2]    TRISA
0x02C0       [0]    TRISA7_bit
0x02CA       [0]    RB7_bit
0x02CA       [0]    RB3_bit
0x027A       [2]    DAC2DAT
0x0276       [2]    DAC1DAT
0x02CA       [0]    RB6_bit
0x02CA       [0]    RB5_bit
0x02CA       [0]    RB4_bit
0x02C8       [0]    TRISB0_bit
0x02C8       [0]    TRISB10_bit
0x02C8       [0]    TRISB9_bit
0x02C8       [0]    TRISB8_bit
0x02C8       [0]    TRISB13_bit
0x02C8       [0]    TRISB12_bit
0x02C8       [0]    TRISB11_bit
0x02C8       [0]    TRISB7_bit
0x02C8       [0]    TRISB3_bit
0x02C8       [0]    TRISB2_bit
0x02C8       [0]    TRISB1_bit
0x02C8       [0]    TRISB6_bit
0x02C8       [0]    TRISB5_bit
0x02C8       [0]    TRISB4_bit
0x0188       [2]    CCP3CON1L
0x018A       [2]    CCP3CON1H
0x019C       [2]    CCP3PRL
0x01A0       [2]    CCP3RA
0x024A       [2]    AMP1CON
0x0274       [2]    DAC1CON
0x0276       [2]    DAC1DAT
0x0278       [2]    DAC2CON
0x027A       [2]    DAC2DAT
0x02C0       [2]    TRISA
0x0014       [2]    FARG_ADC1_Get_Sample_channel
0x0300       [2]    ADCBUF0
0x0340       [2]    ADCON1
0x0342       [2]    ADCON2
0x0344       [2]    ADCON3
0x0348       [2]    AD1CHS
0x0350       [2]    ADCSSL
0x0014       [2]    FARG_Pwm_Calc_Period_freq_hz
0x0016       [2]    FARG_Pwm_Calc_Period_prescaler
0x04E0       [2]    ANSA
0x04E2       [2]    ANSB
0x0634       [2]    CM1CON
0x0636       [2]    CM2CON
0x0638       [2]    CM3CON
0x0670       [2]    BUFCON0
0x0014       [2]    FARG_ADC1_Read_channel
0x0014       [4]    FARG_clamp_value
0x0018       [4]    FARG_clamp_min
0x0014       [2]    FARG_PWM3_Init_freq_hz
0x0016       [2]    FARG_PWM3_Init_enable_channel
0x0018       [2]    FARG_PWM3_Init_timer_prescaler
0x0014       [2]    FARG_PWM3_Set_Duty_duty
0x0014       [4]    FARG_controlMotors_leftPower
0x0018       [4]    FARG_controlMotors_rightPower
//** Label List: ** 
//----------------------------------------------
  L_clamp0
  L_clamp1
  L_clamp2
  L_controlMotors3
  L_controlMotors4
  L_controlMotors5
  L_controlMotors6
  L_controlMotors7
  L_controlMotors8
  L_controlMotors9
  L_controlMotors10
  L_seekAndDestroy11
  L_seekAndDestroy12
  L_seekAndDestroy13
  L_seekAndDestroy14
  L_seekAndDestroy15
  L_seekAndDestroy17
  L_seekAndDestroy19
  L_seekAndDestroy20
  L_seekAndDestroy21
  L_seekAndDestroy22
  L_seekAndDestroy23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main29
  L_main31
  L_main33
  L_main35
  L_main37
  L_main39
  L_main41
  L_main43
  L_main45
  L_main47
  L_main49
  L_main51
  L_main52
  L_main53
  L_main55
  L_main56
  L_main57
  L_main58
  L_main60
  L_main61
  L__seekAndDestroy62
  L__seekAndDestroy63
  L__seekAndDestroy64
  L__seekAndDestroy65
  L__seekAndDestroy66
  L__seekAndDestroy67
  L_end_clamp
  _clamp
  L__clamp69
  L__clamp70
  L__clamp71
  L__clamp72
  L_end_controlMotors
  _controlMotors
  L__controlMotors74
  L__controlMotors75
  L__controlMotors76
  L__controlMotors77
  L__controlMotors78
  L__controlMotors79
  L__controlMotors80
  L__controlMotors81
  L__controlMotors82
  L__controlMotors83
  L__controlMotors84
  L__controlMotors85
  L_end_seekAndDestroy
  _seekAndDestroy
  L__seekAndDestroy87
  L__seekAndDestroy88
  L__seekAndDestroy89
  L__seekAndDestroy90
  L__seekAndDestroy91
  L__seekAndDestroy92
  L__seekAndDestroy93
  L_end_initRobot
  _initRobot
  L_end_main
  _main
  L__main_end_loop
  L_ADC1_Get_Sample0
  L_ADC1_Get_Sample1
  L_ADC1_Get_Sample2
  L_ADC1_Get_Sample3
  L_ADC1_Get_Sample4
  L_ADC1_Get_Sample5
  L_ADC1_Get_Sample6
  L_ADC1_Get_Sample7
  L_ADC1_Get_Sample8
  L_ADC1_Get_Sample9
  L_ADC1_Get_Sample10
  L_ADC1_Get_Sample11
  L_ADC1_Get_Sample12
  L_ADC1_Get_Sample13
  L_ADC1_Get_Sample14
  L_ADC1_Get_Sample15
  L_ADC1_Get_Sample16
  L_ADC1_Get_Sample17
  L_ADC1_Get_Sample18
  L_ADC1_Get_Sample19
  L_ADC1_Get_Sample20
  L_ADC1_Get_Sample21
  L_ADC1_Get_Sample22
  L__ADC1_Get_Sample23
  L__ADC1_Get_Sample24
  L__ADC1_Get_Sample25
  L__ADC1_Get_Sample26
  L__ADC1_Get_Sample27
  L__ADC1_Get_Sample28
  L__ADC1_Get_Sample29
  L__ADC1_Get_Sample30
  L__ADC1_Get_Sample31
  L__ADC1_Get_Sample32
  L__ADC1_Get_Sample33
  L__ADC1_Get_Sample34
  L_end_ADC1_Init
  _ADC1_Init
  L_end_ADC1_Init_Advanced
  _ADC1_Init_Advanced
  L_end_ADC1_Get_Sample
  _ADC1_Get_Sample
  L__ADC1_Get_Sample38
  L__ADC1_Get_Sample39
  L__ADC1_Get_Sample40
  L__ADC1_Get_Sample41
  L__ADC1_Get_Sample42
  L__ADC1_Get_Sample43
  L__ADC1_Get_Sample44
  L__ADC1_Get_Sample45
  L__ADC1_Get_Sample46
  L__ADC1_Get_Sample47
  L__ADC1_Get_Sample48
  L_end_ADC1_Read
  _ADC1_Read
  Delay_Cyc_loop
  Delay_Cyc_rez
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  L_VDelay_ms3
  L_VDelay_ms4
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  L_VDelay_Advanced_ms7
  L_VDelay_Advanced_ms8
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  L_Delay_1us11
  L_Delay_10us13
  L_Delay_22us15
  L_Delay_50us17
  L_Delay_80us19
  L_Delay_500us21
  L_Delay_5500us23
  L_Delay_1ms25
  L_Delay_5ms27
  L_Delay_8ms29
  L_Delay_10ms31
  L_Delay_100ms33
  L_Delay_1sec35
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Get_Fosc_Per_Cyc
  _Get_Fosc_Per_Cyc
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_Delay_Cyc_Long
  _Delay_Cyc_Long
  L_end_VDelay_ms
  _VDelay_ms
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L_end_Delay_W0
  _Delay_W0
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  Divide_32x32___testsus
  the_end_Divide_32x32
  Divide_32x32___divsi3
  Divide_32x32___udivsi3
  Divide_32x32_divtestb
  Divide_32x32_calcquot
  Divide_32x32_returnq
  Divide_32x32_nextbit
  Divide_32x32_iterate
  Modulus_32x32___testsus
  the_end_Modulus_32x32
  Modulus_32x32___modsi3
  Modulus_32x32___umodsi3
  Modulus_32x32_modtestb
  Modulus_32x32_calcrem
  Modulus_32x32_exitr
  Modulus_32x32___udivsi3
  Modulus_32x32_nextbit
  Modulus_32x32_iterate
  L_end__Multiply_32x32
  __Multiply_32x32
  L_end__Divide_32x32
  __Divide_32x32
  L_end__Modulus_32x32
  __Modulus_32x32
  Float__fpack
  the_end_Float__fpack
  Float_notsubnormal
  Float_zerosig
  Float_subnormal
  Float_packupandgo
  Float_overflow
  LL_intro_Long2Float
  the_end__Long2Float
  Longint2Float__floatsisf
  Longword2Float__floatuisf
  Long2Float_notspecial
  Long2Float_return0
  Longint2Float_negative
  Long2Float_fixshift
  Long2Float_round
  Long2Float_shiftleft
  Long2Float_shiftright
  Long2Float__fpack
  Long2Float_notsubnormal
  Long2Float_zerosig
  Long2Float_subnormal
  Long2Float_packupandgo
  Long2Float_overflow
  Longlong2Float_floatdisf
  the_end__LongLong2Float
  Longlong2Float_negative
  Longlong2Float_notspecial
  Longlong2Float_return0
  Longlong2Float_fixshift
  Longlong2Float_round
  Longlong2Float_shiftleft
  Longlong2Float_shiftright
  Float2Longword_fixunssfsi
  the_end__Float2Longword
  Float2Longword_funpack
  Float2Longword_returnzero
  Float2Longword_exit
  Float2Longword_shiftright
  Float2Longword_shiftleft
  Float2Longword_shiftrightloop
  Float2Longword_zeroorsub
  Float2Longword_nanorinf
  Float2Longword_finitereturn
  Float2Longword_infinite
  Float2Longword_subnormal
  Float2Longword_normalize
  Float2Longint__fixsfsi
  the_end__Float2Longint
  Float2Longint__funpack
  Float2Longint_setsign
  Float2Longint_shiftright
  Float2Longint_shiftleft
  Float2Longint_exit
  Float2Longint_shiftrightloop
  Float2Longint_zeroorsub
  Float2Longint_nanorinf
  Float2Longint_finitereturn
  Float2Longint_infinite
  Float2Longint_subnormal
  Float2Longint_normalize
  AddSubFP__addsf3
  the_end__AddSub_FP
  AddSubFP__funpack2
  AddSubFP__fPropagateNaN
  AddSubFP_aisinfinite
  AddSubFP_checkspecialb
  AddSubFP_return2_3
  AddSubFP_getsign
  AddSubFP_gotsign
  AddSubFP_expcanonical
  AddSubFP_nonegate
  AddSubFP_aligniter
  AddSubFP_signoff
  AddSubFP_align
  AddSubFP_aligned
  AddSubFP_normalizesum
  AddSubFP_checknormal
  AddSubFP_round
  AddSubFP_discardguard
  AddSubFP_underflow
  AddSubFP_normalizeloop
  AddSubFP_normalizeexit
  AddSubFP_normalizetest
  AddSubFP__fpack
  AddSubFP__fbopExit
  AddSubFP_return8_3
  AddSubFP__fbopReturnNaN
  AddSubFP__funpack
  AddSubFP_return0_1
  AddSubFP_return8_1
  AddSubFP_notsubnormal_1
  AddSubFP_zerosig
  AddSubFP_subnormal_1
  AddSubFP_packupandgo
  AddSubFP_overflow
  AddSubFP_zeroorsub
  AddSubFP_nanorinf
  AddSubFP_finitereturn
  AddSubFP_infinite
  AddSubFP_subnormal_2
  AddSubFP_normalize
  MulFP___mulsf3
  the_end__Mul_FP
  MulFP__funpack2
  MulFP__fPropagateNaN
  MulFP_aisinfinite
  MulFP_bisinfinite
  MulFP_return8_1
  MulFP_return2_1
  MulFP_formsticky
  MulFP_formRandSig
  MulFP__fpack
  MulFP_return0_1
  MulFP__fbopExit
  MulFP__fbopReturnNaN
  MulFP__funpack
  MulFP_return0_2
  MulFP_return8_2
  MulFP_notsubnormal
  MulFP_zerosig
  MulFP_subnormal1
  MulFP_packupandgo
  MulFP_overflow
  MulFP_zeroorsub
  MulFP_nanorinf
  MulFP_finitereturn
  MulFP_infinite
  MulFP_subnormal2
  MulFP_normalize
  DivFP___divsf3
  the_end__Div_FP
  DivFP__funpack2
  DivFP__fPropagateNaN
  DivFP_aisinfinite
  DivFP_returnZero
  DivFP_aiszero
  DivFP_returnInf
  DivFP_finitenonzero
  DivFP_diventry
  DivFP_divnext
  DivFP_divdone
  DivFP_divloop
  DivFP_stickyok
  DivFP_guardused
  DivFP__fpack
  DivFP_return0_1
  DivFP__fbopExit
  DivFP__fbopReturnNaN
  DivFP_return8_1
  DivFP_return2_1
  DivFP__funpack
  DivFP_return0
  DivFP_return8
  DivFP_notsubnormal
  DivFP_zerosig
  DivFP_subnormal
  DivFP_packupandgo
  DivFP_overfloW
  DivFP_zeroorsub
  DivFP_nanorinf
  DivFP_finitereturn
  DivFP_infinite
  DivFP_subnormal2
  DivFP_normalize
  CompareFp__fcompare
  the_end__Compare_Fp
  CompareFp__funpack2
  CompareFp_exit
  CompareFp_comparemag
  CompareFp_returnEqual
  CompareFp_adjust
  CompareFp__funpack
  CompareFp_zeroorsub
  CompareFp_nanorinf
  CompareFp_finitereturn
  CompareFp_infinite
  CompareFp_subnormal
  CompareFp_normalize
  L_end_Float_fpack
  _Float_fpack
  L_end__Long2Float
  __Long2Float
  L_end__LongLong2Float
  __LongLong2Float
  L_end__Float2Longword
  __Float2Longword
  L_end__Float2Longint
  __Float2Longint
  L_end__AddSub_FP
  __AddSub_FP
  L_end__Sub_FP
  __Sub_FP
  L_end__Mul_FP
  __Mul_FP
  L_end__Div_FP
  __Div_FP
  L_end__Compare_Fp
  __Compare_Fp
  L_end__Compare_Le_Fp
  __Compare_Le_Fp
  L_end__Compare_Ge_Fp
  __Compare_Ge_Fp
  L_PWM1_Init0
  L_PWM1_Init1
  L_PWM1_Init2
  L_PWM1_Init3
  L_PWM1_Init4
  L_PWM1_Init5
  L_PWM2_Init6
  L_PWM2_Init7
  L_PWM2_Init8
  L_PWM2_Init9
  L_PWM2_Init10
  L_PWM2_Init11
  L_PWM3_Init12
  L_PWM3_Init13
  L_end_Pwm_Calc_Period
  _Pwm_Calc_Period
  L_end_PWM1_Init
  _PWM1_Init
  L_end_PWM1_Start
  _PWM1_Start
  L_end_PWM1_Stop
  _PWM1_Stop
  L_end_PWM1_Set_Duty
  _PWM1_Set_Duty
  L_end_PWM2_Init
  _PWM2_Init
  L_end_PWM2_Start
  _PWM2_Start
  L_end_PWM2_Stop
  _PWM2_Stop
  L_end_PWM2_Set_Duty
  _PWM2_Set_Duty
  L_end_PWM3_Init
  _PWM3_Init
  L_end_PWM3_Start
  _PWM3_Start
  L_end_PWM3_Stop
  _PWM3_Stop
  L_end_PWM3_Set_Duty
  _PWM3_Set_Duty
