;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/08/2017 14:27:31
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040406  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x0406	0x20826F  	MOV	#2086, W15
0x0408	0x20FFF0  	MOV	#4095, W0
0x040A	0xB7A020  	MOV	WREG, SPLIM
0x040C	0x200000  	MOV	#0, W0
0x040E	0xB7A034  	MOV	WREG, PSVPAG
0x0410	0x200040  	MOV	#4, W0
0x0412	0xB72044  	IOR	CORCON
0x0414	0x00000002045A  	CALL	1114
;opponent_sensor_read.c,1 :: 		void main() {
;opponent_sensor_read.c,2 :: 		RB15_bit = 0;
0x0418	0x781F8A  	PUSH	W10
0x041A	0x781F8B  	PUSH	W11
0x041C	0xA9E2CB  	BCLR	RB15_bit, BitPos(RB15_bit+0)
;opponent_sensor_read.c,3 :: 		TRISB15_bit = 1;
0x041E	0xA8E2C9  	BSET	TRISB15_bit, BitPos(TRISB15_bit+0)
;opponent_sensor_read.c,4 :: 		UART1_init(9600);
0x0420	0x22580A  	MOV	#9600, W10
0x0422	0x20000B  	MOV	#0, W11
0x0424	0x07FF6F  	RCALL	_UART1_Init
;opponent_sensor_read.c,6 :: 		while(1) {
L_main0:
;opponent_sensor_read.c,7 :: 		if(RB15_bit)
0x0426	0xAEE2CB  	BTSS	RB15_bit, BitPos(RB15_bit+0)
0x0428	0x370003  	BRA	L_main2
;opponent_sensor_read.c,8 :: 		UART1_write_text("Opponent detected");
0x042A	0x2080BA  	MOV	#lo_addr(?lstr1_opponent_sensor_read), W10
0x042C	0x07FF5A  	RCALL	_UART1_Write_Text
0x042E	0x370002  	BRA	L_main3
L_main2:
;opponent_sensor_read.c,10 :: 		UART1_write_text("Undetected");
0x0430	0x20800A  	MOV	#lo_addr(?lstr2_opponent_sensor_read), W10
0x0432	0x07FF57  	RCALL	_UART1_Write_Text
L_main3:
;opponent_sensor_read.c,11 :: 		}
0x0434	0x37FFF8  	BRA	L_main0
;opponent_sensor_read.c,12 :: 		}
L_end_main:
0x0436	0x7805CF  	POP	W11
0x0438	0x78054F  	POP	W10
L__main_end_loop:
0x043A	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_UART1_Init:
0x0304	0xFA0008  	LNK	#8
;__Lib_UART_12_p24_p33.c,145 :: 		
;__Lib_UART_12_p24_p33.c,148 :: 		
0x0306	0x2026A0  	MOV	#lo_addr(_UART1_Write), W0
0x0308	0x884110  	MOV	W0, _UART_Wr_Ptr
;__Lib_UART_12_p24_p33.c,149 :: 		
0x030A	0x2FFFF0  	MOV	#lo_addr(_UART1_Read), W0
0x030C	0x884100  	MOV	W0, _UART_Rd_Ptr
;__Lib_UART_12_p24_p33.c,150 :: 		
0x030E	0x2FFFF0  	MOV	#lo_addr(_UART1_Data_Ready), W0
0x0310	0x8840F0  	MOV	W0, _UART_Rdy_Ptr
;__Lib_UART_12_p24_p33.c,151 :: 		
0x0312	0x2FFFF0  	MOV	#lo_addr(_UART1_Tx_Idle), W0
0x0314	0x884120  	MOV	W0, _UART_Tx_Idle_Ptr
;__Lib_UART_12_p24_p33.c,156 :: 		
0x0316	0xEF2220  	CLR	U1MODE
;__Lib_UART_12_p24_p33.c,157 :: 		
0x0318	0x280000  	MOV	#32768, W0
0x031A	0xB7A222  	MOV	WREG, U1STA
;__Lib_UART_12_p24_p33.c,161 :: 		
0x031C	0xA96220  	BCLR	U1MODE, #3
;__Lib_UART_12_p24_p33.c,162 :: 		
0x031E	0x07FFDC  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x0320	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,164 :: 		
0x0322	0x203E80  	MOV	#1000, W0
0x0324	0x200001  	MOV	#0, W1
0x0326	0x07FF98  	RCALL	__Multiply_32x32
0x0328	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,166 :: 		
0x032A	0x07FFD9  	RCALL	_Get_Fosc_Per_Cyc
0x032C	0xDE0041  	LSR	W0, #1, W0
0x032E	0x400064  	ADD	W0, #4, W0
0x0330	0x780080  	MOV	W0, W1
0x0332	0x470060  	ADD	W14, #0, W0
0x0334	0xBE880A  	MOV.D	W10, [W0]
L__UART1_Init83:
0x0336	0xE90081  	DEC	W1, W1
0x0338	0x350003  	BRA LT	L__UART1_Init84
0x033A	0xD01810  	SL	[W0], [W0++]
0x033C	0xD29010  	RLC	[W0], [W0--]
0x033E	0x37FFFB  	BRA	L__UART1_Init83
L__UART1_Init84:
;__Lib_UART_12_p24_p33.c,168 :: 		
0x0340	0xBE9F82  	PUSH.D	W2
0x0342	0xBE9F8A  	PUSH.D	W10
0x0344	0xBE0002  	MOV.D	W2, W0
0x0346	0x90010E  	MOV	[W14+0], W2
0x0348	0x90019E  	MOV	[W14+2], W3
0x034A	0xEB0200  	CLR	W4
0x034C	0x07FF59  	RCALL	__Modulus_32x32
0x034E	0xBE054F  	POP.D	W10
0x0350	0xBE014F  	POP.D	W2
0x0352	0x980720  	MOV	W0, [W14+4]
0x0354	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p24_p33.c,169 :: 		
0x0356	0xBE9F8A  	PUSH.D	W10
; tmp end address is: 4 (W2)
0x0358	0xBE0002  	MOV.D	W2, W0
0x035A	0x90010E  	MOV	[W14+0], W2
0x035C	0x90019E  	MOV	[W14+2], W3
0x035E	0xEB0200  	CLR	W4
0x0360	0x07FF8B  	RCALL	__Divide_32x32
0x0362	0xBE054F  	POP.D	W10
; tmp start address is: 6 (W3)
0x0364	0x780180  	MOV	W0, W3
0x0366	0x780201  	MOV	W1, W4
;__Lib_UART_12_p24_p33.c,171 :: 		
0x0368	0x470060  	ADD	W14, #0, W0
0x036A	0xD10150  	LSR	[++W0], W2
0x036C	0xD380C0  	RRC	[--W0], W1
0x036E	0x470064  	ADD	W14, #4, W0
0x0370	0xE10830  	CP	W1, [W0++]
0x0372	0xE19020  	CPB	W2, [W0--]
0x0374	0x310007  	BRA GEU	L__UART1_Init62
L__UART1_Init85:
;__Lib_UART_12_p24_p33.c,172 :: 		
0x0376	0x418061  	ADD	W3, #1, W0
0x0378	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x037A	0x780280  	MOV	W0, W5
0x037C	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x037E	0x780105  	MOV	W5, W2
0x0380	0x780186  	MOV	W6, W3
0x0382	0x370002  	BRA	L_UART1_Init13
L__UART1_Init62:
;__Lib_UART_12_p24_p33.c,171 :: 		
0x0384	0x780103  	MOV	W3, W2
0x0386	0x780184  	MOV	W4, W3
;__Lib_UART_12_p24_p33.c,172 :: 		
L_UART1_Init13:
;__Lib_UART_12_p24_p33.c,175 :: 		
; tmp start address is: 4 (W2)
0x0388	0x718002  	IOR	W3, W2, W0
0x038A	0x3A0033  	BRA NZ	L__UART1_Init64
L__UART1_Init86:
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,177 :: 		
0x038C	0x07FFA5  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x038E	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,179 :: 		
0x0390	0x203E80  	MOV	#1000, W0
0x0392	0x200001  	MOV	#0, W1
0x0394	0x07FF61  	RCALL	__Multiply_32x32
0x0396	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_12_p24_p33.c,181 :: 		
0x0398	0x07FFA2  	RCALL	_Get_Fosc_Per_Cyc
0x039A	0xDE0041  	LSR	W0, #1, W0
0x039C	0xECA000  	INC2	W0
0x039E	0x780080  	MOV	W0, W1
0x03A0	0x470060  	ADD	W14, #0, W0
0x03A2	0xBE880A  	MOV.D	W10, [W0]
L__UART1_Init87:
0x03A4	0xE90081  	DEC	W1, W1
0x03A6	0x350003  	BRA LT	L__UART1_Init88
0x03A8	0xD01810  	SL	[W0], [W0++]
0x03AA	0xD29010  	RLC	[W0], [W0--]
0x03AC	0x37FFFB  	BRA	L__UART1_Init87
L__UART1_Init88:
;__Lib_UART_12_p24_p33.c,183 :: 		
0x03AE	0xBE9F82  	PUSH.D	W2
0x03B0	0xBE0002  	MOV.D	W2, W0
0x03B2	0x90010E  	MOV	[W14+0], W2
0x03B4	0x90019E  	MOV	[W14+2], W3
0x03B6	0xEB0200  	CLR	W4
0x03B8	0x07FF23  	RCALL	__Modulus_32x32
0x03BA	0xBE014F  	POP.D	W2
0x03BC	0x980720  	MOV	W0, [W14+4]
0x03BE	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p24_p33.c,184 :: 		
0x03C0	0xBE0002  	MOV.D	W2, W0
0x03C2	0x90010E  	MOV	[W14+0], W2
0x03C4	0x90019E  	MOV	[W14+2], W3
0x03C6	0xEB0200  	CLR	W4
0x03C8	0x07FF57  	RCALL	__Divide_32x32
; tmp end address is: 4 (W2)
; tmp start address is: 6 (W3)
0x03CA	0x780180  	MOV	W0, W3
0x03CC	0x780201  	MOV	W1, W4
;__Lib_UART_12_p24_p33.c,186 :: 		
0x03CE	0x470060  	ADD	W14, #0, W0
0x03D0	0xD10150  	LSR	[++W0], W2
0x03D2	0xD380C0  	RRC	[--W0], W1
0x03D4	0x470064  	ADD	W14, #4, W0
0x03D6	0xE10830  	CP	W1, [W0++]
0x03D8	0xE19020  	CPB	W2, [W0--]
0x03DA	0x310007  	BRA GEU	L__UART1_Init63
L__UART1_Init89:
;__Lib_UART_12_p24_p33.c,187 :: 		
0x03DC	0x418061  	ADD	W3, #1, W0
0x03DE	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x03E0	0x780280  	MOV	W0, W5
0x03E2	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x03E4	0x780105  	MOV	W5, W2
0x03E6	0x780186  	MOV	W6, W3
0x03E8	0x370002  	BRA	L_UART1_Init15
L__UART1_Init63:
;__Lib_UART_12_p24_p33.c,186 :: 		
0x03EA	0x780103  	MOV	W3, W2
0x03EC	0x780184  	MOV	W4, W3
;__Lib_UART_12_p24_p33.c,187 :: 		
L_UART1_Init15:
;__Lib_UART_12_p24_p33.c,189 :: 		
; tmp start address is: 4 (W2)
0x03EE	0xA86220  	BSET	U1MODE, #3
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,190 :: 		
0x03F0	0x370000  	BRA	L_UART1_Init14
L__UART1_Init64:
;__Lib_UART_12_p24_p33.c,175 :: 		
;__Lib_UART_12_p24_p33.c,190 :: 		
L_UART1_Init14:
;__Lib_UART_12_p24_p33.c,192 :: 		
; tmp start address is: 4 (W2)
0x03F2	0x510061  	SUB	W2, #1, W0
0x03F4	0x5980E0  	SUBB	W3, #0, W1
; tmp end address is: 4 (W2)
; tmp start address is: 0 (W0)
0x03F6	0x881140  	MOV	W0, U1BRG
; tmp end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,195 :: 		
0x03F8	0xA92222  	BCLR	U1STA, #1
;__Lib_UART_12_p24_p33.c,197 :: 		
0x03FA	0xA8E221  	BSET	U1MODE, #15
;__Lib_UART_12_p24_p33.c,198 :: 		
0x03FC	0xA84223  	BSET	U1STA, #10
;__Lib_UART_12_p24_p33.c,200 :: 		
0x03FE	0x07FF65  	RCALL	_Delay_100ms
0x0400	0x07FF64  	RCALL	_Delay_100ms
;__Lib_UART_12_p24_p33.c,202 :: 		
L_end_UART1_Init:
0x0402	0xFA8000  	ULNK
0x0404	0x060000  	RETURN
; end of _UART1_Init
_Get_Fosc_kHz:
;__Lib_Delays.c,38 :: 		unsigned long Get_Fosc_kHz() {
;__Lib_Delays.c,39 :: 		return Clock_kHz();
0x02D8	0x20FA00  	MOV	#4000, W0
0x02DA	0x200001  	MOV	#0, W1
;__Lib_Delays.c,40 :: 		}
L_end_Get_Fosc_kHz:
0x02DC	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Get_Fosc_Per_Cyc:
;__Lib_Delays.c,63 :: 		unsigned int Get_Fosc_Per_Cyc() {
;__Lib_Delays.c,64 :: 		return __FOSC_PER_CYC;
0x02DE	0x200020  	MOV	#2, W0
;__Lib_Delays.c,65 :: 		}
L_end_Get_Fosc_Per_Cyc:
0x02E0	0x060000  	RETURN
; end of _Get_Fosc_Per_Cyc
_Delay_100ms:
;__Lib_Delays.c,666 :: 		void Delay_100ms()
;__Lib_Delays.c,668 :: 		Delay_ms(100);
0x02CA	0x200028  	MOV	#2, W8
0x02CC	0x2046A7  	MOV	#1130, W7
L_Delay_100ms31:
0x02CE	0xED200E  	DEC	W7
0x02D0	0x3AFFFE  	BRA NZ	L_Delay_100ms31
0x02D2	0xED2010  	DEC	W8
0x02D4	0x3AFFFC  	BRA NZ	L_Delay_100ms31
;__Lib_Delays.c,669 :: 		}
L_end_Delay_100ms:
0x02D6	0x060000  	RETURN
; end of _Delay_100ms
__Multiply_32x32:
0x0258	0xFA0000  	LNK	#0
;__Lib_Math.c,43 :: 		
;__Lib_Math.c,46 :: 		
0x025A	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.c,47 :: 		
0x025C	0x880050  	MOV	W0, W5
;__Lib_Math.c,48 :: 		
0x025E	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.c,49 :: 		
0x0260	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,50 :: 		
0x0262	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.c,51 :: 		
0x0264	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,54 :: 		
L_end__Multiply_32x32:
0x0266	0xFA8000  	ULNK
0x0268	0x060000  	RETURN
; end of __Multiply_32x32
__Modulus_32x32:
0x0200	0xFA0000  	LNK	#0
;__Lib_Math.c,162 :: 		
;__Lib_Math.c,164 :: 		
0x0202	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.c,166 :: 		
0x0204	0x000000040254  	GOTO	the_end_Modulus_32x32
;__Lib_Math.c,171 :: 		
Modulus_32x32___testsus:
;__Lib_Math.c,172 :: 		
0x0208	0xE20008  	CP0	W4
;__Lib_Math.c,173 :: 		
0x020A	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.c,175 :: 		
0x020C	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,176 :: 		
0x020E	0x060000  	RETURN
;__Lib_Math.c,178 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.c,179 :: 		
0x0210	0x781F81  	MOV	W1, [W15++]
;__Lib_Math.c,180 :: 		
0x0212	0xE20002  	CP0	W1
;__Lib_Math.c,181 :: 		
0x0214	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.c,182 :: 		
0x0216	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,183 :: 		
0x0218	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,184 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.c,185 :: 		
0x021A	0xE20006  	CP0	W3
;__Lib_Math.c,186 :: 		
0x021C	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.c,187 :: 		
0x021E	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,188 :: 		
0x0220	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,189 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.c,190 :: 		
0x0222	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,191 :: 		
0x0224	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,192 :: 		
0x0226	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.c,193 :: 		
0x0228	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,194 :: 		
0x022A	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,195 :: 		
Modulus_32x32_exitr:
;__Lib_Math.c,196 :: 		
0x022C	0x060000  	RETURN
;__Lib_Math.c,197 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.c,198 :: 		
0x022E	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.c,199 :: 		
0x0230	0xBE8004  	MOV.D	W4, W0
;__Lib_Math.c,200 :: 		
0x0232	0x060000  	RETURN
;__Lib_Math.c,201 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.c,202 :: 		
0x0234	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,203 :: 		
0x0236	0x200206  	MOV	#32, W6
;__Lib_Math.c,204 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.c,205 :: 		
0x0238	0xD00000  	SL	W0, W0
;__Lib_Math.c,206 :: 		
0x023A	0xD28081  	RLC	W1, W1
;__Lib_Math.c,207 :: 		
0x023C	0xD28204  	RLC	W4, W4
;__Lib_Math.c,208 :: 		
0x023E	0xD28285  	RLC	W5, W5
;__Lib_Math.c,209 :: 		
0x0240	0xA80000  	BSET	W0, #0
;__Lib_Math.c,210 :: 		
0x0242	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,211 :: 		
0x0244	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,212 :: 		
0x0246	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.c,213 :: 		
0x0248	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,214 :: 		
0x024A	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,215 :: 		
0x024C	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,216 :: 		
Modulus_32x32_iterate:
;__Lib_Math.c,217 :: 		
0x024E	0xE90306  	DEC	W6, W6
;__Lib_Math.c,218 :: 		
0x0250	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.c,219 :: 		
0x0252	0x060000  	RETURN
;__Lib_Math.c,222 :: 		
the_end_Modulus_32x32:
;__Lib_Math.c,225 :: 		
L_end__Modulus_32x32:
0x0254	0xFA8000  	ULNK
0x0256	0x060000  	RETURN
; end of __Modulus_32x32
__Divide_32x32:
0x0278	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x027A	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x027C	0x0000000402C6  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x0280	0xE20008  	CP0	W4
;__Lib_Math.c,90 :: 		
0x0282	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x0284	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x0286	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x0288	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.c,97 :: 		
0x028A	0xE20002  	CP0	W1
;__Lib_Math.c,98 :: 		
0x028C	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x028E	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,100 :: 		
0x0290	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x0292	0xE20006  	CP0	W3
;__Lib_Math.c,103 :: 		
0x0294	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x0296	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,105 :: 		
0x0298	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x029A	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x029C	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,109 :: 		
0x029E	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x02A0	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,111 :: 		
0x02A2	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x02A4	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x02A6	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,116 :: 		
0x02A8	0x200206  	MOV	#32, W6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x02AA	0xD00000  	SL	W0, W0
;__Lib_Math.c,119 :: 		
0x02AC	0xD28081  	RLC	W1, W1
;__Lib_Math.c,120 :: 		
0x02AE	0xD28204  	RLC	W4, W4
;__Lib_Math.c,121 :: 		
0x02B0	0xD28285  	RLC	W5, W5
;__Lib_Math.c,122 :: 		
0x02B2	0xA80000  	BSET	W0, #0
;__Lib_Math.c,123 :: 		
0x02B4	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,124 :: 		
0x02B6	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,125 :: 		
0x02B8	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x02BA	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,127 :: 		
0x02BC	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,128 :: 		
0x02BE	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x02C0	0xE90306  	DEC	W6, W6
;__Lib_Math.c,131 :: 		
0x02C2	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x02C4	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x02C6	0xFA8000  	ULNK
0x02C8	0x060000  	RETURN
; end of __Divide_32x32
_UART1_Write_Text:
0x02E2	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,76 :: 		
;__Lib_UART_12_p24_p33.c,77 :: 		
; counter start address is: 2 (W1)
0x02E4	0xEF2002  	CLR	W1
;__Lib_UART_12_p24_p33.c,79 :: 		
; data_ start address is: 0 (W0)
0x02E6	0x78401A  	MOV.B	[W10], W0
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,80 :: 		
L_UART1_Write_Text2:
; data_ start address is: 0 (W0)
; counter start address is: 2 (W1)
0x02E8	0xE10460  	CP.B	W0, #0
0x02EA	0x32000A  	BRA Z	L_UART1_Write_Text3
L__UART1_Write_Text71:
;__Lib_UART_12_p24_p33.c,81 :: 		
0x02EC	0x781F8A  	PUSH	W10
; data_ end address is: 0 (W0)
0x02EE	0xFB8500  	ZE	W0, W10
0x02F0	0x07FFBC  	RCALL	_UART1_Write
0x02F2	0x78054F  	POP	W10
;__Lib_UART_12_p24_p33.c,82 :: 		
0x02F4	0x40C061  	ADD.B	W1, #1, W0
0x02F6	0x784080  	MOV.B	W0, W1
;__Lib_UART_12_p24_p33.c,83 :: 		
0x02F8	0xFB8000  	ZE	W0, W0
0x02FA	0x450000  	ADD	W10, W0, W0
; data_ start address is: 0 (W0)
0x02FC	0x784010  	MOV.B	[W0], W0
;__Lib_UART_12_p24_p33.c,84 :: 		
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
0x02FE	0x37FFF4  	BRA	L_UART1_Write_Text2
L_UART1_Write_Text3:
;__Lib_UART_12_p24_p33.c,85 :: 		
L_end_UART1_Write_Text:
0x0300	0xFA8000  	ULNK
0x0302	0x060000  	RETURN
; end of _UART1_Write_Text
_UART1_Write:
0x026A	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,70 :: 		
;__Lib_UART_12_p24_p33.c,71 :: 		
L_UART1_Write0:
0x026C	0xAF0223  	BTSC	U1STA, #8
0x026E	0x370001  	BRA	L_UART1_Write1
0x0270	0x37FFFD  	BRA	L_UART1_Write0
L_UART1_Write1:
;__Lib_UART_12_p24_p33.c,72 :: 		
0x0272	0x88112A  	MOV	W10, U1TXREG
;__Lib_UART_12_p24_p33.c,73 :: 		
L_end_UART1_Write:
0x0274	0xFA8000  	ULNK
0x0276	0x060000  	RETURN
; end of _UART1_Write
0x045A	0x208001  	MOV	#lo_addr(?lstr2_opponent_sensor_read), W1
0x045C	0x2843C0  	MOV	#33852, W0
0x045E	0x09000D  	REPEAT	#13
0x0460	0x7818B0  	MOV	[W0++], [W1++]
0x0462	0x7858B0  	MOV.B	[W0++], [W1++]
0x0464	0x060000  	RETURN
;,0 :: _initBlock_0 [29]
; Containing: ?ICS?lstr2_opponent_sensor_read [11]
;             ?ICS?lstr1_opponent_sensor_read [18]
0x043C	0x6E55 ;_initBlock_0+0 : ?ICS?lstr2_opponent_sensor_read at 0x043C
0x043E	0x6564 ;_initBlock_0+2
0x0440	0x6574 ;_initBlock_0+4
0x0442	0x7463 ;_initBlock_0+6
0x0444	0x6465 ;_initBlock_0+8
0x0446	0x4F00 ;_initBlock_0+10 : ?ICS?lstr1_opponent_sensor_read at 0x0447
0x0448	0x7070 ;_initBlock_0+12
0x044A	0x6E6F ;_initBlock_0+14
0x044C	0x6E65 ;_initBlock_0+16
0x044E	0x2074 ;_initBlock_0+18
0x0450	0x6564 ;_initBlock_0+20
0x0452	0x6574 ;_initBlock_0+22
0x0454	0x7463 ;_initBlock_0+24
0x0456	0x6465 ;_initBlock_0+26
0x0458	0x00 ;_initBlock_0+28
; end of _initBlock_0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200      [88]    __Modulus_32x32
0x0258      [18]    __Multiply_32x32
0x026A      [14]    _UART1_Write
0x0278      [82]    __Divide_32x32
0x02CA      [14]    _Delay_100ms
0x02D8       [6]    _Get_Fosc_kHz
0x02DE       [4]    _Get_Fosc_Per_Cyc
0x02E2      [34]    _UART1_Write_Text
0x0304     [258]    _UART1_Init
0x0406      [54]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x081E       [2]    _UART_Rdy_Ptr
0x0820       [2]    _UART_Rd_Ptr
0x0822       [2]    _UART_Wr_Ptr
0x0228       [2]    U1BRG
0x0220       [2]    U1MODE
0x0824       [2]    _UART_Tx_Idle_Ptr
0x02C8       [0]    TRISB15_bit
0x02CA       [0]    RB15_bit
0x0224       [2]    U1TXREG
0x0222       [2]    U1STA
0x0800      [11]    ?lstr2_opponent_sensor_read
0x080B      [18]    ?lstr1_opponent_sensor_read
0x0220       [2]    U1MODE
0x0222       [2]    U1STA
0x0224       [2]    U1TXREG
0x0228       [2]    U1BRG
0x0014       [2]    FARG_UART1_Write__data
0x0014       [2]    FARG_UART1_Write_Text_uart_text
0x0014       [4]    FARG_UART1_Init_baud_rate
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x043C      [11]    ?ICS?lstr2_opponent_sensor_read
0x0447      [18]    ?ICS?lstr1_opponent_sensor_read
