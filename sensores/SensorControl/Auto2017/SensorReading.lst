;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 13/09/2017 12:03:58
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040762  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x0762	0x20850F  	MOV	#2128, W15
0x0764	0x20FFF0  	MOV	#4095, W0
0x0766	0xB7A020  	MOV	WREG, SPLIM
0x0768	0x200000  	MOV	#0, W0
0x076A	0xB7A034  	MOV	WREG, PSVPAG
0x076C	0x200040  	MOV	#4, W0
0x076E	0xB72044  	IOR	CORCON
0x0770	0x0000000207CC  	CALL	1996
;SensorReading.c,3 :: 		void main() {
;SensorReading.c,4 :: 		init_robot();
0x0774	0x07FFE7  	RCALL	_init_robot
;SensorReading.c,5 :: 		while(1){
L_main0:
;SensorReading.c,6 :: 		mySensorControl();
0x0776	0x07FF3D  	RCALL	_mySensorControl
;SensorReading.c,7 :: 		}
0x0778	0x37FFFE  	BRA	L_main0
;SensorReading.c,8 :: 		}
L_end_main:
L__main_end_loop:
0x077A	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_init_robot:
;sensorFunction.c,58 :: 		void init_robot(){
;sensorFunction.c,60 :: 		TRISB6_bit = 1;
0x0744	0xA8C2C8  	BSET	TRISB6_bit, BitPos(TRISB6_bit+0)
;sensorFunction.c,61 :: 		TRISA7_bit = 1;
0x0746	0xA8E2C0  	BSET	TRISA7_bit, BitPos(TRISA7_bit+0)
;sensorFunction.c,62 :: 		TRISB5_bit = 1;
0x0748	0xA8A2C8  	BSET	TRISB5_bit, BitPos(TRISB5_bit+0)
;sensorFunction.c,63 :: 		TRISB4_bit = 1;
0x074A	0xA882C8  	BSET	TRISB4_bit, BitPos(TRISB4_bit+0)
;sensorFunction.c,64 :: 		TRISB3_bit = 1;
0x074C	0xA862C8  	BSET	TRISB3_bit, BitPos(TRISB3_bit+0)
;sensorFunction.c,65 :: 		TRISA3_bit = 1;
0x074E	0xA862C0  	BSET	TRISA3_bit, BitPos(TRISA3_bit+0)
;sensorFunction.c,66 :: 		TRISA6_bit = 1;
0x0750	0xA8C2C0  	BSET	TRISA6_bit, BitPos(TRISA6_bit+0)
;sensorFunction.c,70 :: 		RB6_bit = 0;
0x0752	0xA9C2CA  	BCLR	RB6_bit, BitPos(RB6_bit+0)
;sensorFunction.c,71 :: 		RA7_bit = 0;
0x0754	0xA9E2C2  	BCLR	RA7_bit, BitPos(RA7_bit+0)
;sensorFunction.c,72 :: 		RB5_bit = 0;
0x0756	0xA9A2CA  	BCLR	RB5_bit, BitPos(RB5_bit+0)
;sensorFunction.c,73 :: 		RB4_bit = 0;
0x0758	0xA982CA  	BCLR	RB4_bit, BitPos(RB4_bit+0)
;sensorFunction.c,74 :: 		RB3_bit = 0;
0x075A	0xA962CA  	BCLR	RB3_bit, BitPos(RB3_bit+0)
;sensorFunction.c,75 :: 		RA6_bit = 0;
0x075C	0xA9C2C2  	BCLR	RA6_bit, BitPos(RA6_bit+0)
;sensorFunction.c,76 :: 		RA3_bit = 0;
0x075E	0xA962C2  	BCLR	RA3_bit, BitPos(RA3_bit+0)
;sensorFunction.c,77 :: 		}
L_end_init_robot:
0x0760	0x060000  	RETURN
; end of _init_robot
_mySensorControl:
0x05F2	0xFA0206  	LNK	#518
;sensorFunction.c,7 :: 		float mySensorControl (){
;sensorFunction.c,10 :: 		int soma = 0;
0x05F4	0x781F8A  	PUSH	W10
0x05F6	0x781F8B  	PUSH	W11
;sensorFunction.c,11 :: 		float erro = 0;
;sensorFunction.c,13 :: 		soma = ((-2*RB6_bit) + (3*RA7_bit) + RB5_bit + (-3*RB4_bit) + (2*RB3_bit) + (-4*RA6_bit) + (4*RA3_bit));
0x05F8	0xEF6000  	CLR.B	W0
0x05FA	0xAFC2CA  	BTSC	RB6_bit, BitPos(RB6_bit+0)
0x05FC	0xEC6000  	INC.B	W0
0x05FE	0x2FFFE1  	MOV	#65534, W1
0x0600	0xFB8000  	ZE	W0, W0
0x0602	0xB98900  	MUL.SS	W1, W0, W2
0x0604	0xEF6000  	CLR.B	W0
0x0606	0xAFE2C2  	BTSC	RA7_bit, BitPos(RA7_bit+0)
0x0608	0xEC6000  	INC.B	W0
0x060A	0xFB8080  	ZE	W0, W1
0x060C	0x200030  	MOV	#3, W0
0x060E	0xB98001  	MUL.SS	W0, W1, W0
0x0610	0x410080  	ADD	W2, W0, W1
0x0612	0xEF6000  	CLR.B	W0
0x0614	0xAFA2CA  	BTSC	RB5_bit, BitPos(RB5_bit+0)
0x0616	0xEC6000  	INC.B	W0
0x0618	0xFB8000  	ZE	W0, W0
0x061A	0x408100  	ADD	W1, W0, W2
0x061C	0xEF6000  	CLR.B	W0
0x061E	0xAF82CA  	BTSC	RB4_bit, BitPos(RB4_bit+0)
0x0620	0xEC6000  	INC.B	W0
0x0622	0x2FFFD1  	MOV	#65533, W1
0x0624	0xFB8000  	ZE	W0, W0
0x0626	0xB98800  	MUL.SS	W1, W0, W0
0x0628	0x410080  	ADD	W2, W0, W1
0x062A	0xEF6000  	CLR.B	W0
0x062C	0xAF62CA  	BTSC	RB3_bit, BitPos(RB3_bit+0)
0x062E	0xEC6000  	INC.B	W0
0x0630	0xFB8000  	ZE	W0, W0
0x0632	0xDD0041  	SL	W0, #1, W0
0x0634	0x408100  	ADD	W1, W0, W2
0x0636	0xEF6000  	CLR.B	W0
0x0638	0xAFC2C2  	BTSC	RA6_bit, BitPos(RA6_bit+0)
0x063A	0xEC6000  	INC.B	W0
0x063C	0x2FFFC1  	MOV	#65532, W1
0x063E	0xFB8000  	ZE	W0, W0
0x0640	0xB98800  	MUL.SS	W1, W0, W0
0x0642	0x410080  	ADD	W2, W0, W1
0x0644	0xEF6000  	CLR.B	W0
0x0646	0xAF62C2  	BTSC	RA3_bit, BitPos(RA3_bit+0)
0x0648	0xEC6000  	INC.B	W0
0x064A	0xFB8000  	ZE	W0, W0
0x064C	0xDD0042  	SL	W0, #2, W0
0x064E	0x408000  	ADD	W1, W0, W0
;sensorFunction.c,15 :: 		erro = soma/10;
0x0650	0x2000A2  	MOV	#10, W2
0x0652	0x090011  	REPEAT	#17
0x0654	0xD80002  	DIV.S	W0, W2
0x0656	0xDE80CF  	ASR	W0, #15, W1
0x0658	0xEB8100  	SETM	W2
0x065A	0x07FF70  	RCALL	__Long2Float
0x065C	0x99BF70  	MOV	W0, [W14+510]
0x065E	0x9A0701  	MOV	W1, [W14+512]
;sensorFunction.c,18 :: 		if (erro == 0.1 ){
0x0660	0x2CCCD2  	MOV	#52429, W2
0x0662	0x23DCC3  	MOV	#15820, W3
0x0664	0x07FE36  	RCALL	__Compare_Le_Fp
0x0666	0xE00000  	CP0	W0
0x0668	0xEF6000  	CLR.B	W0
0x066A	0x3A0001  	BRA NZ	L__mySensorControl8
0x066C	0xEC6000  	INC.B	W0
L__mySensorControl8:
0x066E	0xE24000  	CP0.B	W0
0x0670	0x320005  	BRA Z	L_mySensorControl0
L__mySensorControl9:
;sensorFunction.c,19 :: 		UART2_Write_Text("inimigo logo a frente");
0x0672	0x20803A  	MOV	#lo_addr(?lstr1_sensorFunction), W10
0x0674	0x07FF52  	RCALL	_UART2_Write_Text
;sensorFunction.c,21 :: 		return erro;
0x0676	0xEF2000  	CLR	W0
0x0678	0xEF2002  	CLR	W1
0x067A	0x370060  	BRA	L_end_mySensorControl
;sensorFunction.c,23 :: 		}
L_mySensorControl0:
;sensorFunction.c,25 :: 		if (erro >0.1){
0x067C	0x2CCCD2  	MOV	#52429, W2
0x067E	0x23DCC3  	MOV	#15820, W3
0x0680	0x91B87E  	MOV	[W14+510], W0
0x0682	0x92008E  	MOV	[W14+512], W1
0x0684	0x07FE21  	RCALL	__Compare_Ge_Fp
0x0686	0xE00000  	CP0	W0
0x0688	0xEF6000  	CLR.B	W0
0x068A	0x340001  	BRA LE	L__mySensorControl10
0x068C	0xEC6000  	INC.B	W0
L__mySensorControl10:
0x068E	0xE24000  	CP0.B	W0
0x0690	0x320023  	BRA Z	L_mySensorControl1
L__mySensorControl11:
;sensorFunction.c,27 :: 		erro = erro + 0.6;
0x0692	0x91B97E  	MOV	[W14+510], W2
0x0694	0x92018E  	MOV	[W14+512], W3
0x0696	0x2999A0  	MOV	#39322, W0
0x0698	0x23F191  	MOV	#16153, W1
0x069A	0x07FE20  	RCALL	__AddSub_FP
0x069C	0x99BF70  	MOV	W0, [W14+510]
0x069E	0x9A0701  	MOV	W1, [W14+512]
;sensorFunction.c,28 :: 		IntToStr(erro,buffer);
0x06A0	0x470160  	ADD	W14, #0, W2
0x06A2	0x9A0722  	MOV	W2, [W14+516]
0x06A4	0x07FED6  	RCALL	__Float2Longint
0x06A6	0x9200AE  	MOV	[W14+516], W1
0x06A8	0x780581  	MOV	W1, W11
0x06AA	0x780500  	MOV	W0, W10
0x06AC	0x07FF0E  	RCALL	_IntToStr
;sensorFunction.c,29 :: 		UART2_Write_Text("Inimigo visto na direita");
0x06AE	0x20819A  	MOV	#lo_addr(?lstr2_sensorFunction), W10
0x06B0	0x07FF34  	RCALL	_UART2_Write_Text
;sensorFunction.c,30 :: 		UART2_Write_Text("/n");
0x06B2	0x20800A  	MOV	#lo_addr(?lstr3_sensorFunction), W10
0x06B4	0x07FF32  	RCALL	_UART2_Write_Text
;sensorFunction.c,32 :: 		if (erro > 1){
0x06B6	0x200002  	MOV	#0, W2
0x06B8	0x23F803  	MOV	#16256, W3
0x06BA	0x91B87E  	MOV	[W14+510], W0
0x06BC	0x92008E  	MOV	[W14+512], W1
0x06BE	0x07FE04  	RCALL	__Compare_Ge_Fp
0x06C0	0xE00000  	CP0	W0
0x06C2	0xEF6000  	CLR.B	W0
0x06C4	0x340001  	BRA LE	L__mySensorControl12
0x06C6	0xEC6000  	INC.B	W0
L__mySensorControl12:
0x06C8	0xE24000  	CP0.B	W0
0x06CA	0x320003  	BRA Z	L_mySensorControl2
L__mySensorControl13:
;sensorFunction.c,34 :: 		return erro;
0x06CC	0x200000  	MOV	#0, W0
0x06CE	0x23F801  	MOV	#16256, W1
0x06D0	0x370035  	BRA	L_end_mySensorControl
;sensorFunction.c,35 :: 		}
L_mySensorControl2:
;sensorFunction.c,37 :: 		return erro;
0x06D2	0x91B87E  	MOV	[W14+510], W0
0x06D4	0x92008E  	MOV	[W14+512], W1
0x06D6	0x370032  	BRA	L_end_mySensorControl
;sensorFunction.c,39 :: 		}
L_mySensorControl1:
;sensorFunction.c,41 :: 		if (erro <0.1){
0x06D8	0x2CCCD2  	MOV	#52429, W2
0x06DA	0x23DCC3  	MOV	#15820, W3
0x06DC	0x91B87E  	MOV	[W14+510], W0
0x06DE	0x92008E  	MOV	[W14+512], W1
0x06E0	0x07FDF8  	RCALL	__Compare_Le_Fp
0x06E2	0xE00000  	CP0	W0
0x06E4	0xEF6000  	CLR.B	W0
0x06E6	0x3D0001  	BRA GE	L__mySensorControl14
0x06E8	0xEC6000  	INC.B	W0
L__mySensorControl14:
0x06EA	0xE24000  	CP0.B	W0
0x06EC	0x320024  	BRA Z	L_mySensorControl4
L__mySensorControl15:
;sensorFunction.c,43 :: 		erro = erro - 0.6;
0x06EE	0x91B87E  	MOV	[W14+510], W0
0x06F0	0x92008E  	MOV	[W14+512], W1
0x06F2	0x2999A2  	MOV	#39322, W2
0x06F4	0x23F193  	MOV	#16153, W3
0x06F6	0x07FEA8  	RCALL	__Sub_FP
0x06F8	0x99BF70  	MOV	W0, [W14+510]
0x06FA	0x9A0701  	MOV	W1, [W14+512]
;sensorFunction.c,44 :: 		IntToStr(erro,buffer);
0x06FC	0x470160  	ADD	W14, #0, W2
0x06FE	0x9A0722  	MOV	W2, [W14+516]
0x0700	0x07FEA8  	RCALL	__Float2Longint
0x0702	0x9200AE  	MOV	[W14+516], W1
0x0704	0x780581  	MOV	W1, W11
0x0706	0x780500  	MOV	W0, W10
0x0708	0x07FEE0  	RCALL	_IntToStr
;sensorFunction.c,45 :: 		UART2_Write_Text(buffer);
0x070A	0x470060  	ADD	W14, #0, W0
0x070C	0x780500  	MOV	W0, W10
0x070E	0x07FF05  	RCALL	_UART2_Write_Text
;sensorFunction.c,46 :: 		UART2_Write_Text("inimigo visto na esquerda");
0x0710	0x20835A  	MOV	#lo_addr(?lstr4_sensorFunction), W10
0x0712	0x07FF03  	RCALL	_UART2_Write_Text
;sensorFunction.c,47 :: 		Uart2_Write_Text("/n");
0x0714	0x20832A  	MOV	#lo_addr(?lstr5_sensorFunction), W10
0x0716	0x07FF01  	RCALL	_UART2_Write_Text
;sensorFunction.c,48 :: 		if (erro > -1){
0x0718	0x200002  	MOV	#0, W2
0x071A	0x2BF803  	MOV	#49024, W3
0x071C	0x91B87E  	MOV	[W14+510], W0
0x071E	0x92008E  	MOV	[W14+512], W1
0x0720	0x07FDD3  	RCALL	__Compare_Ge_Fp
0x0722	0xE00000  	CP0	W0
0x0724	0xEF6000  	CLR.B	W0
0x0726	0x340001  	BRA LE	L__mySensorControl16
0x0728	0xEC6000  	INC.B	W0
L__mySensorControl16:
0x072A	0xE24000  	CP0.B	W0
0x072C	0x320003  	BRA Z	L_mySensorControl5
L__mySensorControl17:
;sensorFunction.c,50 :: 		return erro;
0x072E	0x200000  	MOV	#0, W0
0x0730	0x2BF801  	MOV	#49024, W1
0x0732	0x370004  	BRA	L_end_mySensorControl
;sensorFunction.c,51 :: 		}
L_mySensorControl5:
;sensorFunction.c,52 :: 		}
0x0734	0x370003  	BRA	L_mySensorControl6
L_mySensorControl4:
;sensorFunction.c,54 :: 		return erro;
0x0736	0x91B87E  	MOV	[W14+510], W0
0x0738	0x92008E  	MOV	[W14+512], W1
0x073A	0x370000  	BRA	L_end_mySensorControl
L_mySensorControl6:
;sensorFunction.c,56 :: 		}
L_end_mySensorControl:
0x073C	0x7805CF  	POP	W11
0x073E	0x78054F  	POP	W10
0x0740	0xFA8000  	ULNK
0x0742	0x060000  	RETURN
; end of _mySensorControl
_UART2_Write_Text:
0x051A	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,311 :: 		
;__Lib_UART_12_p24_p33.c,312 :: 		
; counter start address is: 2 (W1)
0x051C	0xEF2002  	CLR	W1
;__Lib_UART_12_p24_p33.c,314 :: 		
; data_ start address is: 0 (W0)
0x051E	0x78401A  	MOV.B	[W10], W0
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,315 :: 		
L_UART2_Write_Text27:
; data_ start address is: 0 (W0)
; counter start address is: 2 (W1)
0x0520	0xE10460  	CP.B	W0, #0
0x0522	0x32000A  	BRA Z	L_UART2_Write_Text28
L__UART2_Write_Text108:
;__Lib_UART_12_p24_p33.c,316 :: 		
0x0524	0x781F8A  	PUSH	W10
; data_ end address is: 0 (W0)
0x0526	0xFB8500  	ZE	W0, W10
0x0528	0x07FE6B  	RCALL	_UART2_Write
0x052A	0x78054F  	POP	W10
;__Lib_UART_12_p24_p33.c,317 :: 		
0x052C	0x40C061  	ADD.B	W1, #1, W0
0x052E	0x784080  	MOV.B	W0, W1
;__Lib_UART_12_p24_p33.c,318 :: 		
0x0530	0xFB8000  	ZE	W0, W0
0x0532	0x450000  	ADD	W10, W0, W0
; data_ start address is: 0 (W0)
0x0534	0x784010  	MOV.B	[W0], W0
;__Lib_UART_12_p24_p33.c,319 :: 		
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
0x0536	0x37FFF4  	BRA	L_UART2_Write_Text27
L_UART2_Write_Text28:
;__Lib_UART_12_p24_p33.c,320 :: 		
L_end_UART2_Write_Text:
0x0538	0xFA8000  	ULNK
0x053A	0x060000  	RETURN
; end of _UART2_Write_Text
_UART2_Write:
0x0200	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,305 :: 		
;__Lib_UART_12_p24_p33.c,306 :: 		
L_UART2_Write25:
0x0202	0xAF0233  	BTSC	U2STA, #8
0x0204	0x370001  	BRA	L_UART2_Write26
0x0206	0x37FFFD  	BRA	L_UART2_Write25
L_UART2_Write26:
;__Lib_UART_12_p24_p33.c,307 :: 		
0x0208	0x8811AA  	MOV	W10, U2TXREG
;__Lib_UART_12_p24_p33.c,308 :: 		
L_end_UART2_Write:
0x020A	0xFA8000  	ULNK
0x020C	0x060000  	RETURN
; end of _UART2_Write
_IntToStr:
0x04CA	0xFA0000  	LNK	#0
;__Lib_Conversions.c,146 :: 		
;__Lib_Conversions.c,152 :: 		
0x04CC	0x781F8A  	PUSH	W10
; negative start address is: 8 (W4)
0x04CE	0xEF2008  	CLR	W4
;__Lib_Conversions.c,153 :: 		
; inword start address is: 0 (W0)
0x04D0	0x78000A  	MOV	W10, W0
;__Lib_Conversions.c,154 :: 		
0x04D2	0xE15060  	CP	W10, #0
0x04D4	0x3D0003  	BRA GE	L__IntToStr99
L__IntToStr133:
; inword end address is: 0 (W0)
;__Lib_Conversions.c,155 :: 		
0x04D6	0x200014  	MOV	#1, W4
;__Lib_Conversions.c,156 :: 		
; inword start address is: 0 (W0)
0x04D8	0x150060  	SUBR	W10, #0, W0
; inword end address is: 0 (W0)
; negative end address is: 8 (W4)
;__Lib_Conversions.c,157 :: 		
0x04DA	0x370000  	BRA	L_IntToStr23
L__IntToStr99:
;__Lib_Conversions.c,154 :: 		
;__Lib_Conversions.c,157 :: 		
L_IntToStr23:
;__Lib_Conversions.c,158 :: 		
; inword start address is: 0 (W0)
; negative start address is: 8 (W4)
0x04DC	0x780500  	MOV	W0, W10
; inword end address is: 0 (W0)
0x04DE	0x07FE97  	RCALL	_WordToStr
;__Lib_Conversions.c,160 :: 		
; i start address is: 6 (W3)
0x04E0	0x200063  	MOV	#6, W3
; negative end address is: 8 (W4)
; i end address is: 6 (W3)
0x04E2	0x780104  	MOV	W4, W2
;__Lib_Conversions.c,161 :: 		
L_IntToStr24:
; i start address is: 6 (W3)
; negative start address is: 4 (W2)
0x04E4	0xE11860  	CP	W3, #0
0x04E6	0x360006  	BRA LEU	L_IntToStr25
L__IntToStr134:
;__Lib_Conversions.c,162 :: 		
0x04E8	0x458083  	ADD	W11, W3, W1
0x04EA	0x518061  	SUB	W3, #1, W0
0x04EC	0x458000  	ADD	W11, W0, W0
0x04EE	0x784890  	MOV.B	[W0], [W1]
;__Lib_Conversions.c,163 :: 		
0x04F0	0xED2006  	DEC	W3
;__Lib_Conversions.c,164 :: 		
; i end address is: 6 (W3)
0x04F2	0x37FFF8  	BRA	L_IntToStr24
L_IntToStr25:
;__Lib_Conversions.c,165 :: 		
0x04F4	0xB3C200  	MOV.B	#32, W0
0x04F6	0x784D80  	MOV.B	W0, [W11]
;__Lib_Conversions.c,166 :: 		
0x04F8	0xE20004  	CP0	W2
0x04FA	0x32000C  	BRA Z	L_IntToStr26
L__IntToStr135:
; negative end address is: 4 (W2)
;__Lib_Conversions.c,167 :: 		
; i start address is: 4 (W2)
0x04FC	0xEF2004  	CLR	W2
; i end address is: 4 (W2)
;__Lib_Conversions.c,168 :: 		
L_IntToStr27:
; i start address is: 4 (W2)
0x04FE	0x458002  	ADD	W11, W2, W0
0x0500	0x784090  	MOV.B	[W0], W1
0x0502	0xB3C200  	MOV.B	#32, W0
0x0504	0xE10C00  	CP.B	W1, W0
0x0506	0x3A0002  	BRA NZ	L_IntToStr28
L__IntToStr136:
; i start address is: 4 (W2)
0x0508	0xEC2004  	INC	W2
; i end address is: 4 (W2)
0x050A	0x37FFF9  	BRA	L_IntToStr27
L_IntToStr28:
;__Lib_Conversions.c,169 :: 		
0x050C	0x510061  	SUB	W2, #1, W0
; i end address is: 4 (W2)
;__Lib_Conversions.c,170 :: 		
0x050E	0x458080  	ADD	W11, W0, W1
0x0510	0xB3C2D0  	MOV.B	#45, W0
0x0512	0x784880  	MOV.B	W0, [W1]
L_IntToStr26:
;__Lib_Conversions.c,171 :: 		
L_end_IntToStr:
0x0514	0x78054F  	POP	W10
0x0516	0xFA8000  	ULNK
0x0518	0x060000  	RETURN
; end of _IntToStr
_WordToStr:
0x020E	0xFA0002  	LNK	#2
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
; len start address is: 4 (W2)
0x0210	0xEF2004  	CLR	W2
; len end address is: 4 (W2)
L_WordToStr6:
; len start address is: 4 (W2)
0x0212	0xE11465  	CP.B	W2, #5
0x0214	0x310006  	BRA GEU	L_WordToStr7
L__WordToStr122:
;__Lib_Conversions.c,90 :: 		
0x0216	0xFB8002  	ZE	W2, W0
0x0218	0x458080  	ADD	W11, W0, W1
0x021A	0xB3C200  	MOV.B	#32, W0
0x021C	0x784880  	MOV.B	W0, [W1]
;__Lib_Conversions.c,89 :: 		
0x021E	0xEC6004  	INC.B	W2
;__Lib_Conversions.c,90 :: 		
0x0220	0x37FFF8  	BRA	L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x0222	0xFB8002  	ZE	W2, W0
0x0224	0x458080  	ADD	W11, W0, W1
0x0226	0xEF2000  	CLR	W0
0x0228	0x784880  	MOV.B	W0, [W1]
; len start address is: 6 (W3)
0x022A	0x5141E1  	SUB.B	W2, #1, W3
; len end address is: 4 (W2)
; len end address is: 6 (W3)
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
; len start address is: 6 (W3)
0x022C	0xFB8003  	ZE	W3, W0
0x022E	0x458000  	ADD	W11, W0, W0
0x0230	0x980700  	MOV	W0, [W14+0]
0x0232	0x2000A2  	MOV	#10, W2
0x0234	0x090011  	REPEAT	#17
0x0236	0xD88502  	DIV.U	W10, W2
0x0238	0x200300  	MOV	#48, W0
0x023A	0x408080  	ADD	W1, W0, W1
0x023C	0x90000E  	MOV	[W14+0], W0
0x023E	0x784801  	MOV.B	W1, [W0]
;__Lib_Conversions.c,95 :: 		
0x0240	0x2000A2  	MOV	#10, W2
0x0242	0x090011  	REPEAT	#17
0x0244	0xD88502  	DIV.U	W10, W2
0x0246	0x780500  	MOV	W0, W10
;__Lib_Conversions.c,96 :: 		
0x0248	0xE10060  	CP	W0, #0
0x024A	0x3A0001  	BRA NZ	L_WordToStr11
L__WordToStr123:
; len end address is: 6 (W3)
;__Lib_Conversions.c,97 :: 		
0x024C	0x370002  	BRA	L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
; len start address is: 6 (W3)
0x024E	0xED6006  	DEC.B	W3
;__Lib_Conversions.c,99 :: 		
; len end address is: 6 (W3)
0x0250	0x37FFED  	BRA	L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x0252	0xFA8000  	ULNK
0x0254	0x060000  	RETURN
; end of _WordToStr
__Long2Float:
0x053C	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x053E	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x0540	0x0000000405EE  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x0544	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x0546	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x0548	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x054A	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x054C	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x054E	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x0550	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x0552	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x0554	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x0556	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x0558	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x055A	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x055C	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x055E	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x0560	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x0562	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x0564	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x0566	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x0568	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x056A	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x056C	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x056E	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x0570	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x0572	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x0574	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x0576	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x0578	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x057A	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x057C	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x057E	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x0580	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x0582	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x0584	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x0586	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x0588	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x058A	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x058C	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x058E	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x0590	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x0592	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x0594	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x0596	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x0598	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x059A	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x059C	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x059E	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x05A0	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x05A2	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x05A4	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x05A6	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x05A8	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x05AA	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x05AC	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x05AE	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x05B0	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x05B2	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x05B4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x05B6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x05B8	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x05BA	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x05BC	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x05BE	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x05C0	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x05C2	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x05C4	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x05C6	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x05C8	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x05CA	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x05CC	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x05CE	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x05D0	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x05D2	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x05D4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x05D6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x05D8	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x05DA	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x05DC	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x05DE	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x05E0	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x05E2	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x05E4	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x05E6	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x05E8	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x05EA	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x05EC	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x05EE	0xFA8000  	ULNK
0x05F0	0x060000  	RETURN
; end of __Long2Float
__Compare_Le_Fp:
0x02D2	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1348 :: 		
;__Lib_MathDouble.c,1349 :: 		
0x02D4	0x200014  	MOV	#1, W4
;__Lib_MathDouble.c,1350 :: 		
0x02D6	0x07FFBF  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1351 :: 		
L_end__Compare_Le_Fp:
0x02D8	0xFA8000  	ULNK
0x02DA	0x060000  	RETURN
; end of __Compare_Le_Fp
__Compare_Fp:
0x0256	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1272 :: 		
;__Lib_MathDouble.c,1274 :: 		
0x0258	0x070002  	RCALL	CompareFp__fcompare
;__Lib_MathDouble.c,1275 :: 		
0x025A	0x0000000402C4  	GOTO	the_end__Compare_Fp
;__Lib_MathDouble.c,1277 :: 		
CompareFp__fcompare:
;__Lib_MathDouble.c,1278 :: 		
0x025E	0x781F84  	MOV	W4, [W15++]
;__Lib_MathDouble.c,1279 :: 		
0x0260	0x070014  	RCALL	CompareFp__funpack2
;__Lib_MathDouble.c,1280 :: 		
0x0262	0x78004F  	MOV	[--W15], W0
;__Lib_MathDouble.c,1281 :: 		
0x0264	0x330011  	BRA N	CompareFp_exit
;__Lib_MathDouble.c,1282 :: 		
0x0266	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1283 :: 		
0x0268	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,1284 :: 		
0x026A	0x3B0006  	BRA NN	CompareFp_comparemag
;__Lib_MathDouble.c,1285 :: 		
0x026C	0x650504  	AND	W10, W4, W10
;__Lib_MathDouble.c,1286 :: 		
0x026E	0xA7000A  	BTSC	W10, #0
;__Lib_MathDouble.c,1287 :: 		
0x0270	0x370008  	BRA	CompareFp_returnEqual
;__Lib_MathDouble.c,1288 :: 		
0x0272	0xA6F009  	BTSS	W9, #15
;__Lib_MathDouble.c,1289 :: 		
0x0274	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1290 :: 		
0x0276	0x370008  	BRA	CompareFp_exit
;__Lib_MathDouble.c,1291 :: 		
CompareFp_comparemag:
;__Lib_MathDouble.c,1292 :: 		
0x0278	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,1293 :: 		
0x027A	0x5C8F83  	SUBB	W9, W3, [W15]
;__Lib_MathDouble.c,1294 :: 		
0x027C	0x390003  	BRA LTU	CompareFp_adjust
;__Lib_MathDouble.c,1295 :: 		
0x027E	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1296 :: 		
0x0280	0x3E0001  	BRA GTU	CompareFp_adjust
;__Lib_MathDouble.c,1297 :: 		
CompareFp_returnEqual:
;__Lib_MathDouble.c,1298 :: 		
0x0282	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1299 :: 		
CompareFp_adjust:
;__Lib_MathDouble.c,1300 :: 		
0x0284	0xA7F009  	BTSC	W9, #15
;__Lib_MathDouble.c,1301 :: 		
0x0286	0xEA0000  	NEG	W0, W0
;__Lib_MathDouble.c,1302 :: 		
CompareFp_exit:
;__Lib_MathDouble.c,1303 :: 		
0x0288	0x060000  	RETURN
;__Lib_MathDouble.c,1304 :: 		
CompareFp__funpack2:
;__Lib_MathDouble.c,1305 :: 		
0x028A	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1306 :: 		
0x028C	0x070006  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1307 :: 		
0x028E	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1308 :: 		
0x0290	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1309 :: 		
0x0292	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1310 :: 		
0x0294	0x070002  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1311 :: 		
0x0296	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1312 :: 		
0x0298	0x060000  	RETURN
;__Lib_MathDouble.c,1313 :: 		
CompareFp__funpack:
;__Lib_MathDouble.c,1314 :: 		
0x029A	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1315 :: 		
0x029C	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1316 :: 		
0x029E	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1317 :: 		
0x02A0	0x320008  	BRA Z	CompareFp_zeroorsub
;__Lib_MathDouble.c,1318 :: 		
0x02A2	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1319 :: 		
0x02A4	0x320002  	BRA Z	CompareFp_nanorinf
;__Lib_MathDouble.c,1320 :: 		
CompareFp_finitereturn:
;__Lib_MathDouble.c,1321 :: 		
0x02A6	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1322 :: 		
0x02A8	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1323 :: 		
CompareFp_nanorinf:
;__Lib_MathDouble.c,1324 :: 		
0x02AA	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1325 :: 		
0x02AC	0x320001  	BRA Z	CompareFp_infinite
;__Lib_MathDouble.c,1326 :: 		
0x02AE	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1327 :: 		
CompareFp_infinite:
;__Lib_MathDouble.c,1328 :: 		
0x02B0	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1329 :: 		
CompareFp_zeroorsub:
;__Lib_MathDouble.c,1330 :: 		
0x02B2	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1331 :: 		
0x02B4	0x3A0002  	BRA NZ	CompareFp_subnormal
;__Lib_MathDouble.c,1332 :: 		
0x02B6	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1333 :: 		
CompareFp_normalize:
;__Lib_MathDouble.c,1334 :: 		
0x02B8	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1335 :: 		
CompareFp_subnormal:
;__Lib_MathDouble.c,1336 :: 		
0x02BA	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1337 :: 		
0x02BC	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1338 :: 		
0x02BE	0x3BFFFC  	BRA NN	CompareFp_normalize
;__Lib_MathDouble.c,1339 :: 		
0x02C0	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1340 :: 		
0x02C2	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1343 :: 		
the_end__Compare_Fp:
;__Lib_MathDouble.c,1345 :: 		
L_end__Compare_Fp:
0x02C4	0xFA8000  	ULNK
0x02C6	0x060000  	RETURN
; end of __Compare_Fp
__Compare_Ge_Fp:
0x02C8	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1354 :: 		
;__Lib_MathDouble.c,1355 :: 		
0x02CA	0x2FFFF4  	MOV	#65535, W4
;__Lib_MathDouble.c,1356 :: 		
0x02CC	0x07FFC4  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1357 :: 		
L_end__Compare_Ge_Fp:
0x02CE	0xFA8000  	ULNK
0x02D0	0x060000  	RETURN
; end of __Compare_Ge_Fp
__AddSub_FP:
0x02DC	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,582 :: 		
;__Lib_MathDouble.c,584 :: 		
0x02DE	0x070002  	RCALL	AddSubFP__addsf3
;__Lib_MathDouble.c,585 :: 		
0x02E0	0x000000040444  	GOTO	the_end__AddSub_FP
;__Lib_MathDouble.c,588 :: 		
AddSubFP__addsf3:
;__Lib_MathDouble.c,589 :: 		
0x02E4	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,590 :: 		
0x02E6	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,591 :: 		
0x02E8	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,592 :: 		
0x02EA	0x070059  	RCALL	AddSubFP__funpack2
;__Lib_MathDouble.c,593 :: 		
0x02EC	0x330060  	BRA N	AddSubFP__fPropagateNaN
;__Lib_MathDouble.c,594 :: 		
0x02EE	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,595 :: 		
0x02F0	0x32004F  	BRA Z	AddSubFP_aisinfinite
;__Lib_MathDouble.c,596 :: 		
AddSubFP_checkspecialb:
;__Lib_MathDouble.c,597 :: 		
0x02F2	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,598 :: 		
0x02F4	0x320052  	BRA Z	AddSubFP_return2_3
;__Lib_MathDouble.c,599 :: 		
0x02F6	0x6C8203  	XOR	W9, W3, W4
;__Lib_MathDouble.c,600 :: 		
0x02F8	0x3B0007  	BRA NN	AddSubFP_getsign
;__Lib_MathDouble.c,601 :: 		
0x02FA	0xD00509  	SL	W9, W10
;__Lib_MathDouble.c,602 :: 		
0x02FC	0xD00603  	SL	W3, W12
;__Lib_MathDouble.c,603 :: 		
0x02FE	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,604 :: 		
0x0300	0x5D060C  	SUBB	W10, W12, W12
;__Lib_MathDouble.c,605 :: 		
0x0302	0x390002  	BRA NC	AddSubFP_getsign
;__Lib_MathDouble.c,606 :: 		
0x0304	0x320002  	BRA Z	AddSubFP_gotsign
;__Lib_MathDouble.c,607 :: 		
0x0306	0x880039  	MOV	W9, W3
;__Lib_MathDouble.c,608 :: 		
AddSubFP_getsign:
;__Lib_MathDouble.c,609 :: 		
0x0308	0x8800C3  	MOV	W3, W12
;__Lib_MathDouble.c,610 :: 		
AddSubFP_gotsign:
;__Lib_MathDouble.c,611 :: 		
0x030A	0x558285  	SUB	W11, W5, W5
;__Lib_MathDouble.c,612 :: 		
0x030C	0x3D0004  	BRA GE	AddSubFP_expcanonical
;__Lib_MathDouble.c,613 :: 		
0x030E	0xFD0300  	EXCH	W0, W6
;__Lib_MathDouble.c,614 :: 		
0x0310	0xFD0381  	EXCH	W1, W7
;__Lib_MathDouble.c,615 :: 		
0x0312	0xEA0285  	NEG	W5, W5
;__Lib_MathDouble.c,616 :: 		
0x0314	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,617 :: 		
AddSubFP_expcanonical:
;__Lib_MathDouble.c,618 :: 		
0x0316	0x720F84  	IOR	W4, W4, [W15]
;__Lib_MathDouble.c,619 :: 		
0x0318	0x3B0002  	BRA NN	AddSubFP_nonegate
;__Lib_MathDouble.c,620 :: 		
0x031A	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,621 :: 		
0x031C	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,622 :: 		
AddSubFP_nonegate:
;__Lib_MathDouble.c,623 :: 		
0x031E	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,624 :: 		
0x0320	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,625 :: 		
0x0322	0xE1287A  	CP	W5, #26
;__Lib_MathDouble.c,626 :: 		
0x0324	0x39000A  	BRA NC	AddSubFP_aligniter
;__Lib_MathDouble.c,627 :: 		
0x0326	0x880006  	MOV	W6, W0
;__Lib_MathDouble.c,628 :: 		
0x0328	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,629 :: 		
0x032A	0xB207F7  	AND	#127, W7
;__Lib_MathDouble.c,630 :: 		
0x032C	0x758087  	IOR	W11, W7, W1
;__Lib_MathDouble.c,631 :: 		
0x032E	0x37002D  	BRA	AddSubFP_signoff
;__Lib_MathDouble.c,632 :: 		
AddSubFP_align:
;__Lib_MathDouble.c,633 :: 		
0x0330	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,634 :: 		
0x0332	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,635 :: 		
0x0334	0x600561  	AND	W0, #1, W10
;__Lib_MathDouble.c,636 :: 		
0x0336	0xD18081  	ASR	W1, W1
;__Lib_MathDouble.c,637 :: 		
0x0338	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,638 :: 		
AddSubFP_aligniter:
;__Lib_MathDouble.c,639 :: 		
0x033A	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,640 :: 		
0x033C	0x3BFFF9  	BRA NN	AddSubFP_align
;__Lib_MathDouble.c,641 :: 		
AddSubFP_aligned:
;__Lib_MathDouble.c,642 :: 		
0x033E	0x400406  	ADD	W0, W6, W8
;__Lib_MathDouble.c,643 :: 		
0x0340	0x488487  	ADDC	W1, W7, W9
;__Lib_MathDouble.c,644 :: 		
0x0342	0x3B0002  	BRA NN	AddSubFP_normalizesum
;__Lib_MathDouble.c,645 :: 		
0x0344	0x140460  	SUBR	W8, #0, W8
;__Lib_MathDouble.c,646 :: 		
0x0346	0x1C84E0  	SUBBR	W9, #0, W9
;__Lib_MathDouble.c,647 :: 		
AddSubFP_normalizesum:
;__Lib_MathDouble.c,648 :: 		
0x0348	0xA38809  	BTST.Z	W9, #8
;__Lib_MathDouble.c,649 :: 		
0x034A	0x320007  	BRA Z	AddSubFP_checknormal
;__Lib_MathDouble.c,650 :: 		
0x034C	0x71818A  	IOR	W3, W10, W3
;__Lib_MathDouble.c,651 :: 		
0x034E	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,652 :: 		
0x0350	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,653 :: 		
0x0352	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,654 :: 		
0x0354	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,655 :: 		
0x0356	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,656 :: 		
0x0358	0x370017  	BRA	AddSubFP_round
;__Lib_MathDouble.c,657 :: 		
AddSubFP_checknormal:
;__Lib_MathDouble.c,658 :: 		
0x035A	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,659 :: 		
0x035C	0x3A0013  	BRA NZ	AddSubFP_discardguard
;__Lib_MathDouble.c,660 :: 		
AddSubFP_underflow:
;__Lib_MathDouble.c,661 :: 		
0x035E	0xE20016  	CP0	W11
;__Lib_MathDouble.c,662 :: 		
0x0360	0x340013  	BRA LE	AddSubFP_round
;__Lib_MathDouble.c,663 :: 		
0x0362	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,664 :: 		
0x0364	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,665 :: 		
0x0366	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,666 :: 		
0x0368	0x74440A  	IOR.B	W8, W10, W8
;__Lib_MathDouble.c,667 :: 		
0x036A	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,668 :: 		
0x036C	0x3A000D  	BRA NZ	AddSubFP_round
;__Lib_MathDouble.c,669 :: 		
AddSubFP_normalizeloop:
;__Lib_MathDouble.c,670 :: 		
0x036E	0xE20016  	CP0	W11
;__Lib_MathDouble.c,671 :: 		
0x0370	0x340007  	BRA LE	AddSubFP_normalizeexit
;__Lib_MathDouble.c,672 :: 		
0x0372	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,673 :: 		
0x0374	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,674 :: 		
0x0376	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,675 :: 		
0x0378	0x3A0001  	BRA NZ	AddSubFP_normalizetest
;__Lib_MathDouble.c,676 :: 		
0x037A	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,677 :: 		
AddSubFP_normalizetest:
;__Lib_MathDouble.c,678 :: 		
0x037C	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,679 :: 		
0x037E	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
;__Lib_MathDouble.c,680 :: 		
AddSubFP_normalizeexit:
;__Lib_MathDouble.c,681 :: 		
0x0380	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,682 :: 		
0x0382	0x370002  	BRA	AddSubFP_round
;__Lib_MathDouble.c,683 :: 		
AddSubFP_discardguard:
;__Lib_MathDouble.c,684 :: 		
0x0384	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,685 :: 		
0x0386	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,686 :: 		
AddSubFP_round:
;__Lib_MathDouble.c,687 :: 		
0x0388	0x070022  	RCALL	AddSubFP__fpack
;__Lib_MathDouble.c,688 :: 		
AddSubFP_signoff:
;__Lib_MathDouble.c,689 :: 		
0x038A	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,690 :: 		
0x038C	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,691 :: 		
0x038E	0x370018  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,692 :: 		
AddSubFP_aisinfinite:
;__Lib_MathDouble.c,693 :: 		
0x0390	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,694 :: 		
0x0392	0x3A0002  	BRA NZ	AddSubFP_return8_3
;__Lib_MathDouble.c,695 :: 		
0x0394	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,696 :: 		
0x0396	0x330018  	BRA N	AddSubFP__fbopReturnNaN
;__Lib_MathDouble.c,697 :: 		
AddSubFP_return8_3:
;__Lib_MathDouble.c,698 :: 		
0x0398	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,699 :: 		
AddSubFP_return2_3:
;__Lib_MathDouble.c,700 :: 		
0x039A	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,701 :: 		
0x039C	0x370011  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,702 :: 		
AddSubFP__funpack2:
;__Lib_MathDouble.c,703 :: 		
0x039E	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,704 :: 		
0x03A0	0x07003C  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,705 :: 		
0x03A2	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,706 :: 		
0x03A4	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,707 :: 		
0x03A6	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,708 :: 		
0x03A8	0x070038  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,709 :: 		
0x03AA	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,710 :: 		
0x03AC	0x060000  	RETURN
;__Lib_MathDouble.c,711 :: 		
AddSubFP__fPropagateNaN:
;__Lib_MathDouble.c,712 :: 		
0x03AE	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,713 :: 		
0x03B0	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,714 :: 		
0x03B2	0x360005  	BRA LEU	AddSubFP_return0_1
;__Lib_MathDouble.c,715 :: 		
0x03B4	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,716 :: 		
0x03B6	0x360002  	BRA LEU	AddSubFP_return8_1
;__Lib_MathDouble.c,717 :: 		
0x03B8	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,718 :: 		
0x03BA	0x3A0001  	BRA NZ	AddSubFP_return0_1
;__Lib_MathDouble.c,719 :: 		
AddSubFP_return8_1:
;__Lib_MathDouble.c,720 :: 		
0x03BC	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,721 :: 		
AddSubFP_return0_1:
;__Lib_MathDouble.c,722 :: 		
0x03BE	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,723 :: 		
AddSubFP__fbopExit:
;__Lib_MathDouble.c,724 :: 		
0x03C0	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,725 :: 		
0x03C2	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,726 :: 		
0x03C4	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,727 :: 		
0x03C6	0x060000  	RETURN
;__Lib_MathDouble.c,728 :: 		
AddSubFP__fbopReturnNaN:
;__Lib_MathDouble.c,729 :: 		
0x03C8	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,730 :: 		
0x03CA	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,731 :: 		
0x03CC	0x37FFF9  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,732 :: 		
AddSubFP__fpack:
;__Lib_MathDouble.c,733 :: 		
0x03CE	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,734 :: 		
0x03D0	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,735 :: 		
0x03D2	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
;__Lib_MathDouble.c,736 :: 		
0x03D4	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,737 :: 		
0x03D6	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,738 :: 		
0x03D8	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,739 :: 		
0x03DA	0x34001D  	BRA LE	AddSubFP_zerosig
;__Lib_MathDouble.c,740 :: 		
AddSubFP_subnormal_1:
;__Lib_MathDouble.c,741 :: 		
0x03DC	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,742 :: 		
0x03DE	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,743 :: 		
0x03E0	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,744 :: 		
0x03E2	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,745 :: 		
0x03E4	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,746 :: 		
0x03E6	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
;__Lib_MathDouble.c,747 :: 		
0x03E8	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,748 :: 		
AddSubFP_notsubnormal_1:
;__Lib_MathDouble.c,749 :: 		
0x03EA	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,750 :: 		
0x03EC	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,751 :: 		
0x03EE	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,752 :: 		
0x03F0	0x320009  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,753 :: 		
0x03F2	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,754 :: 		
0x03F4	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,755 :: 		
0x03F6	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,756 :: 		
0x03F8	0x320005  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,757 :: 		
0x03FA	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,758 :: 		
0x03FC	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,759 :: 		
0x03FE	0x3A0002  	BRA NZ	AddSubFP_packupandgo
;__Lib_MathDouble.c,760 :: 		
0x0400	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,761 :: 		
0x0402	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,762 :: 		
AddSubFP_packupandgo:
;__Lib_MathDouble.c,763 :: 		
0x0404	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,764 :: 		
0x0406	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,765 :: 		
0x0408	0x3D0005  	BRA GE	AddSubFP_overflow
;__Lib_MathDouble.c,766 :: 		
0x040A	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,767 :: 		
0x040C	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,768 :: 		
0x040E	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,769 :: 		
0x0410	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,770 :: 		
0x0412	0x060000  	RETURN
;__Lib_MathDouble.c,771 :: 		
AddSubFP_overflow:
;__Lib_MathDouble.c,772 :: 		
0x0414	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,773 :: 		
AddSubFP_zerosig:
;__Lib_MathDouble.c,774 :: 		
0x0416	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,775 :: 		
0x0418	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,776 :: 		
AddSubFP__funpack:
;__Lib_MathDouble.c,777 :: 		
0x041A	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,778 :: 		
0x041C	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,779 :: 		
0x041E	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,780 :: 		
0x0420	0x320008  	BRA Z	AddSubFP_zeroorsub
;__Lib_MathDouble.c,781 :: 		
0x0422	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,782 :: 		
0x0424	0x320002  	BRA Z	AddSubFP_nanorinf
;__Lib_MathDouble.c,783 :: 		
AddSubFP_finitereturn:
;__Lib_MathDouble.c,784 :: 		
0x0426	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,785 :: 		
0x0428	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,786 :: 		
AddSubFP_nanorinf:
;__Lib_MathDouble.c,787 :: 		
0x042A	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,788 :: 		
0x042C	0x320001  	BRA Z	AddSubFP_infinite
;__Lib_MathDouble.c,789 :: 		
0x042E	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,790 :: 		
AddSubFP_infinite:
;__Lib_MathDouble.c,791 :: 		
0x0430	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,792 :: 		
AddSubFP_zeroorsub:
;__Lib_MathDouble.c,793 :: 		
0x0432	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,794 :: 		
0x0434	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
;__Lib_MathDouble.c,795 :: 		
0x0436	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,796 :: 		
AddSubFP_normalize:
;__Lib_MathDouble.c,797 :: 		
0x0438	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,798 :: 		
AddSubFP_subnormal_2:
;__Lib_MathDouble.c,799 :: 		
0x043A	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,800 :: 		
0x043C	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,801 :: 		
0x043E	0x3BFFFC  	BRA NN	AddSubFP_normalize
;__Lib_MathDouble.c,802 :: 		
0x0440	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,803 :: 		
0x0442	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,806 :: 		
the_end__AddSub_FP:
;__Lib_MathDouble.c,809 :: 		
L_end__AddSub_FP:
0x0444	0xFA8000  	ULNK
0x0446	0x060000  	RETURN
; end of __AddSub_FP
__Float2Longint:
0x0452	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x0454	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x0456	0x0000000404C6  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x045A	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,488 :: 		
0x045C	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x045E	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,490 :: 		
0x0460	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,491 :: 		
0x0462	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,492 :: 		
0x0464	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x0466	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x0468	0xE12868  	CP	W5, #8
;__Lib_MathDouble.c,495 :: 		
0x046A	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x046C	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,497 :: 		
0x046E	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,498 :: 		
0x0470	0xE20006  	CP0	W3
;__Lib_MathDouble.c,499 :: 		
0x0472	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x0474	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,501 :: 		
0x0476	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x0478	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,504 :: 		
0x047A	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,505 :: 		
0x047C	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,506 :: 		
0x047E	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x0480	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x0482	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,510 :: 		
0x0484	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x0486	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,512 :: 		
0x0488	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x048A	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,515 :: 		
0x048C	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,516 :: 		
0x048E	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,517 :: 		
0x0490	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x0492	0xE20006  	CP0	W3
;__Lib_MathDouble.c,520 :: 		
0x0494	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x0496	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,522 :: 		
0x0498	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x049A	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x049C	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,527 :: 		
0x049E	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,528 :: 		
0x04A0	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,529 :: 		
0x04A2	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x04A4	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,531 :: 		
0x04A6	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x04A8	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,534 :: 		
0x04AA	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x04AC	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,537 :: 		
0x04AE	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x04B0	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x04B2	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x04B4	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,543 :: 		
0x04B6	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x04B8	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x04BA	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x04BC	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,549 :: 		
0x04BE	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,550 :: 		
0x04C0	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x04C2	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,552 :: 		
0x04C4	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x04C6	0xFA8000  	ULNK
0x04C8	0x060000  	RETURN
; end of __Float2Longint
__Sub_FP:
0x0448	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,830 :: 		
;__Lib_MathDouble.c,831 :: 		
0x044A	0xAAE007  	BTG	W3, #15
;__Lib_MathDouble.c,832 :: 		
0x044C	0x07FF47  	RCALL	__AddSub_FP
;__Lib_MathDouble.c,833 :: 		
L_end__Sub_FP:
0x044E	0xFA8000  	ULNK
0x0450	0x060000  	RETURN
; end of __Sub_FP
0x07CC	0x208001  	MOV	#lo_addr(?lstr3_sensorFunction), W1
0x07CE	0x2877C0  	MOV	#34684, W0
0x07D0	0x090026  	REPEAT	#38
0x07D2	0x7818B0  	MOV	[W0++], [W1++]
0x07D4	0x7858B0  	MOV.B	[W0++], [W1++]
0x07D6	0x060000  	RETURN
;,0 :: _initBlock_0 [50]
; Containing: ?ICS?lstr3_sensorFunction [3]
;             ?ICS?lstr1_sensorFunction [22]
;             ?ICS?lstr2_sensorFunction [25]
0x077C	0x6E2F ;_initBlock_0+0 : ?ICS?lstr3_sensorFunction at 0x077C
0x077E	0x6900 ;_initBlock_0+2 : ?ICS?lstr1_sensorFunction at 0x077F
0x0780	0x696E ;_initBlock_0+4
0x0782	0x696D ;_initBlock_0+6
0x0784	0x6F67 ;_initBlock_0+8
0x0786	0x6C20 ;_initBlock_0+10
0x0788	0x676F ;_initBlock_0+12
0x078A	0x206F ;_initBlock_0+14
0x078C	0x2061 ;_initBlock_0+16
0x078E	0x7266 ;_initBlock_0+18
0x0790	0x6E65 ;_initBlock_0+20
0x0792	0x6574 ;_initBlock_0+22
0x0794	0x4900 ;_initBlock_0+24 : ?ICS?lstr2_sensorFunction at 0x0795
0x0796	0x696E ;_initBlock_0+26
0x0798	0x696D ;_initBlock_0+28
0x079A	0x6F67 ;_initBlock_0+30
0x079C	0x7620 ;_initBlock_0+32
0x079E	0x7369 ;_initBlock_0+34
0x07A0	0x6F74 ;_initBlock_0+36
0x07A2	0x6E20 ;_initBlock_0+38
0x07A4	0x2061 ;_initBlock_0+40
0x07A6	0x6964 ;_initBlock_0+42
0x07A8	0x6572 ;_initBlock_0+44
0x07AA	0x7469 ;_initBlock_0+46
0x07AC	0x0061 ;_initBlock_0+48
; end of _initBlock_0
;,0 :: _initBlock_1 [29]
; Containing: ?ICS?lstr5_sensorFunction [3]
;             ?ICS?lstr4_sensorFunction [26]
0x07AE	0x6E2F ;_initBlock_1+0 : ?ICS?lstr5_sensorFunction at 0x07AE
0x07B0	0x6900 ;_initBlock_1+2 : ?ICS?lstr4_sensorFunction at 0x07B1
0x07B2	0x696E ;_initBlock_1+4
0x07B4	0x696D ;_initBlock_1+6
0x07B6	0x6F67 ;_initBlock_1+8
0x07B8	0x7620 ;_initBlock_1+10
0x07BA	0x7369 ;_initBlock_1+12
0x07BC	0x6F74 ;_initBlock_1+14
0x07BE	0x6E20 ;_initBlock_1+16
0x07C0	0x2061 ;_initBlock_1+18
0x07C2	0x7365 ;_initBlock_1+20
0x07C4	0x7571 ;_initBlock_1+22
0x07C6	0x7265 ;_initBlock_1+24
0x07C8	0x6164 ;_initBlock_1+26
0x07CA	0x00 ;_initBlock_1+28
; end of _initBlock_1
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200      [14]    _UART2_Write
0x020E      [72]    _WordToStr
0x0256     [114]    __Compare_Fp
0x02C8      [10]    __Compare_Ge_Fp
0x02D2      [10]    __Compare_Le_Fp
0x02DC     [364]    __AddSub_FP
0x0448      [10]    __Sub_FP
0x0452     [120]    __Float2Longint
0x04CA      [80]    _IntToStr
0x051A      [34]    _UART2_Write_Text
0x053C     [182]    __Long2Float
0x05F2     [338]    _mySensorControl
0x0744      [30]    _init_robot
0x0762      [26]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x02C8       [0]    TRISB5_bit
0x02C8       [0]    TRISB4_bit
0x02C0       [0]    TRISA7_bit
0x02C8       [0]    TRISB6_bit
0x0232       [2]    U2STA
0x0234       [2]    U2TXREG
0x02C0       [0]    TRISA6_bit
0x02C8       [0]    TRISB3_bit
0x02C0       [0]    TRISA3_bit
0x02CA       [0]    RB4_bit
0x02CA       [0]    RB3_bit
0x02CA       [0]    RB5_bit
0x02CA       [0]    RB6_bit
0x02C2       [0]    RA7_bit
0x02C2       [0]    RA6_bit
0x02C2       [0]    RA3_bit
0x0800       [3]    ?lstr3_sensorFunction
0x0803      [22]    ?lstr1_sensorFunction
0x0819      [25]    ?lstr2_sensorFunction
0x0832       [3]    ?lstr5_sensorFunction
0x0835      [26]    ?lstr4_sensorFunction
0x0014       [2]    FARG_UART2_Write__data
0x0014       [2]    FARG_WordToStr_input
0x0016       [2]    FARG_WordToStr_output
0x0232       [2]    U2STA
0x0234       [2]    U2TXREG
0x0014       [2]    FARG_IntToStr_input
0x0016       [2]    FARG_IntToStr_output
0x0014       [2]    FARG_UART2_Write_Text_uart_text
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x077C       [3]    ?ICS?lstr3_sensorFunction
0x077F      [22]    ?ICS?lstr1_sensorFunction
0x0795      [25]    ?ICS?lstr2_sensorFunction
0x07AE       [3]    ?ICS?lstr5_sensorFunction
0x07B1      [26]    ?ICS?lstr4_sensorFunction
